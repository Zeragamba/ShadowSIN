{"version":3,"sources":["AppThemeProvider.tsx","Api/Model.ts","Character/CharacterAttr.tsx","Gear/Augments/AugmentAttr.ts","Gear/GearData.ts","Gear/Augments/AugmentData.ts","Gear/Effect.ts","Character/Migrations/index.ts","Character/Migrations/1-Inital.ts","Character/Migrations/2-Bio.ts","Character/Migrations/3-BalanceLog.ts","System/Attribute.ts","Gear/License/SinAttr.ts","Gear/Rcc/RccAttr.tsx","Gear/Software/Autosoft/AutosoftAttr.ts","Gear/Vehicles/VehicleAttr.tsx","Gear/Vehicles/VehicleModData.ts","Gear/Weapons/WeaponAttr.ts","Gear/Weapons/WeaponModData.ts","System/Skill/ActiveSkill/ActiveSkillId.ts","System/Skill/SkillData.ts","data/Artemis.ts","Character/CharacterPoolTypes.tsx","Gear/Armor/ArmorAttr.ts","Gear/Commlink/CommlinkAttr.ts","Gear/Kit/KitAttr.ts","Gear/Kit/KitType.ts","Gear/OtherGearData.ts","data/Silicus.ts","StorageService.ts","Helpers.ts","UI/AppBar.tsx","Pages/RootLayout.tsx","Pages/CharacterListPage.tsx","Gear/GearContext.tsx","System/AttributeProvider.tsx","System/Damage/DamageProvider.tsx","System/Damage/DamageType.ts","System/Skill/ActiveSkill/ActiveSkillData.ts","Character/CharacterProvider.tsx","Gear/Weapons/PistolSvg.tsx","UI/NavDrawer/index.tsx","UI/NavDrawer/DefaultNavDrawer.tsx","UI/NavDrawer/CharacterNavDrawer.tsx","System/Nuyen.ts","System/Source.ts","UI/InfoBlock/InfoBlock.tsx","Gear/Software/Autosoft/AutosoftData.ts","Gear/Vehicles/DicePools.tsx","UI/InfoBlock/InfoSection.tsx","UI/StatBlock.tsx","UI/AttributeBlock.tsx","Gear/GearAttributes.tsx","Gear/NestedGear.tsx","Gear/GearInfoBlock.tsx","Gear/Availability.ts","Gear/Rcc/RccInfo.tsx","UI/TrackCell.tsx","System/Damage/DamageTrack.tsx","System/DefenseRating.tsx","System/Initiative.tsx","UI/DicePool.tsx","Gear/GearDicePools.tsx","Gear/Software/Autosoft/AutosoftProvider.tsx","Gear/Software/Autosoft/AutosoftsList.tsx","Gear/Weapons/DicePools.tsx","Gear/Vehicles/VehicleInfo.tsx","Gear/Weapons/WeaponInfo.tsx","Gear/GearInfo.tsx","Gear/GearList.tsx","Pages/Character/AugmentsPage.tsx","Character/InfoBlock/CombatArea.tsx","Character/InfoBlock/Sections/AttributesSection.tsx","Character/InfoBlock/Sections/DicePoolsSection.tsx","Character/InfoBlock/Sections/EdgeTracker.tsx","Qualities/QualitiesList.tsx","Character/InfoBlock/Sections/QualitiesSection.tsx","System/Skill/ActiveSkill/ActiveSkillList.tsx","System/Skill/KnowledgeSkill/KnowledgeSkillList.tsx","System/Skill/LanguageSkill/LanguageSkillList.tsx","Character/InfoBlock/Sections/SkillSection.tsx","Character/InfoBlock/CharacterInfo.tsx","Contacts/ContactInfo.tsx","Contacts/ContactList.tsx","Gear/License/SinData.ts","Pages/Character/CharacterInfoPage.tsx","UI/BalanceLogTable.tsx","Pages/Character/KarmaPage.tsx","Pages/Character/MiscGearPage.tsx","Pages/Character/NuyenPage.tsx","Pages/Character/VehiclesPage.tsx","Pages/Character/WeaponsPage.tsx","Pages/CharacterPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","System/Damage/DamageTrack.module.scss"],"names":["displayFontFamily","theme","createTheme","palette","mode","primary","main","secondary","text","background","default","typography","h1","fontFamily","h2","h3","h4","h5","h6","AppThemeProvider","children","ThemeProvider","nextRecordId","uuid","CharacterAttr","AugmentAttr","GearType","AugmentType","AugmentSlot","AugmentGrade","EffectType","migrateCharacter","character","migrations","migration","dataVersion","version","run","bio","name","alias","metaType","ethnicity","age","gender","height","weight","updated","nuyen","id","date","Date","toISOString","note","value","karma","sort","a","b","attributeNames","registerAttrNames","names","formatAttr","type","isAugment","gear","gearType","augment","isAttrBonus","effect","attrBonus","isInitBonus","initBonus","isSkillBonus","skillBonus","body","agility","reaction","strength","willpower","logic","intuition","charisma","edge","essence","magic","resonance","grade","rating","capacity","capacityCost","SinAttr","RccAttr","AutosoftAttr","VehicleAttr","ModType","WeaponAttr","WeaponModAttr","WeaponModSlot","ActiveSkillId","collectGearEffects","filter","effects","flatMap","deviceRating","dataProcessing","firewall","attr","skill","weapon","handling","accel","speedInterval","topSpeed","armor","pilot","sensor","seat","dv","attackRatings","modes","ammo","maxRange","SkillType","skillNames","athletics","biotech","closeCombat","cracking","electronics","engineering","firearms","perception","piloting","stealth","formatSkill","skillId","Artemis","role","lifestyle","upkeep","prepaid","attributes","contacts","connection","loyalty","description","skills","active","rank","altAttr","speciality","language","knowledge","qualities","source","book","page","cost","bonus","gameEffect","addGear","attachedGear","push","forEach","item","attachedTo","smartGunIntMod","weaponMod","slot","removable","wirelessBonus","enabled","avail","rarity","license","augmentSlot","headware","augmentType","controlRig","essenceCost","used","specialtySkill","specialtyName","topOrUnder","autosofts","autosoft","rcc","slavedAutosofts","soft","map","CharacterPoolTypes","ArmorAttr","CommlinkAttr","KitAttr","KitType","OtherGearAttr","fnHar","stdWeaponMount","vehicleMod","modType","illegal","riggerInterface","vehicle","slavedTo","Array","fill","_","index","eyeware","other","bioware","sin","programSlots","medkitRating","Silicus","expertise","dicePoolBonus","poolType","barrel","dice","alpha","dmgResist","beta","defenseBonus","armorMod","kit","medKit","quantity","firstAid","characterStorageKey","characterId","charactersStorageKey","loadCharacters","savedCharacters","Error","console","log","localStorage","setItem","JSON","stringify","saveCharacter","parse","getItem","noOp","AppBar","withMenu","openMenu","Box","sx","flexGrow","position","Toolbar","IconButton","size","color","mr","onClick","Typography","variant","component","RootLayout","NavDrawer","useState","drawerOpen","setDrawerOpen","Paper","display","gridTemplateRows","bgcolor","className","square","open","closeDrawer","overflow","width","maxWidth","margin","padding","CharacterListPage","history","useHistory","characters","setCharacters","useEffect","Stack","Object","entries","Button","fontSize","justifyContent","GearContext","createContext","GearProvider","Provider","useAllGear","useContext","useGear","gearId","allGear","find","undefined","useFindGear","foundGear","useFilterGear","useAttachedGear","useGearOfType","AttributeContext","AttributeProvider","parentAttrs","useAttributes","keys","allAttributes","filtered","key","useAttribute","DamageType","DamageContext","DamageProvider","dmgSessionKey","setDmgValue","parseInt","damages","setValue","toString","isActiveSkill","CharacterContext","CharacterProvider","attrBonuses","reduce","sum","charPhysical","charStun","useCharacter","useActiveSkill","PistolSvg","xmlns","viewBox","enableBackground","d","NavButton","icon","label","routeTo","ListItem","button","ListItemIcon","SvgIcon","ListItemText","DefaultNavDrawer","Drawer","anchor","onClose","List","faUsers","CharacterNavDrawer","faUser","faCarAlt","faCogs","faArchive","Divider","faYenSign","faAward","nuyenFormatter","Intl","NumberFormat","formatNuyen","format","useNuyenBalance","parseISO","getTime","entry","formatSource","library","add","faCaretSquareDown","faCaretSquareRight","AutosoftType","VehiclePoolKeys","InfoBlock","title","titleFontSize","subtitle","titleRight","expanded","defaultExpanded","expandable","setExpanded","elevation","gap","Chip","marginLeft","verticalAlign","InfoSection","StatBlock","vertical","flexWrap","flexDirection","Stat","toFixed","whiteSpace","textAlign","AttributeBlock","length","GearAttributes","NestedGear","GearInfoBlock","blockTitleRight","Boolean","fontStyle","RccInfo","includes","slavedVehicles","maxSlaved","TrackCell","filled","hovered","setHovered","backgroundColor","userSelect","onMouseEnter","onMouseLeave","DamageTrack","max","current","useDamage","onChange","useSetDamage","onToggleCell","paddingBottom","styles","toggleCell","DamageCell","penalty","Math","floor","CharacterDefRatingStat","VehicleDefRatingStat","InitiativeStat","base","CharacterHotVrInit","CharacterColdVrInit","DicePools","skillSpecialtyBonus","specialty","toLowerCase","hasSpecialty","hasExpertise","DicePool","attrs","bonuses","groups","dmgPenaltyTypes","skillList","skillIds","useSkills","attrList","dmgPenalty","types","damageData","useDamagePenalty","attrType","total","g","group","DiceGroupDisplay","marginRight","GearDicePools","AutosoftContext","AutosoftProvider","useAutosoft","AutosoftsList","slavedIds","paddingTop","AutosoftListItem","faBroadcastTower","faSave","WeaponPoolKeys","PilotEvadePool","evasionAutosoft","evasion","maneuveringAutosoft","maneuvering","diceGroups","poolKey","pilotEvade","vehiclePhysical","RiggedEvadePool","pilotingSkill","riggedEvade","VehicleInfo","useTheme","mdScreenOrLarger","useMediaQuery","breakpoints","up","physicalMax","ceil","allAutosofts","BasicAttackPool","firearmsSkill","specialtyBonus","basicAttack","DroneAttackPool","targetingGroup","weaponName","useTargetingAutosoft","droneAttack","VehicleAttackPool","mountedAttack","RiggedAttackPool","riggedAttack","WeaponInfo","mounted","GearInfo","GearList","AugmentsPage","augments","CombatArea","stunMax","initDice","AttributesSection","charAttributes","DicePoolsSection","DodgePool","dodge","ResistDamagePool","ComposurePool","composure","JudgeIntentPool","judgeIntent","MemoryPool","memory","LiftPool","liftCarry","FirstAidPool","firstAidKit","biotechSkill","MedkitPool","EdgeTracker","edgeSessionKey","charEdgeAttr","defaultEdge","curValue","setCurValue","setEdge","QualitiesList","quality","QualitiesListItem","level","QualitiesSection","ActiveSkillList","Table","TableHead","TableRow","TableCell","TableBody","SkillListRow","KnowledgeSkillList","colSpan","LanguageSkillList","SkillSection","activeSkills","languageSkills","knowledgeSkills","CharacterInfo","nuyenBalance","ContactInfo","contact","ContactList","isSin","CharacterInfoPage","sins","BalanceLogTable","formatValue","runningTotal","logRows","align","reverse","KarmaPage","MiscGearPage","excludedGear","otherGear","NuyenPage","VehiclesPage","vehicles","WeaponsPage","weapons","CharacterPage","path","useRouteMatch","useParams","setCharacter","loadCharacter","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0bb59ecb.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { createTheme, ThemeProvider } from '@material-ui/core'\nimport { FC } from 'react'\n\nexport const displayFontFamily = '\"Comfortaa\", \"Helvetica\", \"Arial\", sans-serif'\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#CE93D8',\n    },\n    secondary: {\n      main: '#03A9F4',\n    },\n    text: {\n      primary: '#EEEEEE',\n    },\n    background: {\n      default: '#2D2736',\n    },\n  },\n\n  typography: {\n    h1: { fontFamily: displayFontFamily },\n    h2: { fontFamily: displayFontFamily },\n    h3: { fontFamily: displayFontFamily },\n    h4: { fontFamily: displayFontFamily },\n    h5: { fontFamily: displayFontFamily },\n    h6: { fontFamily: displayFontFamily },\n  },\n})\n\nexport const AppThemeProvider: FC = ({\n  children,\n}) => {\n  return (\n    <ThemeProvider theme={theme}>{children}</ThemeProvider>\n  )\n}\n","import * as uuid from 'uuid'\n\nexport type RecordId = string | null;\n\nexport function nextRecordId (): string {\n  return uuid.v4()\n}\n\nexport interface Model {\n  id: RecordId\n  created_at: string\n  updated_at: string\n}\n","import { registerAttrNames } from '../System/Attribute'\n\nexport enum CharacterAttr {\n  body = 'char.body',\n  agility = 'char.agility',\n  reaction = 'char.reaction',\n  strength = 'char.strength',\n  willpower = 'char.willpower',\n  logic = 'char.logic',\n  intuition = 'char.intuition',\n  charisma = 'char.charisma',\n  edge = 'char.edge',\n  essence = 'char.essence',\n  magic = 'char.magic',\n  resonance = 'char.resonance',\n}\n\nregisterAttrNames({\n  [CharacterAttr.body]: 'Body',\n  [CharacterAttr.agility]: 'Agility',\n  [CharacterAttr.reaction]: 'Reaction',\n  [CharacterAttr.strength]: 'Strength',\n  [CharacterAttr.willpower]: 'Willpower',\n  [CharacterAttr.logic]: 'Logic',\n  [CharacterAttr.intuition]: 'Intuition',\n  [CharacterAttr.charisma]: 'Charisma',\n  [CharacterAttr.edge]: 'Edge',\n  [CharacterAttr.essence]: 'Essence',\n  [CharacterAttr.magic]: 'Magic',\n  [CharacterAttr.resonance]: 'Resonance',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum AugmentAttr {\n  grade = 'augment.grade',\n  rating = 'augment.rating',\n  capacity = 'augment.capacity',\n  capacityCost = 'augment.capacityCost',\n}\n\nregisterAttrNames({\n  [AugmentAttr.grade]: 'Grade',\n  [AugmentAttr.rating]: 'Rating',\n  [AugmentAttr.capacity]: 'Capacity',\n  [AugmentAttr.capacityCost]: 'Capacity Cost',\n})\n","import { RecordId } from '../Api/Model'\nimport { AttrList } from '../System/Attribute'\nimport { Source } from '../System/Source'\nimport { ArmorData } from './Armor/ArmorData'\nimport { ArmorModData } from './Armor/ArmorModData'\nimport { AugmentData } from './Augments/AugmentData'\nimport { Availability } from './Availability'\nimport { Effect } from './Effect'\nimport { LicenseData } from './License/LicenseData'\nimport { SinData } from './License/SinData'\nimport { OtherGearData } from './OtherGearData'\nimport { RccData } from './Rcc/RccData'\nimport { AutosoftData } from './Software/Autosoft/AutosoftData'\nimport { VehicleData } from './Vehicles/VehicleData'\nimport { VehicleModData } from './Vehicles/VehicleModData'\nimport { WeaponData } from './Weapons/WeaponData'\nimport { WeaponModData } from './Weapons/WeaponModData'\n\nexport type Cost = number\n\nexport enum GearType {\n  armor = 'armor',\n  armorMod = 'armorMod',\n  augment = 'augment',\n  autosoft = 'autosoft',\n  license = 'license',\n  rcc = 'rcc',\n  sin = 'sin',\n  vehicle = 'vehicle',\n  vehicleMod = 'vehicleMod',\n  weapon = 'weapon',\n  weaponMod = 'weaponMod',\n\n  other = 'other',\n}\n\nexport interface BaseGearData {\n  id: RecordId\n  source?: Source\n  gearType: GearType\n  name: string\n  type: string\n  avail?: Availability\n  cost?: Cost\n  capacity?: number\n  quantity?: number\n\n  attributes?: AttrList\n  attachedTo?: RecordId\n\n  wirelessBonus?: {\n    enabled: boolean\n    description: string\n    effects?: Effect[]\n  }\n\n  description?: string\n  effects?: Effect[]\n\n  [key: string]: unknown\n}\n\nexport type GearData =\n  | OtherGearData\n  | ArmorData\n  | ArmorModData\n  | AugmentData\n  | AutosoftData\n  | LicenseData\n  | RccData\n  | SinData\n  | VehicleData\n  | VehicleModData\n  | WeaponData\n  | WeaponModData\n","import { BaseGearData, GearData, GearType } from '../GearData'\nimport { AugmentAttr } from './AugmentAttr'\n\nexport interface AugmentData extends BaseGearData {\n  augmentSlot: AugmentSlot\n  essenceCost: number\n  augmentType?: AugmentType\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade\n    [AugmentAttr.rating]?: number\n    [AugmentAttr.capacity]?: number\n    [AugmentAttr.capacityCost]?: number\n  }\n}\n\nexport function isAugment (gear: GearData): gear is AugmentData {\n  return gear.gearType === GearType.augment\n}\n\nexport enum AugmentType {\n  controlRig = 'controlRig',\n}\n\nexport enum AugmentSlot {\n  headware = 'headware',\n  eyeware = 'eyeware',\n  earwear = 'earwear',\n  bodywear = 'bodywear',\n  cyberlimb = 'cyberlimb',\n  bioware = 'bioware',\n}\n\nexport enum AugmentGrade {\n  used = 'used',\n  alpha = 'alphaware',\n  beta = 'betaware',\n  delta = 'deltaware'\n}\n","import { ActiveSkillId } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { GearData } from './GearData'\n\nexport enum EffectType {\n  attrBonus = 'attrBonus',\n  initBonus = 'initBonus',\n  skillBonus = 'skillBonus',\n  dicePoolBonus = 'dicePoolBonus',\n}\n\ninterface BaseGearEffect {\n  type: EffectType\n}\n\ninterface AttrBonus extends BaseGearEffect {\n  type: EffectType.attrBonus\n  attr: string\n  bonus: number\n}\n\nexport function isAttrBonus (effect: BaseGearEffect): effect is AttrBonus {\n  return effect.type === EffectType.attrBonus\n}\n\ninterface InitBonus extends BaseGearEffect {\n  type: EffectType.initBonus\n  dice: number\n}\n\nexport function isInitBonus (effect: BaseGearEffect): effect is InitBonus {\n  return effect.type === EffectType.initBonus\n}\n\ninterface SkillBonus extends BaseGearEffect {\n  type: EffectType.skillBonus\n  skill: ActiveSkillId\n  bonus: number\n}\n\nexport function isSkillBonus (effect: BaseGearEffect): effect is SkillBonus {\n  return effect.type === EffectType.skillBonus\n}\n\ninterface DicePoolBonus extends BaseGearEffect {\n  type: EffectType.dicePoolBonus\n  poolType: string\n  bonus: number\n}\n\nexport function isDicePoolBonus (effect: BaseGearEffect): effect is DicePoolBonus {\n  return effect.type === EffectType.dicePoolBonus\n}\n\nexport type Effect =\n  | AttrBonus\n  | InitBonus\n  | SkillBonus\n  | DicePoolBonus\n\nexport const collectGearEffects = (gear: GearData[]): Effect[] => {\n  return gear\n    .filter(gear => gear.effects)\n    .flatMap(gear => gear.effects as Effect[])\n}\n","import { CharacterData } from '../CharacterData'\nimport { InitialMigration } from './1-Inital'\nimport { BioMigration } from './2-Bio'\nimport { BalanceLogsMigration } from './3-BalanceLog'\n\nexport interface Migration {\n  version: number\n\n  run (data: SavedCharacterData): SavedCharacterData\n}\n\nexport interface SavedCharacterData {\n  dataVersion: number\n\n  [key: string]: unknown\n}\n\nexport const migrateCharacter = (character: SavedCharacterData | CharacterData): CharacterData => {\n  for (const migration of migrations) {\n    if (character.dataVersion >= migration.version) continue\n    character = migration.run(character as SavedCharacterData)\n    character.dataVersion = migration.version\n  }\n\n  return character as unknown as CharacterData\n}\n\nconst migrations: Migration[] = [\n  InitialMigration,\n  BioMigration,\n  BalanceLogsMigration,\n].sort((a, b) => a.version - b.version)\n","import { Migration } from './index'\n\nexport const InitialMigration: Migration = {\n  version: 1,\n  run: (character) => character,\n}\n","import { Migration, SavedCharacterData } from './index'\n\ninterface InputData extends SavedCharacterData {\n  name: string\n  metaType: string\n  alias?: string\n  ethnicity?: string\n  age?: number\n  gender?: string\n  height?: string\n  weight?: string\n}\n\ninterface OutputData extends SavedCharacterData {\n  bio: BioData\n}\n\ninterface BioData {\n  name: string\n  metaType: string\n  alias?: string\n  ethnicity?: string\n  age?: number\n  gender?: string\n  height?: string\n  weight?: string\n}\n\nexport const BioMigration: Migration = {\n  version: 2,\n\n  run: (character: InputData): OutputData => {\n    const bio: BioData = {\n      name: character.name,\n      alias: character.alias,\n      metaType: character.metaType,\n      ethnicity: character.ethnicity,\n\n      age: character.age,\n      gender: character.gender,\n      height: character.height,\n      weight: character.weight,\n    }\n\n    const updated: OutputData = { ...character, bio }\n    delete updated.name\n    delete updated.alias\n    delete updated.metaType\n    delete updated.ethnicity\n    delete updated.age\n    delete updated.gender\n    delete updated.height\n    delete updated.weight\n\n    return updated\n  },\n}\n","import { nextRecordId } from '../../Api/Model'\n\nimport { Migration, SavedCharacterData } from './index'\n\ninterface InputData extends SavedCharacterData {\n  nuyen: number\n  karma: number\n}\n\ninterface OutputData extends SavedCharacterData {\n  nuyen: BalanceEntry[]\n}\n\ninterface BalanceEntry {\n  id: string\n  date: string\n  note: string\n  value: number\n}\n\nexport const BalanceLogsMigration: Migration = {\n  version: 3,\n\n  run: (character: InputData): OutputData => {\n    const nuyen: BalanceEntry[] = [\n      {\n        id: nextRecordId(),\n        date: new Date().toISOString(),\n        note: 'Import balance',\n        value: character.nuyen,\n      },\n    ]\n\n    const karma: BalanceEntry[] = [\n      {\n        id: nextRecordId(),\n        date: new Date().toISOString(),\n        note: 'Import balance',\n        value: character.karma,\n      },\n    ]\n\n    return { ...character, nuyen, karma }\n  },\n}\n","export type AttrType = string\nexport type AttrValue = number | string | null | undefined\nexport type AttrList = Record<AttrType, AttrValue>\nexport type AttrNames = Record<AttrType, string>\n\nlet attributeNames: AttrNames = {}\n\nexport const registerAttrNames = (names: AttrNames): void => {\n  attributeNames = { ...attributeNames, ...names }\n}\n\nexport const formatAttr = (type: string): string => {\n  return attributeNames[type] || type\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum SinAttr {\n  rating = 'sin.rating',\n}\n\nregisterAttrNames({\n  [SinAttr.rating]: 'Rating',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum RccAttr {\n  deviceRating = 'rcc.deviceRating',\n  dataProcessing = 'rcc.dataProcessing',\n  firewall = 'rcc.firewall'\n}\n\nregisterAttrNames({\n  [RccAttr.deviceRating]: 'Device Rating',\n  [RccAttr.dataProcessing]: 'Data Processing',\n  [RccAttr.firewall]: 'Firewall',\n})\n","import { registerAttrNames } from '../../../System/Attribute'\n\nexport enum AutosoftAttr {\n  rating = 'autosoft.rating',\n  attr = 'autosoft.attr',\n  skill = 'autosoft.skill',\n  weapon = 'autosoft.weapon',\n}\n\nregisterAttrNames({\n  [AutosoftAttr.rating]: 'Rating',\n  [AutosoftAttr.attr]: 'Attr',\n  [AutosoftAttr.skill]: 'Skill',\n  [AutosoftAttr.weapon]: 'Weapon',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum VehicleAttr {\n  handling = 'vehicle.handling',\n  accel = 'vehicle.accel',\n  speedInterval = 'vehicle.speedInterval',\n  topSpeed = 'vehicle.topSpeed',\n  body = 'vehicle.body',\n  armor = 'vehicle.armor',\n  pilot = 'vehicle.pilot',\n  sensor = 'vehicle.sensor',\n  seat = 'vehicle.seat',\n}\n\nregisterAttrNames({\n  [VehicleAttr.handling]: 'Handling',\n  [VehicleAttr.accel]: 'Accel',\n  [VehicleAttr.speedInterval]: 'Speed Interval',\n  [VehicleAttr.topSpeed]: 'Top Speed',\n  [VehicleAttr.body]: 'Body',\n  [VehicleAttr.armor]: 'Armor',\n  [VehicleAttr.pilot]: 'Pilot',\n  [VehicleAttr.sensor]: 'Sensor',\n  [VehicleAttr.seat]: 'Seat',\n})\n","import { BaseGearData, GearType } from '../GearData'\n\nexport enum ModType {\n  other = 'vehicleMod.other',\n  riggerInterface = 'vehicleMod.riggerInterface',\n  stdWeaponMount = 'vehicleMod.stdWeaponMount',\n  heavyWeaponMount = 'vehicleMod.heavyWeaponMount',\n  manualControl = 'vehicleMod.manualControl',\n}\n\nexport interface VehicleModData extends BaseGearData {\n  gearType: GearType.vehicleMod\n  modType: ModType\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum WeaponAttr {\n  dv = 'weapon.dv',\n  attackRatings = 'weapon.attackRatings',\n  modes = 'weapon.modes',\n  ammo = 'weapon.ammo',\n  maxRange = 'weapon.maxRange',\n}\n\nregisterAttrNames({\n  [WeaponAttr.dv]: 'DV',\n  [WeaponAttr.attackRatings]: 'Atk. Ratings',\n  [WeaponAttr.modes]: 'Modes',\n  [WeaponAttr.ammo]: 'Ammo',\n  [WeaponAttr.maxRange]: 'Max Range',\n})\n","import { BaseGearData, GearType } from '../GearData'\n\nexport enum WeaponModAttr {\n\n}\n\nexport interface WeaponModData extends BaseGearData {\n  gearType: GearType.weaponMod\n  slot: WeaponModSlot | null\n  removable?: boolean\n}\n\nexport enum WeaponModSlot {\n  top = 'Top',\n  barrel = 'Barrel',\n  under = 'Under',\n  topOrUnder = 'Top or Under'\n}\n","export type SkillNames = Record<string, string>\n\nexport enum ActiveSkillId {\n  athletics = 'athletics',\n  biotech = 'biotech',\n  closeCombat = 'closeCombat',\n  cracking = 'cracking',\n  electronics = 'electronics',\n  engineering = 'engineering',\n  firearms = 'firearms',\n  perception = 'perception',\n  piloting = 'piloting',\n  stealth = 'stealth',\n}\n\nlet skillNames: SkillNames = {\n  [ActiveSkillId.athletics]: 'Athletics',\n  [ActiveSkillId.biotech]: 'Biotech',\n  [ActiveSkillId.closeCombat]: 'Close Combat',\n  [ActiveSkillId.cracking]: 'Cracking',\n  [ActiveSkillId.electronics]: 'Electronics',\n  [ActiveSkillId.engineering]: 'Engineering',\n  [ActiveSkillId.firearms]: 'Firearms',\n  [ActiveSkillId.perception]: 'Perception',\n  [ActiveSkillId.piloting]: 'Piloting',\n  [ActiveSkillId.stealth]: 'Stealth',\n}\n\nexport const registerSkillNames = (names: SkillNames): void => {\n  skillNames = { ...skillNames, ...names }\n}\n\nexport const formatSkill = (skillId: string): string => {\n  return skillNames[skillId] || skillId\n}\n","import { ActiveSkillData } from './ActiveSkill/ActiveSkillData'\nimport { KnowledgeSkillData } from './KnowledgeSkill/KnowledgeSkillData'\nimport { LanguageSkillData } from './LanguageSkill/LanguageSkillData'\n\nexport enum SkillType {\n  active = 'active',\n  language = 'language',\n  knowledge = 'knowledge',\n}\n\nexport interface BasicSkillData {\n  type: SkillType\n}\n\nexport type SkillData =\n  | ActiveSkillData\n  | LanguageSkillData\n  | KnowledgeSkillData\n","import { nextRecordId } from '../Api/Model'\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { CharacterData } from '../Character/CharacterData'\nimport { AugmentAttr } from '../Gear/Augments/AugmentAttr'\nimport { AugmentData, AugmentGrade, AugmentSlot, AugmentType } from '../Gear/Augments/AugmentData'\nimport { EffectType } from '../Gear/Effect'\nimport { GearData, GearType } from '../Gear/GearData'\nimport { SinAttr } from '../Gear/License/SinAttr'\nimport { SinData } from '../Gear/License/SinData'\nimport { OtherGearData } from '../Gear/OtherGearData'\nimport { RccAttr } from '../Gear/Rcc/RccAttr'\nimport { RccData } from '../Gear/Rcc/RccData'\nimport { AutosoftAttr } from '../Gear/Software/Autosoft/AutosoftAttr'\nimport { AutosoftData } from '../Gear/Software/Autosoft/AutosoftData'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { VehicleData } from '../Gear/Vehicles/VehicleData'\nimport { ModType, VehicleModData } from '../Gear/Vehicles/VehicleModData'\nimport { WeaponAttr } from '../Gear/Weapons/WeaponAttr'\nimport { WeaponData } from '../Gear/Weapons/WeaponData'\nimport { WeaponModData, WeaponModSlot } from '../Gear/Weapons/WeaponModData'\nimport { ActiveSkillId } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { SkillType } from '../System/Skill/SkillData'\n\nexport const Artemis: CharacterData = {\n  id: 'aebc2a1a-d12e-487e-aa5b-1f2daa18817a',\n  dataVersion: 3,\n\n  bio: {\n    name: 'Jessica Nelson',\n    alias: 'Artemis',\n    role: 'rigger',\n    gender: 'female',\n    metaType: 'Elf',\n  },\n\n  karma: [\n    {\n      id: '0b622011-0e72-4e75-883b-73a565b0e35f',\n      date: '2021-09-11',\n      value: 2,\n      note: 'Session reward',\n    },\n    {\n      id: '49de36c4-cc58-4484-96f7-0fac55fe72db',\n      date: '2021-08-28',\n      value: 14,\n      note: 'Balance import',\n    },\n  ],\n\n  nuyen: [\n    {\n      id: 'ff344122-9196-4c9f-98f6-42620097383a',\n      date: '2021-08-28',\n      value: 18_070,\n      note: 'Balance import',\n    },\n  ],\n\n  lifestyle: {\n    grade: 'middle',\n    upkeep: 3_000,\n    prepaid: 6,\n  },\n\n  attributes: {\n    [CharacterAttr.body]: 1,\n    [CharacterAttr.agility]: 3,\n    [CharacterAttr.reaction]: 1,\n    [CharacterAttr.strength]: 1,\n    [CharacterAttr.willpower]: 2,\n    [CharacterAttr.logic]: 7,\n    [CharacterAttr.intuition]: 5,\n    [CharacterAttr.charisma]: 2,\n    [CharacterAttr.edge]: 4,\n  },\n\n  contacts: [\n    {\n      name: 'James Serif',\n      connection: 2,\n      loyalty: 2,\n      description: 'Drone Parts Dealer',\n    },\n    {\n      name: 'Frank',\n      connection: 2,\n      loyalty: 2,\n      description: 'Matrix Developer',\n    },\n    {\n      name: 'George Crabtree',\n      connection: 2,\n      loyalty: 2,\n      description: 'Lone Star officer',\n    },\n  ],\n\n  skills: [\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.firearms,\n      rank: 3,\n      attr: 'agility',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.electronics,\n      rank: 4,\n      attr: 'logic',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.cracking,\n      rank: 3,\n      attr: 'logic',\n      altAttr: 'intuition',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.piloting,\n      rank: 6,\n      attr: 'logic',\n      speciality: 'Ground Craft',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.engineering,\n      rank: 5,\n      attr: 'logic',\n      altAttr: 'intuition',\n    },\n    {\n      type: SkillType.language,\n      name: 'English',\n      rank: 'native',\n    },\n    {\n      type: SkillType.language,\n      name: 'Elven',\n      rank: 'speciality',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Drone Models',\n    },\n    {\n      type: SkillType.knowledge,\n      name: '80/90s Pop Culture',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Trideo Series',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Security Systems',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Virtual Nightclubs',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Tech Companies',\n    },\n  ],\n\n  gear: [],\n\n  qualities: [\n    {\n      name: 'Exceptional (Logic)',\n      source: { book: 'COR', page: 2 },\n      cost: 12,\n    },\n    {\n      name: 'Social Stress (Large Groups)',\n      source: { book: 'COR', page: 2 },\n      bonus: 8,\n    },\n    {\n      name: 'Juryrigger',\n      source: { book: 'COR', page: 2 },\n      cost: 12,\n    },\n    {\n      name: 'Photographic Memory',\n      source: { book: 'COR', page: 2 },\n      cost: 12,\n    },\n    {\n      name: 'Analytical Mind',\n      source: { book: 'COR', page: 2 },\n      gameEffect: 'Bonus edge when making Logic tests',\n      cost: 3,\n    },\n    {\n      name: 'Ambidextrous',\n      source: { book: 'COR', page: 2 },\n      cost: 4,\n    },\n  ],\n}\n\nexport function addGear<T extends GearData = OtherGearData> (gear: T, attachedGear: GearData[] = []): T {\n  gear = { ...gear, dataVersion: 1, id: nextRecordId() };\n\n  (Artemis.gear as GearData[]).push(gear)\n  attachedGear.forEach(item => item.attachedTo = gear.id)\n\n  return gear\n}\n\nconst smartGunIntMod: WeaponModData = {\n  id: null,\n  source: { book: 'COR', page: 260 },\n  gearType: GearType.weaponMod,\n  name: 'Smart Gun Int.',\n  type: 'Weapon Mod',\n  cost: 500,\n\n  slot: null,\n  removable: false,\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'You gain a +1 dice pool bonus. Gain a bonus Minor Action on a turn when ' +\n      'you use the Reload Smartgun or Change Device Mode actions to eject a ' +\n      'clip or change fire mode.',\n  },\n}\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Control Rig',\n  type: 'Headwear Augment',\n  avail: { rarity: 3, license: true },\n  cost: 60_000,\n  augmentSlot: AugmentSlot.headware,\n  augmentType: AugmentType.controlRig,\n  essenceCost: 2.2,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 2,\n  },\n})\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'COR', page: 254 },\n  gearType: GearType.weapon,\n  name: 'FN P93 Predator',\n  type: 'Submachine Gun',\n  avail: { rarity: 4, license: true },\n  cost: 925,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '9/12/7/-/-',\n    [WeaponAttr.ammo]: '50(c)',\n  },\n\n  specialtySkill: ActiveSkillId.firearms,\n  specialtyName: 'automatics',\n}, [\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'COR', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Rigid Stock',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'COR', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Laser sight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'COR', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Flashlight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear(smartGunIntMod),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'COR', page: 252 },\n  gearType: GearType.weapon,\n  name: 'Colt America L36',\n  type: 'Light Pistol',\n  avail: { rarity: 2, license: true },\n  cost: 230,\n\n  attributes: {\n    [WeaponAttr.dv]: '2P',\n    [WeaponAttr.modes]: 'SA',\n    [WeaponAttr.attackRatings]: '8/8/6/-/-',\n    [WeaponAttr.ammo]: '11(c)',\n  },\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'The user can alter ownership with a Minor Action',\n  },\n\n  specialtySkill: ActiveSkillId.firearms,\n  specialtyName: 'pistols',\n}, [\n  addGear(smartGunIntMod),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'COR', page: 253 },\n  gearType: GearType.weapon,\n  name: 'Ares Predator VI',\n  type: 'Heavy Pistol',\n  avail: { rarity: 2, license: true },\n  cost: 750,\n\n  attributes: {\n    [WeaponAttr.dv]: '3P',\n    [WeaponAttr.modes]: 'SA/BF',\n    [WeaponAttr.attackRatings]: '10/10/8/-/-',\n    [WeaponAttr.ammo]: '15(c)',\n  },\n\n  specialtySkill: ActiveSkillId.firearms,\n  specialtyName: 'pistols',\n}, [\n  addGear(smartGunIntMod),\n])\n\nconst autosofts: AutosoftData[] = [\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'FN-HAR Targeting',\n    type: 'Targeting Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.weapon]: 'FN-HAR',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'Clearsight',\n    type: 'Autosoft',\n    avail: { rarity: 7 },\n    cost: 3_500,\n\n    attributes: {\n      [AutosoftAttr.rating]: 7,\n      [AutosoftAttr.skill]: 'Perception',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'Evasion',\n    type: 'Autosoft',\n    avail: { rarity: 5 },\n    cost: 2_500,\n\n    attributes: {\n      [AutosoftAttr.rating]: 5,\n      [AutosoftAttr.skill]: 'Evasion',\n      [AutosoftAttr.attr]: 'Pilot',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'Maneuvering',\n    type: 'Autosoft',\n    avail: { rarity: 5 },\n    cost: 2_500,\n\n    attributes: {\n      [AutosoftAttr.rating]: 5,\n      [AutosoftAttr.skill]: 'Piloting',\n      [AutosoftAttr.attr]: 'Pilot',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'Electronic Warfare',\n    type: 'Autosoft',\n    avail: { rarity: 7 },\n    cost: 3_500,\n\n    attributes: {\n      [AutosoftAttr.rating]: 7,\n      [AutosoftAttr.skill]: 'Cracking',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n]\n\nconst rcc: RccData = addGear({\n  id: null,\n  gearType: GearType.rcc,\n  name: 'Proteus Poseidon',\n  type: 'RCC',\n  avail: { rarity: 6, license: true },\n  cost: 68_000,\n\n  attributes: {\n    [RccAttr.deviceRating]: 5,\n    [RccAttr.dataProcessing]: 5,\n    [RccAttr.firewall]: 5,\n  },\n\n  slavedAutosofts: [],\n})\n\nautosofts.forEach(soft => soft.attachedTo = rcc.id)\nrcc.slavedAutosofts = autosofts.map(soft => soft.id)\n\nconst fnHar: WeaponData = {\n  id: null,\n  gearType: GearType.weapon,\n  name: 'FN-HAR',\n  type: 'Rifle',\n  avail: { rarity: 3, license: true },\n  cost: 2_100,\n  attributes: {\n    [WeaponAttr.dv]: '5P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '3/11/10/6/1',\n    [WeaponAttr.ammo]: '35(c)',\n  },\n\n  specialtySkill: ActiveSkillId.firearms,\n  specialtyName: 'Automatics',\n}\n\nconst stdWeaponMount: VehicleModData = {\n  id: null,\n  gearType: GearType.vehicleMod,\n  modType: ModType.stdWeaponMount,\n  name: 'Standard Weapon Mount',\n  type: 'vehicle mod',\n  avail: { rarity: 5, illegal: true },\n  cost: 4_500,\n}\n\nconst riggerInterface: VehicleModData = {\n  id: null,\n  gearType: GearType.vehicleMod,\n  modType: ModType.riggerInterface,\n  name: 'Rigger Interface',\n  type: 'vehicle mod',\n  avail: { rarity: 2, license: true },\n  cost: 1_000,\n}\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Range Rover Model 2080',\n  type: 'Van',\n  cost: 5_000,\n  avail: { rarity: 2 },\n\n  attributes: {\n    [VehicleAttr.handling]: '4/5',\n    [VehicleAttr.accel]: 12,\n    [VehicleAttr.speedInterval]: 20,\n    [VehicleAttr.topSpeed]: 160,\n    [VehicleAttr.body]: 16,\n    [VehicleAttr.armor]: 10,\n    [VehicleAttr.pilot]: 4,\n    [VehicleAttr.sensor]: 4,\n    [VehicleAttr.seat]: 4,\n  },\n\n  slavedTo: rcc.id,\n}, [\n  addGear(riggerInterface),\n  rcc,\n])\n\nnew Array(2).fill(null).forEach((_, index) => {\n  addGear<VehicleData>({\n    id: null,\n    gearType: GearType.vehicle,\n    type: 'Medium Rotor Drone',\n    name: `MCT-Nissan Roto-drone ${index + 1}`,\n    cost: 5_000,\n    avail: { rarity: 2 },\n\n    attributes: {\n      [VehicleAttr.handling]: 3,\n      [VehicleAttr.accel]: 20,\n      [VehicleAttr.speedInterval]: 30,\n      [VehicleAttr.topSpeed]: 160,\n      [VehicleAttr.body]: 5,\n      [VehicleAttr.armor]: 6,\n      [VehicleAttr.pilot]: 3,\n      [VehicleAttr.sensor]: 2,\n      [VehicleAttr.seat]: null,\n    },\n\n    slavedTo: rcc.id,\n  }, [\n    addGear(riggerInterface),\n    addGear(stdWeaponMount, [\n      addGear(fnHar),\n    ]),\n  ])\n})\n\nnew Array(4).fill(null).forEach((_, index) => {\n  addGear<VehicleData>({\n    id: null,\n    gearType: GearType.vehicle,\n    name: `Aztech Crawler ${index + 1}`,\n    type: 'Small Anthro Drone',\n    cost: 4_500,\n    avail: { rarity: 2 },\n\n    attributes: {\n      [VehicleAttr.handling]: '3/4',\n      [VehicleAttr.accel]: 8,\n      [VehicleAttr.speedInterval]: 10,\n      [VehicleAttr.topSpeed]: 30,\n      [VehicleAttr.body]: 6,\n      [VehicleAttr.armor]: 2,\n      [VehicleAttr.pilot]: 2,\n      [VehicleAttr.sensor]: 2,\n      [VehicleAttr.seat]: null,\n    },\n\n    slavedTo: rcc.id,\n  }, [\n    addGear(riggerInterface),\n    addGear(stdWeaponMount, [\n      addGear(fnHar),\n    ]),\n  ])\n})\n\nnew Array(1).fill(null).forEach((_, index) => {\n  addGear<VehicleData>({\n    id: null,\n    gearType: GearType.vehicle,\n    type: 'Small Rotor Drone',\n    name: `Cyberspace Designs Quadrotor ${index + 1}`,\n    cost: 5_000,\n    avail: { rarity: 2 },\n\n    attributes: {\n      [VehicleAttr.handling]: 2,\n      [VehicleAttr.accel]: 15,\n      [VehicleAttr.speedInterval]: 20,\n      [VehicleAttr.topSpeed]: 120,\n      [VehicleAttr.body]: 3,\n      [VehicleAttr.armor]: 1,\n      [VehicleAttr.pilot]: 3,\n      [VehicleAttr.sensor]: 2,\n      [VehicleAttr.seat]: null,\n    },\n\n    slavedTo: rcc.id,\n  }, [\n    addGear(riggerInterface),\n  ])\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Cybereyes',\n  type: 'Augment',\n  source: { book: 'COR', page: 285 },\n  avail: { rarity: 2 },\n  cost: 5_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 4,\n    [AugmentAttr.capacity]: 12,\n  },\n\n  essenceCost: 0.44,\n  augmentSlot: AugmentSlot.eyeware,\n}, [\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Smartlink',\n    type: 'Cybereye Augment',\n    source: { book: 'COR', page: 285 },\n    avail: { rarity: 2, license: true },\n    cost: 2_000,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.used,\n      [AugmentAttr.capacityCost]: 3,\n    },\n\n    essenceCost: 0.22,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Imagelink',\n    type: 'Cybereye Augment',\n    source: { book: 'COR', page: 285 },\n    avail: { rarity: 1 },\n    cost: 750,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.used,\n    },\n\n    essenceCost: 0.11,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Low-Light Vision',\n    type: 'Cybereye Augment',\n    source: { book: 'COR', page: 285 },\n    avail: { rarity: 1 },\n    cost: 750,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.used,\n      [AugmentAttr.capacityCost]: 2,\n    },\n\n    essenceCost: 0.11,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Thermographic Vision',\n    type: 'Cybereye Augment',\n    source: { book: 'COR', page: 285 },\n    avail: { rarity: 1 },\n    cost: 1_000,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.used,\n      [AugmentAttr.capacityCost]: 2,\n    },\n\n    essenceCost: 0.11,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Vision Enhancement',\n    type: 'Cybereye Augment',\n    source: { book: 'COR', page: 285 },\n    avail: { rarity: 2 },\n    cost: 2_000,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.used,\n      [AugmentAttr.capacityCost]: 2,\n    },\n\n    essenceCost: 0.11,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n])\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Commlink',\n  type: 'Headware Augment',\n  source: { book: 'COR', page: 283 },\n  avail: { rarity: 1 },\n  cost: 1_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n  },\n\n  essenceCost: 0.11,\n  augmentSlot: AugmentSlot.headware,\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Hermes Ikon',\n    type: 'Commlink',\n    source: { book: 'COR', page: 267 },\n    avail: { rarity: 3 },\n    cost: 5_000,\n\n    attributes: {\n      'commlink.deviceRating': 5,\n      'commlink.attributes': '3/0',\n      'commlink.programSlots': 2,\n    },\n\n    essenceCost: 0.11,\n    augmentSlot: AugmentSlot.bioware,\n  }),\n])\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Reaction Enahancers',\n  type: 'Bodyware Augment',\n  source: { book: 'COR', page: 283 },\n  avail: { rarity: 3, license: true },\n  cost: 22_500,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n  },\n\n  essenceCost: 0.99,\n  augmentSlot: AugmentSlot.headware,\n\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.reaction, bonus: 3 },\n  ],\n})\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Davina Hasselhoff',\n  type: 'Fake SIN',\n  source: { book: 'COR', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 15_000,\n\n  description: 'General use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 6,\n  },\n})\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Sara McCabe',\n  type: 'Fake SIN',\n  source: { book: 'COR', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 10_000,\n\n  description: 'Runner SIN',\n\n  attributes: {\n    [SinAttr.rating]: 4,\n  },\n})\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Jane Smith',\n  type: 'Fake SIN',\n  source: { book: 'COR', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 5_000,\n\n  description: 'Burner SIN',\n\n  attributes: {\n    [SinAttr.rating]: 2,\n  },\n})\n","export enum CharacterPoolTypes {\n  dodge = 'character.dodge',\n  dmgResist = 'character.dmgResist',\n  composure = 'character.composure',\n  judgeIntent = 'character.judgeIntent',\n  memory = 'character.memory',\n  liftCarry = 'character.liftCarry',\n  firstAid = 'character.firstAid',\n}\n","export enum ArmorAttr {\n  defenseBonus = 'armor.defenseBonus',\n  capacity = 'armor.capacity',\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum CommlinkAttr {\n  deviceRating = 'commlink.deviceRating',\n  attributes = 'commlink.attributes',\n  programSlots = 'commlink.programSlots',\n}\n\nregisterAttrNames({\n  [CommlinkAttr.deviceRating]: 'Device Rating',\n  [CommlinkAttr.attributes]: 'Attributes',\n  [CommlinkAttr.programSlots]: 'Program Slots',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum KitAttr {\n  medkitRating = 'medkit.rating',\n}\n\nregisterAttrNames({\n  [KitAttr.medkitRating]: 'Rating',\n})\n","export enum KitType {\n  firstAid = 'kit.firstAid',\n  medKit = 'kit.medKit',\n}\n","import { AttrValue, registerAttrNames } from '../System/Attribute'\nimport { BaseGearData, GearType } from './GearData'\n\nexport interface OtherGearData extends BaseGearData {\n  gearType: GearType.other\n\n  attributes?: {\n    [type: string]: AttrValue\n  }\n}\n\nexport enum OtherGearAttr {\n  capacity = 'other.capacity',\n  capacityCost = 'other.capacityCost',\n  rating = 'other.rating',\n}\n\nregisterAttrNames({\n  [OtherGearAttr.capacity]: 'Capacity',\n  [OtherGearAttr.capacityCost]: 'Capacity Cost',\n  [OtherGearAttr.rating]: 'Rating',\n})\n","import { nextRecordId } from '../Api/Model'\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { CharacterData } from '../Character/CharacterData'\nimport { CharacterPoolTypes } from '../Character/CharacterPoolTypes'\nimport { ArmorAttr } from '../Gear/Armor/ArmorAttr'\nimport { ArmorData } from '../Gear/Armor/ArmorData'\nimport { AugmentAttr } from '../Gear/Augments/AugmentAttr'\nimport { AugmentData, AugmentGrade, AugmentSlot } from '../Gear/Augments/AugmentData'\nimport { CommlinkAttr } from '../Gear/Commlink/CommlinkAttr'\nimport { EffectType } from '../Gear/Effect'\nimport { GearData, GearType } from '../Gear/GearData'\nimport { KitAttr } from '../Gear/Kit/KitAttr'\nimport { KitType } from '../Gear/Kit/KitType'\nimport { SinAttr } from '../Gear/License/SinAttr'\nimport { SinData } from '../Gear/License/SinData'\nimport { OtherGearAttr, OtherGearData } from '../Gear/OtherGearData'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { VehicleData } from '../Gear/Vehicles/VehicleData'\nimport { ModType } from '../Gear/Vehicles/VehicleModData'\nimport { WeaponAttr } from '../Gear/Weapons/WeaponAttr'\nimport { WeaponData } from '../Gear/Weapons/WeaponData'\nimport { WeaponModData, WeaponModSlot } from '../Gear/Weapons/WeaponModData'\nimport { ActiveSkillId } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { SkillType } from '../System/Skill/SkillData'\n\nexport const Silicus: CharacterData = {\n  id: 'fc7d8ad1-c25e-4c1b-8c13-0e795a449ef2',\n  dataVersion: 3,\n\n  bio: {\n    name: 'Silicus',\n    metaType: 'Elf',\n    gender: 'male',\n    role: 'Street Samurai',\n  },\n\n  karma: [\n    {\n      id: '06c06985-4024-45e3-9a73-a49375e0b095',\n      date: '2021-09-12',\n      value: 2,\n      note: 'Session reward',\n    },\n  ],\n\n  nuyen: [\n    {\n      id: 'bb9f128e-641a-4a71-a980-b46ae4358b32',\n      date: '2021-08-28T00:03',\n      value: -9_000,\n      note: '3 months lifestyle (middle)',\n    },\n    {\n      id: '737b40e5-9820-4382-98f5-2d564565ed4e',\n      date: '2021-08-28T00:02',\n      value: -439_575,\n      note: 'Char creation Gear',\n    },\n    {\n      id: '24b4f26a-0c8e-42d0-b8e9-49e668785783',\n      date: '2021-08-28T00:01',\n      value: 450_000,\n      note: 'Char creation',\n    },\n  ],\n\n  lifestyle: {\n    grade: 'middle',\n    upkeep: 3_000,\n    prepaid: 3,\n  },\n\n  attributes: {\n    [CharacterAttr.body]: 4,\n    [CharacterAttr.agility]: 8,\n    [CharacterAttr.reaction]: 2,\n    [CharacterAttr.strength]: 1,\n    [CharacterAttr.willpower]: 1,\n    [CharacterAttr.logic]: 5,\n    [CharacterAttr.intuition]: 4,\n    [CharacterAttr.charisma]: 3,\n    [CharacterAttr.edge]: 4,\n  },\n\n  contacts: [\n    {\n      name: 'Hunter Morgan',\n      connection: 3,\n      loyalty: 3,\n      description: 'Researcher at Kamino Biotech',\n    },\n    {\n      name: 'Johennes',\n      connection: 3,\n      loyalty: 3,\n      description: 'Fence',\n    },\n    {\n      name: 'Dr. Weber',\n      connection: 3,\n      loyalty: 3,\n      description: 'Ripperdoc',\n    },\n  ],\n\n  skills: [\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.biotech,\n      rank: 5,\n      attr: 'logic',\n      altAttr: 'intuition',\n      expertise: 'First Aid',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.firearms,\n      rank: 6,\n      attr: 'agility',\n      speciality: 'Automatics',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.perception,\n      rank: 3,\n      attr: 'intuition',\n      altAttr: 'logic',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.closeCombat,\n      rank: 5,\n      attr: 'agility',\n    },\n    {\n      type: SkillType.language,\n      name: 'English',\n      rank: 'native',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Law Enforcement Corps',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Security Systems',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Tech Companies',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Weapon Manufacturers',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Local Gangs',\n    },\n  ],\n\n  gear: [],\n\n  qualities: [\n    {\n      name: 'Analytical Mind',\n      source: { book: 'COR', page: 70 },\n      gameEffect: 'Bonus edge when making Logic tests',\n      cost: 3,\n    },\n    {\n      name: 'Exceptional (Agility)',\n      source: { book: 'COR', page: 71 },\n      gameEffect: 'Increase max of one Physical or Mental attribute by 1',\n      cost: 12,\n    },\n  ],\n}\n\nfunction addGear<T extends GearData = OtherGearData> (gear: T, attachedGear: GearData[] = []): T {\n  gear = { ...gear, dataVersion: 1, id: nextRecordId() };\n\n  (Silicus.gear as GearData[]).push(gear)\n  attachedGear.forEach(item => item.attachedTo = gear.id)\n\n  return gear\n}\n\nconst smartGunIntMod: WeaponModData = {\n  id: null,\n  source: { book: 'COR', page: 260 },\n  gearType: GearType.weaponMod,\n  name: 'Smart Gun Int.',\n  type: 'Weapon Mod',\n  cost: 500,\n\n  slot: null,\n  removable: false,\n\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'You gain a +1 dice pool bonus. Gain a bonus Minor Action on a turn when ' +\n      'you use the Reload Smartgun or Change Device Mode actions to eject a ' +\n      'clip or change fire mode.',\n    effects: [\n      { type: EffectType.dicePoolBonus, poolType: 'weapon.all', bonus: 1 },\n    ],\n  },\n}\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'COR', page: 254 },\n  gearType: GearType.weapon,\n  name: 'FN P93 Predator',\n  type: 'Submachine Gun',\n  avail: { rarity: 4, license: true },\n  cost: 925,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '9/12/7/-/-',\n    [WeaponAttr.ammo]: '50(c)',\n  },\n\n  specialtySkill: ActiveSkillId.firearms,\n  specialtyName: 'automatics',\n}, [\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'COR', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Rigid Stock',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'COR', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Laser sight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'COR', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Flashlight',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear(smartGunIntMod),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'COR', page: 259 },\n    gearType: GearType.weaponMod,\n    name: 'Gas Vent',\n    type: 'Weapon Mod',\n    avail: { rarity: 3 },\n    cost: 500,\n\n    description: 'Removes the attack rating penalty for Semi-Automatic fire, and reduces it to 2 for Burst Fire',\n\n    slot: WeaponModSlot.barrel,\n    removable: false,\n  }),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'COR', page: 255 },\n  gearType: GearType.weapon,\n  name: 'Ares Viper Silvergun',\n  type: 'Heavy Pistol',\n  avail: { rarity: 4, license: true },\n  cost: 610,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P(f)',\n    [WeaponAttr.modes]: 'SA/BF',\n    [WeaponAttr.attackRatings]: '12/8/6/-/-',\n    [WeaponAttr.ammo]: '30(c)',\n  },\n\n  specialtySkill: ActiveSkillId.firearms,\n  specialtyName: 'pistols',\n}, [\n  addGear(smartGunIntMod),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'COR', page: 260 },\n    gearType: GearType.weaponMod,\n    name: 'Quick Draw Holster',\n    type: 'Weapon Mod',\n    avail: { rarity: 2 },\n    cost: 175,\n\n    description: 'Use of a Quick-Draw holster provides a bonus Minor action when the Quick-Draw Action is taken',\n    slot: null,\n  }),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'COR', page: 255 },\n  gearType: GearType.weapon,\n  name: 'Defiance SuperShocker',\n  type: 'Taser',\n  avail: { rarity: 1 },\n  cost: 340,\n\n  attributes: {\n    [WeaponAttr.dv]: '6S(e)',\n    [WeaponAttr.modes]: 'SS',\n    [WeaponAttr.attackRatings]: '10/6/-/-/-',\n    [WeaponAttr.ammo]: '4(m)',\n    [WeaponAttr.maxRange]: '20m',\n  },\n}, [\n  addGear(smartGunIntMod),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'COR', page: 254 },\n  gearType: GearType.weapon,\n  name: 'Survival Knife',\n  type: 'Blade',\n  avail: { rarity: 2 },\n  cost: 250,\n\n  attributes: {\n    [WeaponAttr.dv]: '3P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '8/2/-/-/-',\n    [WeaponAttr.maxRange]: '20m',\n  },\n\n  specialtySkill: ActiveSkillId.closeCombat,\n  specialtyName: 'Blades',\n})\n\naddGear<AugmentData>({\n  id: null,\n  name: 'Synaptic Booster',\n  type: 'Cultured Bioware Augment',\n  gearType: GearType.augment,\n  source: { book: 'COR', page: 293 },\n  avail: { rarity: 4, license: true },\n  cost: 142_500,\n\n  description: (`\n    The nerve cells making up the spinal cord are both broadened and replicated \n    with this bioware, allowing for neural bandwidth. The result is a much faster \n    reaction time. The booster confers a bonus of +1 Reaction (and the accompanying \n    adjustment to Initiative Score), 1 additional Initiative Die, and 1 additional\n    Minor Action per point of Rating. The synaptic booster cannot be combined with \n    any other form of Reaction or Initiative enhancement. Unlike other enhancements,\n    this cannot be turned off, leaving the use in a perpetual state of being in\n    surrounded by slow motion.  \n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n  },\n\n  essenceCost: 1.65,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.reaction, bonus: 3 },\n    { type: EffectType.initBonus, dice: 3 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Platelet Factories',\n  type: 'Bioware Augment',\n  source: { book: 'COR', page: 292 },\n  avail: { rarity: 3 },\n  cost: 8_500,\n\n  description: (`\n    Any time you would take 2 or more boxes of damage to your Physical Condition \n    Monitor, reduce the damage by 1 box.\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n  },\n\n  essenceCost: 0.22,\n  augmentSlot: AugmentSlot.bioware,\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Muscle Toner',\n  type: 'Bioware Augment',\n  source: { book: 'COR', page: 292 },\n  avail: { rarity: 3, license: true },\n  cost: 64_000,\n\n  description: (`\n    Muscle Toner adds it's rating to your Agility attribute. This bioware is incompatible\n    with augmentations that increase Agility, including the muscle replacement cyberware\n    and enhanced articulations bioware\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 4,\n  },\n\n  essenceCost: 0.88,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.agility, bonus: 4 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Bone Density',\n  type: 'Bioware Augment',\n  source: { book: 'COR', page: 291 },\n  avail: { rarity: 3, license: true },\n  cost: 24_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.alpha,\n    [AugmentAttr.rating]: 4,\n  },\n\n  description: (`\n      Increases Body during damage resistance test by rating. \n      Melee damage: 3P, Atk. Rating: +2\n  `),\n\n  essenceCost: 0.48,\n  augmentSlot: AugmentSlot.bioware,\n\n  effects: [\n    { type: EffectType.dicePoolBonus, poolType: CharacterPoolTypes.dmgResist, bonus: 4 },\n    // Melee damage: 3P\n    // Melee Atk. Rating: +2\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  name: 'Pain Editor',\n  type: 'Cultured Bioware Augment',\n  gearType: GearType.augment,\n  source: { book: 'COR', page: 293 },\n  avail: { rarity: 5, illegal: true },\n  cost: 72_000,\n\n  description: (`\n    This cluster of specialized nervous tissue is designed to filter sensory stimuli.\n    If the pain editor is active, this allows you to ignore all injury modifiers, \n    and you can even stay conscious when your stun condition monitor is completely \n    full. You feel no pain—you're blissfully, dangerously, recklessly unaware of\n    the extent of the damage you've taken without either performing a self-examination\n    (Observe in Detail action) or being informed by a biomonitor. While active, the\n    pain editor increases your willpower by 1 and decreases your intuition by 1;\n    additionally, all tactile Perception tests you make have their threshold increased\n    by 1. \n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.beta,\n  },\n\n  essenceCost: 0.21,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.willpower, bonus: 1 },\n    { type: EffectType.attrBonus, attr: CharacterAttr.intuition, bonus: -1 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Reflex Recorder (Firearms)',\n  type: 'Cultured Bioware Augment',\n  source: { book: 'COR', page: 293 },\n  avail: { rarity: 4 },\n  cost: 7_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n  },\n\n  essenceCost: 0.11,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.skillBonus, skill: ActiveSkillId.firearms, bonus: 1 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Cerebral Booster',\n  type: 'Cultured Bioware Augment',\n  source: { book: 'COR', page: 293 },\n  avail: { rarity: 5 },\n  cost: 47_250,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n  },\n\n  essenceCost: 0.66,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.logic, bonus: 3 },\n  ],\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Sony Emperor',\n  type: 'Commlink',\n  source: { book: 'COR', page: 267 },\n  avail: { rarity: 2 },\n  cost: 700,\n\n  attributes: {\n    [CommlinkAttr.deviceRating]: 2,\n    [CommlinkAttr.attributes]: '1/1',\n    [CommlinkAttr.programSlots]: 1,\n  },\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Biomonitor',\n  type: 'Biotech',\n  source: { book: 'COR', page: 281 },\n  avail: { rarity: 2 },\n  cost: 300,\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Glasses',\n  type: 'Clothing',\n  source: { book: 'COR', page: 285 },\n  avail: { rarity: 2 },\n  cost: 400,\n\n  attributes: {\n    [OtherGearAttr.capacity]: 4,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Smartlink',\n    type: 'Visual Enhancement',\n    source: { book: 'COR', page: 275 },\n    avail: { rarity: 2 },\n    cost: 2_000,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 2,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Imagelink',\n    type: 'Visual Enhancement',\n    source: { book: 'COR', page: 275 },\n    avail: { rarity: 1 },\n    cost: 25,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 1,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Thermographic Vision',\n    type: 'Visual Enhancement',\n    source: { book: 'COR', page: 275 },\n    avail: { rarity: 2 },\n    cost: 500,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 1,\n    },\n  }),\n])\n\naddGear<ArmorData>({\n  id: null,\n  gearType: GearType.armor,\n  name: 'Armor Jacket',\n  type: 'Armor',\n  source: { book: 'COR', page: 265 },\n  avail: { rarity: 2 },\n  cost: 1_000,\n\n  attributes: {\n    [ArmorAttr.defenseBonus]: 4,\n    [ArmorAttr.capacity]: 8,\n  },\n})\n\naddGear({\n  id: null,\n  gearType: GearType.armor,\n  name: 'Auctioneer Business Clothes',\n  type: 'Armor',\n  source: { book: 'COR', page: 265 },\n  avail: { rarity: 2 },\n  cost: 1_500,\n\n  attributes: {\n    'armor.defenseBonus': 2,\n    'armor.capacity': 6,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.armorMod,\n    name: 'Concealed Hostler',\n    type: 'Armor Mod',\n    source: { book: 'COR', page: 259 },\n\n    wirelessBonus: {\n      enabled: true,\n      description: 'Increases cancellability threshold by 1',\n    },\n  }),\n])\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Medkit',\n  type: 'Biotech',\n  source: { book: 'COR', page: 281 },\n  avail: { rarity: 3 },\n  cost: 1_500,\n\n  attributes: {\n    [KitAttr.medkitRating]: 6,\n  },\n\n  wirelessBonus: {\n    enabled: true,\n    description: (`\n      The medkit provides a +1 dice pool modifier to healing tests\n    `),\n  },\n\n  kit: KitType.medKit,\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Medkit Supplies',\n    type: 'Supplies',\n    source: { book: 'COR', page: 273 },\n    avail: { rarity: 1 },\n    cost: 100,\n    quantity: 5,\n  }),\n])\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'First Aid Kit',\n  type: 'Kit',\n  source: { book: 'COR', page: 273 },\n  avail: { rarity: 1 },\n  cost: 500,\n\n  kit: KitType.firstAid,\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Trauma Patch',\n  type: 'Slap Patch',\n  source: { book: 'COR', page: 282 },\n  avail: { rarity: 3 },\n  cost: 500,\n  quantity: 2,\n  description: (`\n    If placed on a patient with Overflow Damage, the patient is automatically stabilized.\n    These patches are always wireless, and connect to the matrix the moment they are applied.\n  `),\n})\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Suzuki Mirage',\n  type: 'Bike',\n  cost: 12_000,\n  avail: { rarity: 2 },\n  source: { book: 'COR', page: 295 },\n\n  attributes: {\n    [VehicleAttr.handling]: '2/6',\n    [VehicleAttr.accel]: 29,\n    [VehicleAttr.speedInterval]: 30,\n    [VehicleAttr.topSpeed]: 260,\n    [VehicleAttr.body]: 4,\n    [VehicleAttr.armor]: 2,\n    [VehicleAttr.pilot]: 1,\n    [VehicleAttr.sensor]: 1,\n    [VehicleAttr.seat]: 1,\n  },\n})\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Hyundai Shin-Hyung',\n  type: 'Car',\n  cost: 20_000,\n  avail: { rarity: 2 },\n  source: { book: 'COR', page: 295 },\n\n  attributes: {\n    [VehicleAttr.handling]: '3/5',\n    [VehicleAttr.accel]: 12,\n    [VehicleAttr.speedInterval]: 25,\n    [VehicleAttr.topSpeed]: 200,\n    [VehicleAttr.body]: 7,\n    [VehicleAttr.armor]: 1,\n    [VehicleAttr.pilot]: 1,\n    [VehicleAttr.sensor]: 1,\n    [VehicleAttr.seat]: 3,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.vehicleMod,\n    modType: ModType.riggerInterface,\n    name: 'Rigger Interface',\n    type: 'vehicle mod',\n    avail: { rarity: 2, license: true },\n    cost: 1_000,\n  }),\n])\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Jake Ozbourne',\n  type: 'Fake SIN',\n  source: { book: 'COR', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 15_000,\n\n  description: 'General use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 6,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Concealed Carry',\n    type: 'Fake License',\n    source: { book: 'COR', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      'Rating': 5,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Firearm Carry',\n    type: 'Fake License',\n    source: { book: 'COR', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      'Rating': 5,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Ares Viper Silvergun',\n    type: 'Fake License',\n    source: { book: 'COR', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      'Rating': 5,\n    },\n  }),\n])\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Picard DeLance',\n  type: 'Fake SIN',\n  source: { book: 'COR', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 10_000,\n\n  description: 'Runner use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 4,\n  },\n})\n","import { nextRecordId } from './Api/Model'\nimport { CharacterData } from './Character/CharacterData'\nimport { migrateCharacter, SavedCharacterData } from './Character/Migrations'\nimport { Artemis } from './data/Artemis'\nimport { Silicus } from './data/Silicus'\n\nconst characterStorageKey = (characterId: string) => `character.${characterId}`\nconst charactersStorageKey = 'characters'\nconst DEBUG_LOAD = true\n\nexport type SavedCharacters = Record<string, string>\n\nexport function loadCharacters (): SavedCharacters {\n  if (DEBUG_LOAD || !localStorage.getItem(charactersStorageKey)) {\n    const savedCharacters: SavedCharacters = {}\n\n    const characters = [\n      migrateCharacter(Artemis),\n      migrateCharacter(Silicus),\n    ]\n\n    characters.forEach(character => {\n      if (character.id === null) character.id = nextRecordId()\n      saveCharacter(character)\n      savedCharacters[character.id] = character.bio.alias || character.bio.name\n    })\n\n    localStorage.setItem(charactersStorageKey, JSON.stringify(savedCharacters))\n  }\n\n  return JSON.parse(localStorage.getItem(charactersStorageKey) || '{}')\n}\n\nexport function saveCharacter (character: CharacterData): void {\n  if (character.id == null) throw new Error('Character has no id')\n  console.log(`Saved ${character.id}`)\n  localStorage.setItem(characterStorageKey(character.id), JSON.stringify(character))\n}\n\nexport function loadCharacter (characterId: string): CharacterData | null {\n  const character: SavedCharacterData = JSON.parse(localStorage.getItem(characterStorageKey(characterId)) || 'null')\n  if (character) return migrateCharacter(character)\n  return null\n}\n","import { format, parseISO } from 'date-fns'\n\nexport const noOp = (): void => {/* No Operation */}\n\nexport function formatDate (date: Date | string): string {\n  if (typeof date === 'string') date = parseISO(date)\n  return format(date, 'PP')\n}\n","import { AppBar as MuiAppBar, Box, IconButton, Toolbar, Typography } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { FC } from 'react'\n\nimport { noOp } from '../Helpers'\n\ntype NavBarProps = {\n  withMenu?: boolean\n  openMenu? (): void\n}\n\nexport const AppBar: FC<NavBarProps> = ({\n  withMenu,\n  openMenu = noOp,\n}) => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <MuiAppBar position=\"static\">\n        <Toolbar>\n          {withMenu && (\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n              onClick={() => openMenu()}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            ShadowSIN 6e\n          </Typography>\n        </Toolbar>\n      </MuiAppBar>\n    </Box>\n  )\n}\n","import { Box, Paper } from '@material-ui/core'\nimport React, { FC, useState } from 'react'\n\nimport { AppBar } from '../UI/AppBar'\nimport { NavDrawerProps } from '../UI/NavDrawer'\n\ninterface RootLayoutProps {\n  NavDrawer?: FC<NavDrawerProps>\n}\n\nexport const RootLayout: FC<RootLayoutProps> = ({\n  NavDrawer,\n  children,\n}) => {\n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n  return (\n    <Paper\n      sx={{ display: 'grid', gridTemplateRows: 'auto 1fr', bgcolor: 'background.default' }}\n      className=\"App\"\n      square\n    >\n      <AppBar withMenu={!!NavDrawer} openMenu={() => setDrawerOpen(true)} />\n      {NavDrawer && <NavDrawer open={drawerOpen} closeDrawer={() => setDrawerOpen(false)} />}\n\n      <Box sx={{ overflow: 'auto' }}>\n        <Box sx={{ width: '100%', maxWidth: 1200, margin: '0 auto', padding: 1 }}>\n          {children}\n        </Box>\n      </Box>\n    </Paper>\n  )\n}\n","import { Button, Stack } from '@material-ui/core'\nimport React, { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { loadCharacters, SavedCharacters } from '../StorageService'\nimport { RootLayout } from './RootLayout'\n\nexport const CharacterListPage: FC = () => {\n  const history = useHistory()\n  const [characters, setCharacters] = useState<SavedCharacters>({})\n\n  useEffect(() => setCharacters(loadCharacters()), [])\n\n  return (\n    <RootLayout>\n      <Stack>\n        {Object.entries(characters).map(([id, name]) => (\n          <Button\n            key={id}\n            onClick={() => history.push(`/${id}`)}\n            sx={{ padding: 1, fontSize: 30, justifyContent: 'flex-start' }}\n          >\n            {name}\n          </Button>\n        ))}\n      </Stack>\n    </RootLayout>\n  )\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { RecordId } from '../Api/Model'\nimport { GearData, GearType } from './GearData'\n\nconst GearContext = createContext<GearData[]>([])\n\ninterface GearProviderProps {\n  gear: GearData[]\n}\n\nexport const GearProvider: FC<GearProviderProps> = ({\n  gear,\n  children,\n}) => {\n  return (\n    <GearContext.Provider value={gear}>{children}</GearContext.Provider>\n  )\n}\n\nexport function useAllGear (): GearData[] {\n  return useContext(GearContext)\n}\n\nexport function useGear<T extends GearData = GearData> (gearId: RecordId | undefined): T | undefined {\n  const allGear = useAllGear()\n  if (!gearId) return undefined\n\n  const gear = allGear.find(gear => gear.id === gearId)\n  return gear ? gear as T : undefined\n}\n\ntype GearFilter = (gear: GearData) => boolean\n\nexport function useFindGear<T extends GearData = GearData> (filter: GearFilter): T | undefined {\n  const foundGear = useAllGear().find(filter)\n  return foundGear ? foundGear as T : undefined\n}\n\nexport function useFilterGear<T extends GearData = GearData> (filter: GearFilter): T[] {\n  return useAllGear().filter(filter).map(gear => gear as T)\n}\n\nexport function useAttachedGear (gearId: RecordId): GearData[] {\n  return useFilterGear(gear => gear.attachedTo === gearId)\n}\n\nexport function useGearOfType<T extends GearData> (gearType: GearType): T[] {\n  return useFilterGear<T>(gear => gear.gearType === gearType)\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { AttrList, AttrType, AttrValue } from './Attribute'\n\nconst AttributeContext = createContext<AttrList>({})\n\ninterface AttributeProviderProps {\n  attributes: AttrList\n}\n\nexport const AttributeProvider: FC<AttributeProviderProps> = ({\n  attributes,\n  children,\n}) => {\n  const parentAttrs = useAttributes()\n\n  return (\n    <AttributeContext.Provider value={{ ...parentAttrs, ...attributes }}>\n      {children}\n    </AttributeContext.Provider>\n  )\n}\n\nexport const useAttributes = (keys?: string[]): AttrList => {\n  const allAttributes = useContext(AttributeContext)\n  if (!keys) return allAttributes\n\n  const filtered: AttrList = {}\n  keys.forEach(key => filtered[key] = allAttributes[key])\n  return filtered\n}\n\nexport function useAttribute<T extends AttrValue> (type: AttrType): T {\n  return (useAttributes()[type] as T)\n}\n","import { createContext, FC, useContext, useEffect, useState } from 'react'\n\nimport { RecordId } from '../../Api/Model'\nimport { noOp } from '../../Helpers'\nimport { DamageType } from './DamageType'\n\ntype DamageSetter = (value: number) => void;\n\ntype DamageContextData = {\n  [type in DamageType]?: {\n    value: number\n    setValue?: DamageSetter\n  };\n};\n\nconst DamageContext = createContext<DamageContextData>({})\n\ninterface DamageProviderProps {\n  type: DamageType\n  id: RecordId\n}\n\nexport const DamageProvider: FC<DamageProviderProps> = ({\n  type,\n  id,\n  children,\n}) => {\n  const dmgSessionKey = `dmg.${id}.${type}`\n  const [value, setDmgValue] = useState<number>(0)\n\n  useEffect(() => {\n    const value = parseInt(localStorage.getItem(dmgSessionKey) || '0')\n    setDmgValue(value)\n  }, [dmgSessionKey])\n\n  const onDmgChange = (value: number) => {\n    setDmgValue(value)\n    localStorage.setItem(dmgSessionKey, value.toString())\n  }\n\n  const damages: DamageContextData = {\n    ...useContext(DamageContext),\n    [type]: { value, setValue: onDmgChange },\n  }\n\n  return (\n    <DamageContext.Provider value={damages}>\n      {children}\n    </DamageContext.Provider>\n  )\n}\n\nexport const useDamage = (type: DamageType): number => {\n  return useContext(DamageContext)[type]?.value || 0\n}\n\nexport const useSetDamage = (type: DamageType): DamageSetter => {\n  return useContext(DamageContext)[type]?.setValue || noOp\n}\n\nexport const useDamagePenalty = (types: DamageType[]): number => {\n  const damageData = useContext(DamageContext)\n\n  return types\n    .map(type => damageData[type]?.value || 0)\n    .map(value => Math.floor(value / 3))\n    .reduce((a, b) => a + b, 0)\n}\n","export enum DamageType {\n  charPhysical,\n  charStun,\n  vehiclePhysical\n}\n","import { BasicSkillData, SkillType } from '../SkillData'\nimport { ActiveSkillId } from './ActiveSkillId'\n\nexport type SkillList = Record<string, number>\n\nexport interface ActiveSkillData extends BasicSkillData {\n  type: SkillType.active\n  skillId: ActiveSkillId\n  rank: number\n  attr: string\n  altAttr?: string\n  speciality?: string | null\n  expertise?: string | null\n}\n\nexport function isActiveSkill (skill: BasicSkillData): skill is ActiveSkillData {\n  return skill.type === SkillType.active\n}\n\nexport const hasSpecialty = (skill?: ActiveSkillData, specialty?: string): boolean => {\n  if (!specialty || !skill || !skill.speciality) return false\n  return skill.speciality.toLowerCase() === specialty.toLowerCase()\n}\n\nexport const hasExpertise = (skill?: ActiveSkillData, specialty?: string): boolean => {\n  if (!specialty || !skill || !skill.expertise) return false\n  return skill.expertise.toLowerCase() === specialty.toLowerCase()\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { isAugment } from '../Gear/Augments/AugmentData'\nimport { collectGearEffects, isAttrBonus, isSkillBonus } from '../Gear/Effect'\nimport { GearProvider, useAllGear } from '../Gear/GearContext'\nimport { AttrList } from '../System/Attribute'\nimport { AttributeProvider } from '../System/AttributeProvider'\nimport { DamageProvider } from '../System/Damage/DamageProvider'\nimport { DamageType } from '../System/Damage/DamageType'\nimport { ActiveSkillData, isActiveSkill, SkillList } from '../System/Skill/ActiveSkill/ActiveSkillData'\nimport { ActiveSkillId } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { CharacterAttr } from './CharacterAttr'\nimport { CharacterData } from './CharacterData'\n\nconst CharacterContext = createContext<CharacterData | null>(null)\n\ninterface CharacterProviderProps {\n  character: CharacterData\n}\n\nexport const CharacterProvider: FC<CharacterProviderProps> = ({\n  character,\n  children,\n}) => {\n  const attributes: AttrList = {}\n\n  const attrBonuses = collectGearEffects(character.gear)\n    .filter(isAttrBonus)\n\n  attributes[CharacterAttr.essence] = character.gear\n    .filter(isAugment)\n    .reduce((essence, gear) => essence - gear.essenceCost, 6)\n\n  Object.entries(character.attributes).forEach(([attr, value]) => {\n    attributes[attr] = attrBonuses\n      .filter(effect => effect.attr === attr)\n      .reduce((sum, effect) => sum + effect.bonus, value)\n  })\n\n  return (\n    <CharacterContext.Provider value={character}>\n      <AttributeProvider attributes={attributes}>\n        <GearProvider gear={character.gear}>\n          <DamageProvider type={DamageType.charPhysical} id={character.id}>\n            <DamageProvider type={DamageType.charStun} id={character.id}>\n              {children}\n            </DamageProvider>\n          </DamageProvider>\n        </GearProvider>\n      </AttributeProvider>\n    </CharacterContext.Provider>\n  )\n}\n\nexport const useCharacter = (): CharacterData | null => {\n  return useContext(CharacterContext)\n}\n\nexport function useSkills (skillIds?: string[]): SkillList {\n  const character = useContext(CharacterContext)\n  const skillList: SkillList = {}\n\n  if (character) {\n    character.skills\n      .filter(isActiveSkill)\n      .filter(skill => skillIds ? skillIds.includes(skill.skillId) : true)\n      .forEach(skill => skillList[skill.skillId] = skill.rank)\n  }\n\n  return skillList\n}\n\nexport function useActiveSkill (skillId: ActiveSkillId): ActiveSkillData | undefined {\n  const character = useContext(CharacterContext)\n  const gear = useAllGear()\n  if (!character) return undefined\n\n  const skill = character.skills\n    .filter(isActiveSkill)\n    .find(skill => skill.skillId === skillId)\n\n  if (!skill) return undefined\n\n  const rank = collectGearEffects(gear)\n    .filter(isSkillBonus)\n    .filter(effect => effect.skill === skillId)\n    .reduce((sum, effect) => sum + effect.bonus, skill.rank)\n\n  return { ...skill, rank }\n}\n","import { FC } from 'react'\n\nexport const PistolSvg: FC = () => {\n  return (\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 306.539 306.539\" enableBackground=\"new 0 0 306.539 306.539\">\n      <g>\n        <path d=\"M298.489,88.77c4.446,0,8.05-3.604,8.05-8.05V54.918c0-4.446-3.604-8.05-8.05-8.05h-13.95v-0.05   c0-4.446-3.604-8.05-8.05-8.05h-60.067c-4.446,0-8.049,3.604-8.049,8.05v13.276c0,3.313-2.687,6-6,6h-69.834c-3.314,0-6-2.687-6-6   V46.819c0-4.446-3.604-8.05-8.05-8.05H18.122C8.114,38.77,0,46.883,0,56.892V88.77H298.489z\"/>\n        <path d=\"m0,100.77v4.443c0,10.009 8.114,18.123 18.122,18.123h3.491l-20.015,106.774c-1.743,9.298 0.744,18.889 6.786,26.169s15.01,11.491 24.47,11.491h48.624c15.303,0 28.437-10.9 31.256-25.942l10.818-57.713c2.965,0.189 5.962,0.296 8.986,0.296 20.268,0 39.479-4.302 54.094-12.111 16.599-8.871 25.74-21.376 25.74-35.21 0-4.777-1.115-9.39-3.226-13.755h67.342c4.446,0 8.05-3.604 8.05-8.05v-14.515h-284.538zm132.539,63.641c-1.783,0-3.536-0.048-5.269-0.124l4.6-24.541c4.677,6.26 10.613,11.876 18.155,16.056 1.535,0.851 3.198,1.255 4.838,1.255 3.518,0 6.93-1.86 8.756-5.155 2.677-4.83 0.931-10.917-3.9-13.594-6.44-3.569-11.231-8.954-14.798-14.973h38.306c5.826,4.289 9.146,9.119 9.146,13.755 0,12.896-25.589,27.321-59.834,27.321z\"/>\n      </g>\n    </svg>\n  )\n}\n","import { ListItem, ListItemIcon, ListItemText, SvgIcon } from '@material-ui/core'\nimport { FC, ReactElement } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport interface NavDrawerProps {\n  open: boolean\n\n  closeDrawer (): void\n}\n\nexport type NavDrawer = FC<NavDrawerProps>\n\ninterface NavButtonProps {\n  icon: ReactElement\n  label: string\n  routeTo: string\n\n  closeDrawer (): void\n}\n\nexport const NavButton: FC<NavButtonProps> = ({\n  icon,\n  label,\n  routeTo,\n  closeDrawer,\n}) => {\n  const history = useHistory()\n\n  const onNavClick = () => {\n    history.push(routeTo)\n    closeDrawer()\n  }\n\n  return (\n    <ListItem button onClick={onNavClick}>\n      <ListItemIcon>\n        <SvgIcon>{icon}</SvgIcon>\n      </ListItemIcon>\n      <ListItemText primary={label} />\n    </ListItem>\n  )\n}\n","import { faUsers } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box, Drawer, List } from '@material-ui/core'\n\nimport { NavButton, NavDrawer } from './index'\n\nexport const DefaultNavDrawer: NavDrawer = ({\n  open,\n  closeDrawer,\n  children,\n}) => {\n  return (\n    <Drawer anchor=\"left\" open={open} onClose={closeDrawer}>\n      {children}\n\n      <Box sx={{ flexGrow: 1 }} />\n\n      <List>\n        <NavButton\n          icon={<FontAwesomeIcon icon={faUsers} />}\n          label=\"Characters\"\n          routeTo={'/characters'}\n          closeDrawer={closeDrawer}\n        />\n      </List>\n    </Drawer>\n  )\n}\n","import { faArchive, faAward, faCarAlt, faCogs, faUser, faYenSign } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Divider, List } from '@material-ui/core'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { PistolSvg } from '../../Gear/Weapons/PistolSvg'\nimport { DefaultNavDrawer } from './DefaultNavDrawer'\n\nimport { NavButton, NavDrawer } from './index'\n\nexport const CharacterNavDrawer: NavDrawer = ({\n  open,\n  closeDrawer,\n}) => {\n  const character = useCharacter()\n\n  if (!character) return null\n\n  return (\n    <DefaultNavDrawer open={open} closeDrawer={closeDrawer}>\n      <List>\n        <NavButton\n          icon={<FontAwesomeIcon icon={faUser} />}\n          label={character.bio.alias || character.bio.name}\n          routeTo={`/${character.id}`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<PistolSvg />}\n          label=\"Weapons\"\n          routeTo={`/${character.id}/weapons`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faCarAlt} />}\n          label=\"Vehicles\"\n          routeTo={`/${character.id}/vehicles`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faCogs} />}\n          label=\"Augments\"\n          routeTo={`/${character.id}/augments`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faArchive} />}\n          label=\"Other\"\n          routeTo={`/${character.id}/misc`}\n          closeDrawer={closeDrawer}\n        />\n        <Divider />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faYenSign} />}\n          label=\"Nyuen\"\n          routeTo={`/${character.id}/Nuyen`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faAward} />}\n          label=\"Karma\"\n          routeTo={`/${character.id}/karma`}\n          closeDrawer={closeDrawer}\n        />\n      </List>\n    </DefaultNavDrawer>\n  )\n}\n","import { parseISO } from 'date-fns'\n\nimport { useCharacter } from '../Character/CharacterProvider'\n\nconst nuyenFormatter = new Intl.NumberFormat('en')\nexport const formatNuyen = (cost: number): string => {\n  return nuyenFormatter.format(cost) + '¥'\n}\n\nexport const useNuyenBalance = (): number => {\n  const character = useCharacter()\n  if (!character) return 0\n\n  return character.nuyen\n    .sort((a, b) => parseISO(a.date).getTime() - parseISO(b.date).getTime())\n    .reduce((sum, entry) => sum + entry.value, 0)\n}\n","export type Source = { book: string; page: number } | 'Homebrew'\n\nexport const formatSource = (source: Source): string => {\n  if (typeof source === 'string') return source\n  return `${source.book} p.${source.page}`\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCaretSquareRight } from '@fortawesome/free-regular-svg-icons'\nimport { faCaretSquareDown } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box, Chip, IconButton, Paper, Typography } from '@material-ui/core'\nimport { FC, ReactElement, useState } from 'react'\n\nimport { displayFontFamily } from '../../AppThemeProvider'\n\nlibrary.add(faCaretSquareDown, faCaretSquareRight)\n\ninterface InfoBlockProps {\n  title: string\n  titleFontSize?: number\n  subtitle?: string\n  titleRight?: ReactElement\n  expanded?: boolean\n  expandable?: boolean\n  quantity?: number\n}\n\nexport const InfoBlock: FC<InfoBlockProps> = ({\n  title,\n  titleFontSize = 20,\n  quantity = 0,\n  subtitle,\n  titleRight,\n  children,\n  expanded: defaultExpanded = true,\n  expandable,\n}) => {\n  const [expanded, setExpanded] = useState<boolean>(defaultExpanded)\n\n  return (\n    <Paper elevation={1}>\n      <Box sx={{ display: 'flex', gap: 1, padding: 1 }}>\n        {expandable && (\n          <Box>\n            <IconButton size=\"small\" onClick={() => setExpanded(!expanded)}>\n              <FontAwesomeIcon icon={expanded ? 'caret-square-down' : ['far', 'caret-square-right']} />\n            </IconButton>\n          </Box>\n        )}\n\n        <Box sx={{ flexGrow: 1 }}>\n          <Box>\n            <Typography\n              sx={{\n                display: 'inline-block',\n                fontFamily: displayFontFamily,\n                fontSize: titleFontSize,\n                color: 'primary.main',\n              }}\n            >{title}</Typography>\n            {quantity >= 1 && (\n              <Chip\n                sx={{ marginLeft: 1, verticalAlign: 'top' }}\n                label={`x${quantity}`}\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            )}\n          </Box>\n\n          {subtitle}\n        </Box>\n\n        {titleRight}\n      </Box>\n\n      {expanded && children}\n    </Paper>\n  )\n}\n","import { BaseGearData, GearType } from '../../GearData'\nimport { AutosoftAttr } from './AutosoftAttr'\n\nexport interface AutosoftData extends BaseGearData {\n  gearType: GearType.autosoft\n  type: string\n  attributes: {\n    [AutosoftAttr.rating]: number\n    [AutosoftAttr.attr]: string\n    [AutosoftAttr.skill]?: string\n    [AutosoftAttr.weapon]?: string\n  }\n}\n\nexport enum AutosoftType {\n  targeting = 'Weapon Targeting',\n  clearsight = 'clearsight',\n  perception = 'Perception',\n  evasion = 'Evasion',\n  maneuvering = 'Maneuvering',\n  electronicWarfare = 'Electronic Warfare',\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../../Character/CharacterAttr'\nimport { useActiveSkill } from '../../Character/CharacterProvider'\nimport { useAttribute } from '../../System/AttributeProvider'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { ActiveSkillId } from '../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool } from '../../UI/DicePool'\nimport { AugmentAttr } from '../Augments/AugmentAttr'\nimport { AugmentData, AugmentType } from '../Augments/AugmentData'\nimport { useFindGear, useGearOfType } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { AutosoftAttr } from '../Software/Autosoft/AutosoftAttr'\nimport { AutosoftType } from '../Software/Autosoft/AutosoftData'\nimport { useAutosoft } from '../Software/Autosoft/AutosoftProvider'\nimport { VehicleData } from './VehicleData'\nimport { ModType, VehicleModData } from './VehicleModData'\n\nexport enum VehiclePoolKeys {\n  pilotEvade = 'vehicle.pilotEvade',\n  riggedEvade = 'vehicle.riggedEvade',\n}\n\ninterface VehiclePoolProps {\n  vehicle: VehicleData\n}\n\nexport const PilotEvadePool: FC<VehiclePoolProps> = () => {\n  const evasionAutosoft = useAutosoft(AutosoftType.evasion)\n  const maneuveringAutosoft = useAutosoft(AutosoftType.maneuvering)\n\n  const piloting: number = maneuveringAutosoft ? maneuveringAutosoft.attributes[AutosoftAttr.rating] : 0\n  const evasion: number = evasionAutosoft ? evasionAutosoft.attributes[AutosoftAttr.rating] : 0\n\n  const diceGroups: DiceGroup[] = [\n    { name: 'Piloting', size: piloting },\n    { name: 'Evasion', size: evasion },\n  ]\n\n  return <DicePool\n    poolKey={VehiclePoolKeys.pilotEvade}\n    name={'Pilot Evade'}\n    groups={diceGroups}\n    dmgPenaltyTypes={[DamageType.vehiclePhysical]}\n  />\n}\n\nexport const RiggedEvadePool: FC<VehiclePoolProps> = ({\n  vehicle,\n}) => {\n  const pilotingSkill = useActiveSkill(ActiveSkillId.piloting)\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n\n  const riggerInterface = useGearOfType<VehicleModData>(GearType.vehicleMod)\n    .filter(gear => gear.attachedTo === vehicle.id)\n    .find(gear => gear.modType === ModType.riggerInterface)\n\n  const controlRig = useFindGear<AugmentData>(gear => gear.augmentType === AugmentType.controlRig)\n  if (!controlRig || !riggerInterface) return null\n\n  const groups: DiceGroup[] = [\n    { name: 'Piloting', size: pilotingSkill?.rank },\n    { name: 'Intuition', size: intuition },\n    { name: 'Control Rig', size: controlRig.attributes[AugmentAttr.rating] },\n  ]\n\n  const dmgPenaltyTypes = [DamageType.charPhysical, DamageType.charStun, DamageType.vehiclePhysical]\n  return <DicePool\n    poolKey={VehiclePoolKeys.riggedEvade}\n    name={'Rigged Evade'}\n    groups={groups}\n    dmgPenaltyTypes={dmgPenaltyTypes}\n  />\n}\n","import { Box } from '@material-ui/core'\nimport { FC } from 'react'\n\nexport const InfoSection: FC = ({\n  children,\n}) => {\n  return (\n    <Box sx={{ padding: 1 }}>{children}</Box>\n  )\n}\n\nexport const CombatSection: FC = ({\n  children,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', gap: 1, padding: 1, flexWrap: 'wrap' }}>\n      {children}\n    </Box>\n  )\n}\n","import { Paper } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\ninterface StatBlockProps {\n  vertical?: boolean\n}\n\nexport const StatBlock: FC<StatBlockProps> = ({\n  vertical,\n  children,\n}) => {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        display: 'flex',\n        padding: 1,\n        gap: 1,\n        flexWrap: 'wrap',\n        flexDirection: vertical ? 'column' : 'row',\n        justifyContent: 'space-around',\n      }}\n    >\n      {children}\n    </Paper>\n  )\n}\n\ninterface StatProps {\n  name: string\n  value: string | number | null | undefined\n}\n\nexport const Stat: FC<StatProps> = ({\n  name,\n  value,\n}) => {\n  if (name === 'Essence') {\n    value = (value as number).toFixed(2).toString()\n  }\n\n  return (\n    <Box sx={{ display: 'flex', gap: 1, whiteSpace: 'nowrap' }}>\n      <Box sx={{ fontSize: 14, display: 'inline-block', color: 'primary.main', textAlign: 'left', flexGrow: 1 }}>\n        {name}\n      </Box>\n      <Box sx={{ fontSize: 14, display: 'inline-block', textAlign: 'right', flexGrow: 1 }}>\n        {value || '-'}\n      </Box>\n    </Box>\n  )\n}\n","import { FC } from 'react'\n\nimport { AttrList, formatAttr } from '../System/Attribute'\nimport { Stat, StatBlock } from './StatBlock'\n\ninterface AttributeBlockProps {\n  attributes: AttrList\n  vertical?: boolean\n}\n\nexport const AttributeBlock: FC<AttributeBlockProps> = ({\n  attributes,\n  vertical,\n}) => {\n  if (!attributes) return null\n  if (Object.keys(attributes).length === 0) return null\n\n  return (\n    <StatBlock vertical={vertical}>\n      {Object.entries(attributes).map(([type, value]) => (\n        <Stat key={type} name={formatAttr(type)} value={value} />\n      ))}\n    </StatBlock>\n  )\n}\n","import { FC } from 'react'\n\nimport { AttributeBlock } from '../UI/AttributeBlock'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\nimport { GearData } from './GearData'\n\ninterface GearAttributesProps {\n  item: GearData\n}\n\nexport const GearAttributes: FC<GearAttributesProps> = ({\n  item,\n}) => {\n  if (!item.attributes) return null\n\n  return (\n    <InfoSection>\n      <AttributeBlock attributes={item.attributes} />\n    </InfoSection>\n  )\n}\n","import { Paper } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { AttributeProvider } from '../System/AttributeProvider'\nimport { useAttachedGear } from './GearContext'\nimport { GearData } from './GearData'\nimport { GearList } from './GearList'\n\nexport interface NestedGearProps {\n  item: GearData\n}\n\nexport const NestedGear: FC<NestedGearProps> = ({\n  item,\n}) => {\n  const attachedGear = useAttachedGear(item.id)\n  if (attachedGear.length === 0) return null\n\n  return (\n    <Paper variant=\"outlined\" sx={{ padding: 1 }}>\n      <AttributeProvider attributes={item.attributes || {}}>\n        <GearList gear={attachedGear} />\n      </AttributeProvider>\n    </Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport React, { FC } from 'react'\n\nimport { AttributeProvider } from '../System/AttributeProvider'\nimport { formatNuyen } from '../System/Nuyen'\nimport { formatSource } from '../System/Source'\nimport { InfoBlock } from '../UI/InfoBlock/InfoBlock'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\nimport { Stat } from '../UI/StatBlock'\nimport { formatAvail } from './Availability'\nimport { GearAttributes } from './GearAttributes'\nimport { useAttachedGear } from './GearContext'\nimport { GearInfoProps } from './GearInfo'\nimport { NestedGear } from './NestedGear'\n\nexport const GearInfoBlock: FC<GearInfoProps> = ({\n  item,\n  expanded,\n  children,\n}) => {\n  const blockTitleRight = <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n    {item.avail && <Stat name=\"Avail\" value={formatAvail(item.avail)} />}\n    {item.cost && <Stat name=\"Cost\" value={formatNuyen(item.cost)} />}\n    {item.source && <Stat name=\"Source\" value={formatSource(item.source)} />}\n  </Box>\n\n  const attachedGear = useAttachedGear(item.id)\n\n  const expandable = Boolean(\n    item.description\n    || item.wirelessBonus\n    || item.attributes\n    || children\n    || attachedGear.length > 0,\n  )\n\n  return (\n    <AttributeProvider attributes={item.attributes || {}}>\n      <InfoBlock\n        title={item.name}\n        quantity={item.quantity || 0}\n        subtitle={item.type}\n        titleRight={blockTitleRight}\n        expandable={expandable}\n        expanded={expanded}\n      >\n        {item.description && (\n          <InfoSection>\n            <Typography sx={{ fontStyle: 'italic' }}>{item.description}</Typography>\n          </InfoSection>\n        )}\n\n        {item.wirelessBonus && (\n          <InfoSection>\n            <Box sx={{ fontStyle: 'italic' }}>\n              <Typography variant=\"body2\" sx={{ color: 'primary.main', display: 'inline' }}>Wireless\n                Bonus:</Typography>\n              <Typography\n                variant=\"body2\"\n                sx={{ display: 'inline', marginLeft: 0.5 }}\n              >{item.wirelessBonus.description}</Typography>\n            </Box>\n          </InfoSection>\n        )}\n\n        {item.attributes && <GearAttributes item={item} />}\n\n        {children}\n\n        <NestedGear item={item} />\n      </InfoBlock>\n    </AttributeProvider>\n  )\n}\n","export type Availability = {\n  rarity: number\n  illegal?: boolean\n  license?: boolean\n}\nexport const formatAvail = (avail: Availability): string => {\n  return `${avail.rarity}${avail.illegal ? '(i)' : ''}${avail.license ? '(L)' : ''}`\n}\n","import { Chip, Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { useAttachedGear, useFilterGear } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearInfoProps } from '../GearInfo'\nimport { GearInfoBlock } from '../GearInfoBlock'\nimport { AutosoftData } from '../Software/Autosoft/AutosoftData'\nimport { VehicleData } from '../Vehicles/VehicleData'\nimport { RccAttr } from './RccAttr'\nimport { RccData } from './RccData'\n\nexport const RccInfo: FC<GearInfoProps<RccData>> = ({\n  item: rcc,\n  expanded,\n}) => {\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n  const autosofts = useAttachedGear(rcc.id)\n    .filter(gear => gear.gearType === GearType.autosoft)\n    .map(gear => gear as AutosoftData)\n  const slavedAutosofts = autosofts\n    .filter(autosoft => rcc.slavedAutosofts.includes(autosoft.id))\n\n  const slavedVehicles: VehicleData[] = useFilterGear(gear => gear.slavedTo === rcc.id)\n  const maxSlaved = rcc.attributes[RccAttr.deviceRating] * 3\n\n  return (\n    <GearInfoBlock item={rcc} expanded={expanded}>\n      <InfoSection>\n        <Typography variant={'h6'}>Autosofts ({rcc.slavedAutosofts.length}/{dataProcessing} shared)</Typography>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n          {slavedAutosofts.map(autosoft => (\n            <Chip key={autosoft.id} label={autosoft.name} />\n          ))}\n        </Box>\n      </InfoSection>\n\n      <InfoSection>\n        <Typography variant={'h6'}>Slaved ({slavedVehicles.length} / {maxSlaved})</Typography>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n          {slavedVehicles.map(vehicle => (\n            <Chip key={vehicle.id} label={vehicle.name} />\n          ))}\n        </Box>\n      </InfoSection>\n    </GearInfoBlock>\n  )\n}\n","import Paper from '@material-ui/core/Paper'\nimport { FC, useState } from 'react'\n\nimport { noOp } from '../Helpers'\n\ninterface TrackCellProps {\n  onClick? (): void\n\n  filled?: boolean\n}\n\nexport const TrackCell: FC<TrackCellProps> = ({\n  children,\n  onClick = noOp,\n  filled = false,\n}) => {\n  const [hovered, setHovered] = useState<boolean>(false)\n\n  let backgroundColor = 'default'\n  if (filled) backgroundColor = 'primary.dark'\n  if (hovered) backgroundColor = 'primary.light'\n\n  return (\n    <Paper\n      sx={{ padding: 1, userSelect: 'none', backgroundColor }}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      onClick={() => {\n        setHovered(false)\n        onClick()\n      }}\n      variant={'outlined'}\n    >{children}</Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { noOp } from '../../Helpers'\nimport { TrackCell } from '../../UI/TrackCell'\nimport { useDamage, useSetDamage } from './DamageProvider'\nimport { DamageType } from './DamageType'\n\nimport styles from './DamageTrack.module.scss'\n\ninterface DamageTrackProps {\n  type: DamageType\n  max: number\n  label?: string\n}\n\nexport const DamageTrack: FC<DamageTrackProps> = ({\n  type,\n  max,\n  label = 'Physical',\n}) => {\n  const current = useDamage(type)\n  const onChange = useSetDamage(type)\n\n  const onToggleCell = (value: number) => {\n    if (value === current) {\n      onChange(value - 1)\n    } else {\n      onChange(value)\n    }\n  }\n\n  return (\n    <Box sx={{ maxWidth: 300 }}>\n      <Typography variant={'h6'}>{label}</Typography>\n      <Box sx={{ paddingBottom: 0.5, textAlign: 'right' }}>\n        <TrackCell onClick={() => onChange(0)}>0</TrackCell>\n      </Box>\n      <Box className={styles.DamageTrack}>\n        {new Array(max).fill(null).map((_, index) => (\n          <DamageCell key={index} value={index + 1} filled={index < current} toggleCell={onToggleCell} />\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\ninterface DamageCellProps {\n  value: number\n  filled?: boolean\n\n  toggleCell? (newValue: number): void\n}\n\nconst DamageCell: FC<DamageCellProps> = ({\n  value,\n  filled = false,\n  toggleCell = noOp,\n}) => {\n  const penalty = Math.floor((value + 1) / 3)\n\n  return (\n    <TrackCell onClick={() => toggleCell(value)} filled={filled}>\n      <Box sx={{ textAlign: 'right' }}>\n        {value % 3 === 0 ? penalty * -1 : '\\u00A0'}\n      </Box>\n    </TrackCell>\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { Stat } from '../UI/StatBlock'\nimport { useAttribute } from './AttributeProvider'\n\nexport const CharacterDefRatingStat: FC = () => {\n  const body = useAttribute<number>(CharacterAttr.body) || 0\n  const armor = 0\n\n  return (\n    <Stat name=\"Def. Rating\" value={body + armor} />\n  )\n}\n\nexport const VehicleDefRatingStat: FC = () => {\n  const body = useAttribute<number>(VehicleAttr.body) || 0\n  const armor = useAttribute<number>(VehicleAttr.armor) || 0\n\n  return (\n    <Stat name=\"Def. Rating\" value={body + armor} />\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { useFindGear } from '../Gear/GearContext'\nimport { GearType } from '../Gear/GearData'\nimport { RccAttr } from '../Gear/Rcc/RccAttr'\nimport { RccData } from '../Gear/Rcc/RccData'\nimport { Stat } from '../UI/StatBlock'\nimport { useAttribute } from './AttributeProvider'\n\ninterface InitiativeStatProps {\n  name: string\n  base: number\n  dice?: number\n}\n\nexport const InitiativeStat: FC<InitiativeStatProps> = ({\n  name,\n  base,\n  dice = 1,\n}) => {\n  return (\n    <Stat name={name} value={`${base} + ${dice}D6`} />\n  )\n}\n\nexport const CharacterHotVrInit: FC = () => {\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const rcc = useFindGear<RccData>(gear => gear.gearType === GearType.rcc)\n  if (!rcc) return null\n\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n\n  return (\n    <InitiativeStat name=\"VR Cold Init\" base={intuition + dataProcessing} dice={2} />\n  )\n}\n\nexport const CharacterColdVrInit: FC = () => {\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const rcc = useFindGear<RccData>(gear => gear.gearType === GearType.rcc)\n  if (!rcc) return null\n\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n\n  return (\n    <InitiativeStat name=\"VR Hot Init\" base={intuition + dataProcessing} dice={3} />\n  )\n}\n","import { Box, Paper } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { useSkills } from '../Character/CharacterProvider'\nimport { formatAttr } from '../System/Attribute'\nimport { useAttributes } from '../System/AttributeProvider'\nimport { useDamagePenalty } from '../System/Damage/DamageProvider'\nimport { DamageType } from '../System/Damage/DamageType'\nimport { ActiveSkillData, hasExpertise, hasSpecialty } from '../System/Skill/ActiveSkill/ActiveSkillData'\nimport { formatSkill } from '../System/Skill/ActiveSkill/ActiveSkillId'\n\nexport interface DiceGroup {\n  name: string\n  size: number | undefined\n  default?: number\n}\n\nexport const DicePools: FC = ({\n  children,\n}) => {\n  return <Paper variant=\"outlined\" sx={{ padding: 1, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n    {children}\n  </Paper>\n}\n\nexport interface DicePoolData {\n  poolKey: string\n  name: string\n  skills?: string[]\n  attrs?: string[]\n  bonuses?: DiceGroup[]\n  dmgPenaltyTypes?: DamageType[]\n}\n\nexport const skillSpecialtyBonus = (\n  skill: ActiveSkillData | undefined,\n  specialtyName: string | undefined,\n): DiceGroup | null => {\n  if (!skill || !specialtyName)\n    return null\n\n  if (hasSpecialty(skill, specialtyName))\n    return { name: 'Specialty', size: 2 }\n\n  if (hasExpertise(skill, specialtyName))\n    return { name: 'Expertise', size: 3 }\n\n  return null\n}\n\ntype DicePoolProps = {\n  name: string\n  groups?: DiceGroup[]\n  dmgPenaltyTypes?: DamageType[]\n} & DicePoolData\n\nexport const DicePool: FC<DicePoolProps> = ({\n  name,\n  skills = [],\n  attrs = [],\n  bonuses = [],\n  groups = [],\n  dmgPenaltyTypes = [],\n}) => {\n  const skillList = useSkills(skills)\n  const attrList = useAttributes(attrs)\n  const dmgPenalty = useDamagePenalty(dmgPenaltyTypes)\n\n  groups = [\n    ...groups,\n    ...Object.entries(skillList)\n      .map(([skillId, rank]) => ({ name: formatSkill(skillId), size: rank })),\n    ...Object.entries(attrList)\n      .filter(([_, value]) => typeof value === 'number')\n      .map(([attrType, value]) => ({ name: formatAttr(attrType), size: value as number })),\n    ...bonuses,\n  ]\n\n  if (dmgPenalty > 0) {\n    groups = [...groups, { name: 'Dmg. Penalty', size: dmgPenalty * -1 }]\n  }\n\n  const total = Math.max(0, groups.map(g => g.size || g.default || 0).reduce((a, b) => a + b, 0))\n\n  return (\n    <Box sx={{ display: 'inline-flex', flexDirection: 'column' }}>\n      <DiceGroupDisplay name={name} size={total} total />\n      {groups.map(group => (\n        <DiceGroupDisplay key={group.name} name={group.name} size={group.size || group.default || 0} />\n      ))}\n    </Box>\n  )\n}\n\ninterface DiceGroupDisplayProps {\n  name: string\n  size: number\n  total?: boolean\n}\n\nconst DiceGroupDisplay: FC<DiceGroupDisplayProps> = ({\n  name,\n  size,\n  total,\n}) => {\n  const sizeStyles = { display: 'inline-block', padding: 0.5, width: 30, textAlign: 'center' } as const\n  const nameStyles = { display: 'inline-block', padding: 0.5, marginRight: 1 } as const\n\n  return (\n    <Box sx={{ display: 'flex', fontSize: total ? 14 : 12, backgroundColor: total ? '#424242' : undefined }}>\n      <Box sx={sizeStyles}>{size}</Box>\n      <Box sx={nameStyles}>{name}</Box>\n    </Box>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { DicePools } from '../UI/DicePool'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\n\nexport const GearDicePools: FC = ({\n  children,\n}) => {\n  return (\n    <InfoSection>\n      <Typography variant={'h6'}>Dice Pools</Typography>\n      <DicePools>{children}</DicePools>\n    </InfoSection>\n  )\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { AutosoftAttr } from './AutosoftAttr'\nimport { AutosoftData } from './AutosoftData'\n\nconst AutosoftContext = createContext<AutosoftData[]>([])\n\ninterface AutosoftProviderProps {\n  autosofts: AutosoftData[]\n}\n\nexport const AutosoftProvider: FC<AutosoftProviderProps> = ({\n  autosofts,\n  children,\n}) => {\n  return (\n    <AutosoftContext.Provider value={autosofts}>{children}</AutosoftContext.Provider>\n  )\n}\n\nexport const useAutosoft = (name: string): AutosoftData | undefined => {\n  const autosofts = useContext(AutosoftContext)\n  return autosofts.find(autosoft => autosoft.name === name)\n}\n\nexport const useTargetingAutosoft = (weaponName: string): number | undefined => {\n  return useContext(AutosoftContext)\n    .find(autosoft => autosoft.attributes[AutosoftAttr.weapon] === weaponName)\n    ?.attributes[AutosoftAttr.rating]\n}\n","import { faBroadcastTower, faSave } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { RecordId } from '../../../Api/Model'\nimport { AttributeBlock } from '../../../UI/AttributeBlock'\nimport { AutosoftData } from './AutosoftData'\n\ninterface AutosoftsListProps {\n  autosofts: AutosoftData[]\n  slavedIds?: RecordId[]\n  withAvail?: boolean\n  withCost?: boolean\n}\n\nexport const AutosoftsList: FC<AutosoftsListProps> = ({\n  autosofts,\n  slavedIds,\n}) => {\n  return (\n    <Box>\n      {autosofts.map(autosoft => (\n        <Box key={autosoft.id} sx={{ paddingTop: 1 }}>\n          <AutosoftListItem\n            key={autosoft.id}\n            autosoft={autosoft}\n            slavedIds={slavedIds}\n          />\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\ninterface AutosoftListItemProps {\n  autosoft: AutosoftData\n  slavedIds?: RecordId[]\n  withAvail?: boolean\n  withCost?: boolean\n}\n\nconst AutosoftListItem: FC<AutosoftListItemProps> = ({\n  autosoft,\n  slavedIds,\n}) => {\n  return (\n    <Box>\n      <Box>\n        <Box sx={{ display: 'inline-block', marginRight: 1 }}>\n          {slavedIds?.includes(autosoft.id) ? (\n            <FontAwesomeIcon icon={faBroadcastTower} />\n          ) : (\n            <FontAwesomeIcon icon={faSave} />\n          )}\n        </Box>\n        {autosoft.name}\n      </Box>\n\n      <AttributeBlock attributes={autosoft.attributes} />\n    </Box>\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../../Character/CharacterAttr'\nimport { useActiveSkill } from '../../Character/CharacterProvider'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { ActiveSkillId } from '../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool, skillSpecialtyBonus } from '../../UI/DicePool'\nimport { AugmentAttr } from '../Augments/AugmentAttr'\nimport { AugmentData, AugmentType } from '../Augments/AugmentData'\nimport { useFindGear } from '../GearContext'\nimport { useTargetingAutosoft } from '../Software/Autosoft/AutosoftProvider'\nimport { VehicleAttr } from '../Vehicles/VehicleAttr'\nimport { WeaponData } from './WeaponData'\n\nexport enum WeaponPoolKeys {\n  basicAttack = 'weapon.basicAttack',\n  droneAttack = 'weapon.droneAttack',\n  mountedAttack = 'weapon.mountedAttack',\n  riggedAttack = 'weapon.riggedAttack',\n}\n\ninterface FirearmPoolProps {\n  weapon: WeaponData\n}\n\nexport const BasicAttackPool: FC<FirearmPoolProps> = ({\n  weapon,\n}) => {\n  const firearmsSkill = useActiveSkill(ActiveSkillId.firearms)\n  const specialtyBonus = skillSpecialtyBonus(firearmsSkill, weapon.specialtyName)\n\n  const bonuses: DiceGroup[] = []\n  if (specialtyBonus) bonuses.push(specialtyBonus)\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.basicAttack}\n    name={'Basic Attack'}\n    attrs={[CharacterAttr.agility]}\n    skills={[ActiveSkillId.firearms]}\n    bonuses={bonuses}\n    dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n  />\n}\n\nexport const DroneAttackPool: FC<FirearmPoolProps> = ({\n  weapon,\n}) => {\n  const targetingAutosoft = useTargetingAutosoft(weapon.name) || -1\n\n  const targetingGroup: DiceGroup = { name: 'Targeting', size: targetingAutosoft }\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.droneAttack}\n    name={'Drone Attack'}\n    attrs={[VehicleAttr.sensor]}\n    groups={[targetingGroup]}\n    dmgPenaltyTypes={[DamageType.vehiclePhysical]}\n  />\n}\n\nexport const VehicleAttackPool: FC<FirearmPoolProps> = () => <DicePool\n  poolKey={WeaponPoolKeys.mountedAttack}\n  name={'Mounted Attack'}\n  attrs={[CharacterAttr.logic]}\n  skills={[ActiveSkillId.engineering]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nexport const RiggedAttackPool: FC<FirearmPoolProps> = () => {\n  const controlRig = useFindGear<AugmentData>(gear => gear.augmentType === AugmentType.controlRig)\n  if (!controlRig) return null\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.riggedAttack}\n    name={'Rigged Attack'}\n    attrs={[CharacterAttr.logic]}\n    skills={[ActiveSkillId.engineering]}\n    bonuses={[\n      { name: 'Control Rig', size: controlRig.attributes[AugmentAttr.rating] },\n    ]}\n    dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun, DamageType.vehiclePhysical]}\n  />\n}\n","import { Box, Typography, useMediaQuery, useTheme } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { DamageProvider } from '../../System/Damage/DamageProvider'\nimport { DamageTrack } from '../../System/Damage/DamageTrack'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { VehicleDefRatingStat } from '../../System/DefenseRating'\nimport { CharacterColdVrInit, CharacterHotVrInit, InitiativeStat } from '../../System/Initiative'\nimport { AttributeBlock } from '../../UI/AttributeBlock'\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { StatBlock } from '../../UI/StatBlock'\nimport { useGear, useGearOfType } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearDicePools } from '../GearDicePools'\nimport { GearInfoProps } from '../GearInfo'\nimport { GearInfoBlock } from '../GearInfoBlock'\nimport { RccData } from '../Rcc/RccData'\nimport { AutosoftData } from '../Software/Autosoft/AutosoftData'\nimport { AutosoftProvider } from '../Software/Autosoft/AutosoftProvider'\nimport { AutosoftsList } from '../Software/Autosoft/AutosoftsList'\nimport { PilotEvadePool, RiggedEvadePool } from './DicePools'\nimport { VehicleAttr } from './VehicleAttr'\nimport { VehicleData } from './VehicleData'\nimport { ModType, VehicleModData } from './VehicleModData'\n\nexport const VehicleInfo: FC<GearInfoProps<VehicleData>> = ({\n  item: vehicle,\n  expanded,\n}) => {\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n\n  const pilot = vehicle.attributes[VehicleAttr.pilot] || 0\n\n  const riggerInterface = useGearOfType<VehicleModData>(GearType.vehicleMod)\n    .filter(gear => gear.attachedTo === vehicle.id)\n    .find(gear => gear.modType === ModType.riggerInterface)\n\n  const rcc = useGear<RccData>(vehicle.slavedTo)\n  const physicalMax = Math.ceil(vehicle.attributes[VehicleAttr.body] / 2) + 8\n  const allAutosofts = useGearOfType<AutosoftData>(GearType.autosoft)\n\n  let autosofts = allAutosofts\n    .filter(gear => gear.attachedTo === vehicle.id)\n\n  if (rcc) {\n    autosofts = [\n      ...autosofts,\n      ...allAutosofts\n        .filter(autosoft => autosoft.attachedTo === rcc.id)\n        .filter(autosoft => rcc.slavedAutosofts.includes(autosoft.id)),\n    ]\n  }\n\n  return (\n    <DamageProvider type={DamageType.vehiclePhysical} id={vehicle.id}>\n      <AutosoftProvider autosofts={autosofts}>\n        <GearInfoBlock item={vehicle} expanded={expanded}>\n          <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'row-reverse' : 'column', flexWrap: 'wrap' }}>\n            <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'column' : 'row', padding: 1, gap: 1 }}>\n              <Box>\n                <Typography variant={'h6'}>Combat</Typography>\n                <StatBlock vertical>\n                  <InitiativeStat name=\"Drone Init\" base={pilot * 2} dice={4} />\n                  {riggerInterface && (\n                    <>\n                      <CharacterHotVrInit />\n                      <CharacterColdVrInit />\n                    </>\n                  )}\n                  <VehicleDefRatingStat />\n                </StatBlock>\n              </Box>\n\n              <Box>\n                <DamageTrack type={DamageType.vehiclePhysical} max={physicalMax} label=\"Physical\" />\n              </Box>\n            </Box>\n\n            <Box sx={{ flexGrow: 1 }}>\n              <GearDicePools>\n                <PilotEvadePool vehicle={vehicle} />\n                <RiggedEvadePool vehicle={vehicle} />\n              </GearDicePools>\n\n              {rcc && (\n                <InfoSection>\n                  <Typography variant={'h6'}>Slaved To</Typography>\n                  <Typography>{rcc.name}</Typography>\n                  <AttributeBlock attributes={rcc.attributes} />\n                </InfoSection>\n              )}\n\n              <InfoSection>\n                <Typography variant={'h6'}>Autosofts</Typography>\n                <AutosoftsList autosofts={autosofts} slavedIds={rcc?.slavedAutosofts} />\n              </InfoSection>\n            </Box>\n          </Box>\n        </GearInfoBlock>\n      </AutosoftProvider>\n    </DamageProvider>\n  )\n}\n","import { FC } from 'react'\n\nimport { useGear } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearDicePools } from '../GearDicePools'\nimport { GearInfoProps } from '../GearInfo'\nimport { GearInfoBlock } from '../GearInfoBlock'\nimport { BasicAttackPool, DroneAttackPool, RiggedAttackPool, VehicleAttackPool } from './DicePools'\nimport { WeaponData } from './WeaponData'\n\nexport const WeaponInfo: FC<GearInfoProps<WeaponData>> = ({\n  expanded,\n  item: weapon,\n}) => {\n  const mounted = useGear(weapon.attachedTo)?.gearType === GearType.vehicleMod\n\n  return (\n    <GearInfoBlock item={weapon} expanded={expanded}>\n      <GearDicePools>\n        {mounted ? (\n          <>\n            <VehicleAttackPool weapon={weapon} />\n            <DroneAttackPool weapon={weapon} />\n            <RiggedAttackPool weapon={weapon} />\n          </>\n        ) : (\n          <>\n            <BasicAttackPool weapon={weapon} />\n          </>\n        )}\n      </GearDicePools>\n    </GearInfoBlock>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { GearData, GearType } from './GearData'\nimport { GearInfoBlock } from './GearInfoBlock'\nimport { RccData } from './Rcc/RccData'\nimport { RccInfo } from './Rcc/RccInfo'\nimport { VehicleData } from './Vehicles/VehicleData'\nimport { VehicleInfo } from './Vehicles/VehicleInfo'\nimport { WeaponData } from './Weapons/WeaponData'\nimport { WeaponInfo } from './Weapons/WeaponInfo'\n\nexport interface GearInfoProps<Type extends GearData = GearData> {\n  item: Type\n  expanded?: boolean\n}\n\nexport const GearInfo: FC<GearInfoProps> = ({\n  item,\n  expanded,\n}) => {\n  switch (item.gearType) {\n    case GearType.weapon:\n      return <WeaponInfo item={item as WeaponData} expanded={expanded} />\n    case GearType.vehicle:\n      return <VehicleInfo item={item as VehicleData} expanded={expanded} />\n    case GearType.rcc:\n      return <RccInfo item={item as RccData} expanded={expanded} />\n    default:\n      return <GearInfoBlock item={item} expanded={expanded} />\n  }\n}\n","import Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { GearData } from './GearData'\nimport { GearInfo } from './GearInfo'\n\ninterface GearListProps {\n  gear: GearData[]\n  expanded?: boolean\n}\n\nexport const GearList: FC<GearListProps> = ({\n  gear,\n  expanded = true,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      {gear.map((gear) => <GearInfo key={gear.id} item={gear} expanded={expanded} />)}\n    </Box>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { AugmentData } from '../../Gear/Augments/AugmentData'\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\n\nexport const AugmentsPage: FC = () => {\n  const augments = useGearOfType<AugmentData>(GearType.augment)\n    .filter(gear => !gear.attachedTo)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Augments</Typography>\n      <GearList gear={augments} />\n    </>\n  )\n}\n","import { Typography, useMediaQuery, useTheme } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { collectGearEffects, isInitBonus } from '../../Gear/Effect'\nimport { useAllGear } from '../../Gear/GearContext'\nimport { useAttribute } from '../../System/AttributeProvider'\nimport { DamageTrack } from '../../System/Damage/DamageTrack'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { CharacterDefRatingStat } from '../../System/DefenseRating'\nimport { CharacterColdVrInit, CharacterHotVrInit, InitiativeStat } from '../../System/Initiative'\nimport { StatBlock } from '../../UI/StatBlock'\nimport { CharacterAttr } from '../CharacterAttr'\n\nexport const CombatArea: FC = () => {\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n  const gear = useAllGear()\n\n  const body = useAttribute<number>(CharacterAttr.body) || 0\n  const reaction = useAttribute<number>(CharacterAttr.reaction) || 0\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const willpower = useAttribute<number>(CharacterAttr.willpower) || 0\n\n  const physicalMax = Math.ceil(body / 2) + 8\n  const stunMax = Math.ceil(willpower / 2) + 8\n\n  const initDice = collectGearEffects(gear)\n    .filter(isInitBonus)\n    .reduce((sum, effect) => sum + effect.dice, 1)\n\n  return <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'column' : 'row', padding: 1, gap: 1 }}>\n    <Box>\n      <Typography variant={'h6'}>Combat</Typography>\n      <StatBlock vertical>\n        {/* NOTE: pg. 67 => changed by augments */}\n        <InitiativeStat name=\"Init\" base={reaction + intuition} dice={initDice} />\n        <CharacterHotVrInit />\n        <CharacterColdVrInit />\n        <CharacterDefRatingStat />\n      </StatBlock>\n    </Box>\n\n    <Box>\n      <DamageTrack type={DamageType.charPhysical} max={physicalMax} label=\"Physical\" />\n    </Box>\n\n    <Box>\n      <DamageTrack type={DamageType.charStun} max={stunMax} label=\"Stun\" />\n    </Box>\n  </Box>\n}\n","import { FC } from 'react'\n\nimport { useAttributes } from '../../../System/AttributeProvider'\nimport { AttributeBlock } from '../../../UI/AttributeBlock'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { CharacterAttr } from '../../CharacterAttr'\n\nexport const AttributesSection: FC = () => {\n  const charAttributes = useAttributes([\n    CharacterAttr.body,\n    CharacterAttr.agility,\n    CharacterAttr.reaction,\n    CharacterAttr.strength,\n    CharacterAttr.willpower,\n    CharacterAttr.logic,\n    CharacterAttr.intuition,\n    CharacterAttr.charisma,\n    CharacterAttr.edge,\n    CharacterAttr.essence,\n    CharacterAttr.magic,\n    CharacterAttr.resonance,\n  ])\n\n  const magic = charAttributes[CharacterAttr.magic]\n  if (!magic) delete charAttributes[CharacterAttr.magic]\n\n  const resonance = charAttributes[CharacterAttr.resonance]\n  if (!resonance) delete charAttributes[CharacterAttr.resonance]\n\n  return <InfoSection>\n    <AttributeBlock attributes={charAttributes} />\n  </InfoSection>\n}\n","import { Typography } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { useAllGear } from '../../../Gear/GearContext'\nimport { KitAttr } from '../../../Gear/Kit/KitAttr'\nimport { KitType } from '../../../Gear/Kit/KitType'\nimport { OtherGearData } from '../../../Gear/OtherGearData'\nimport { DamageType } from '../../../System/Damage/DamageType'\nimport { ActiveSkillId } from '../../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool, DicePools, skillSpecialtyBonus } from '../../../UI/DicePool'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { CharacterAttr } from '../../CharacterAttr'\nimport { CharacterPoolTypes } from '../../CharacterPoolTypes'\nimport { useActiveSkill } from '../../CharacterProvider'\n\nexport const DicePoolsSection: FC = () => {\n  return <InfoSection>\n    <Typography variant={'h6'}>Dice Pools</Typography>\n    <DicePools>\n      <DodgePool />\n      <ResistDamagePool />\n      <ComposurePool />\n      <JudgeIntentPool />\n      <MemoryPool />\n      <LiftPool />\n      <FirstAidPool />\n      <MedkitPool />\n    </DicePools>\n  </InfoSection>\n}\n\nconst DodgePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.dodge}\n  name={'Dodge'}\n  attrs={[CharacterAttr.reaction, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst ResistDamagePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.dmgResist}\n  name={'Resist Dmg.'}\n  attrs={[CharacterAttr.body]}\n  dmgPenaltyTypes={[]}\n/>\n\nconst ComposurePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.composure}\n  name={'Composure'}\n  attrs={[CharacterAttr.willpower, CharacterAttr.charisma]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst JudgeIntentPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.judgeIntent}\n  name={'Judge Intent'}\n  attrs={[CharacterAttr.willpower, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst MemoryPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.memory}\n  name={'Memory'}\n  attrs={[CharacterAttr.logic, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst LiftPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.liftCarry}\n  name={'Lift/Carry'}\n  attrs={[CharacterAttr.body, CharacterAttr.strength]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst FirstAidPool: FC = () => {\n  const firstAidKit = useAllGear()\n    .find(gear => gear.kit === KitType.firstAid)\n  const biotechSkill = useActiveSkill(ActiveSkillId.biotech)\n  if (!biotechSkill) return null\n\n  const bonuses: DiceGroup[] = []\n  const specialtyBonus = skillSpecialtyBonus(biotechSkill, 'First Aid')\n  if (specialtyBonus) bonuses.push(specialtyBonus)\n  if (!firstAidKit) bonuses.push({ name: 'Kit', size: -2 })\n\n  return (\n    <DicePool\n      poolKey={CharacterPoolTypes.firstAid}\n      name={'First Aid'}\n      skills={[ActiveSkillId.biotech]}\n      attrs={[CharacterAttr.logic]}\n      bonuses={bonuses}\n      dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n    />\n  )\n}\n\nconst MedkitPool: FC = () => {\n  const biotechSkill = useActiveSkill(ActiveSkillId.biotech)\n  const medKit = useAllGear().find(gear => gear.kit === KitType.medKit) as OtherGearData | undefined\n\n  if (!biotechSkill) return null\n  if (!medKit) return null\n\n  const bonuses: DiceGroup[] = []\n  if (medKit.attributes && medKit.attributes[KitAttr.medkitRating])\n    bonuses.push({ name: 'Medkit', size: medKit.attributes[KitAttr.medkitRating] as number || 0 })\n\n  return (\n    <DicePool\n      poolKey={CharacterPoolTypes.firstAid}\n      name={'MedKit'}\n      skills={[ActiveSkillId.biotech]}\n      attrs={[CharacterAttr.logic]}\n      bonuses={bonuses}\n      dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n    />\n  )\n}\n","import { Chip, Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC, useState } from 'react'\n\nimport { useAttribute } from '../../../System/AttributeProvider'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { TrackCell } from '../../../UI/TrackCell'\nimport { CharacterAttr } from '../../CharacterAttr'\n\nexport const EdgeTracker: FC = () => {\n  const edgeSessionKey = 'char.edge'\n  const charEdgeAttr = useAttribute<number>(CharacterAttr.edge) || 0\n  const defaultEdge = parseInt(localStorage.getItem(edgeSessionKey) || charEdgeAttr.toString())\n\n  const [curValue, setCurValue] = useState<number>(defaultEdge)\n  const setEdge = (value: number) => {\n    setCurValue(value)\n    localStorage.setItem(edgeSessionKey, value.toString())\n  }\n\n  const onToggleCell = (value: number) => {\n    if (value === curValue) {\n      setEdge(value - 1)\n    } else {\n      setEdge(value)\n    }\n  }\n\n  const onReset = () => {\n    setEdge(charEdgeAttr)\n  }\n\n  return (\n    <InfoSection>\n      <Box>\n        <Typography variant=\"h6\" sx={{ display: 'inline', marginRight: 1 }}>Edge</Typography>\n        <Chip onClick={onReset} label=\"Reset\" size=\"small\" variant=\"outlined\" sx={{ verticalAlign: 'text-bottom' }} />\n      </Box>\n      <Box sx={{ display: 'flex', textAlign: 'center', gap: 0.5 }}>\n        <Box sx={{ flexGrow: 0.5 }}>\n          <TrackCell onClick={() => setEdge(0)}>0</TrackCell>\n        </Box>\n        {new Array(7).fill(null).map((_, index) => (\n          <Box key={index} sx={{ flexGrow: 1 }}>\n            <TrackCell filled={index < curValue} onClick={() => onToggleCell(index + 1)}>\n              {index + 1}\n            </TrackCell>\n          </Box>\n        ))}\n      </Box>\n    </InfoSection>\n  )\n}\n","import { Box, Paper, Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { formatSource } from '../System/Source'\nimport { Stat } from '../UI/StatBlock'\nimport { QualityData } from './QualityData'\n\ninterface ContactListProps {\n  qualities: QualityData[]\n}\n\nexport const QualitiesList: FC<ContactListProps> = ({\n  qualities,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', gap: 1, flexDirection: 'column' }}>\n      {qualities.map(quality => (\n        <Box key={quality.name}>\n          <QualitiesListItem quality={quality} />\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\ninterface QualitiesListItemProps {\n  quality: QualityData\n}\n\nexport const QualitiesListItem: FC<QualitiesListItemProps> = ({\n  quality,\n}) => {\n  return (\n    <Paper variant=\"outlined\" sx={{ padding: 1, display: 'flex' }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"body1\">{quality.name}</Typography>\n        <Typography variant=\"caption\">{quality.description}</Typography>\n        <Typography variant=\"caption\">{quality.gameEffect}</Typography>\n      </Box>\n\n      <Box>\n        {quality.source && <Stat name=\"Source\" value={formatSource(quality.source)} />}\n        {quality.bonus && <Stat name=\"Bonus\" value={quality.bonus} />}\n        {quality.cost && <Stat name=\"Cost\" value={quality.cost} />}\n        {quality.level && <Stat name=\"Level\" value={quality.level} />}\n      </Box>\n    </Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { QualitiesList } from '../../../Qualities/QualitiesList'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { useCharacter } from '../../CharacterProvider'\n\nexport const QualitiesSection: FC = () => {\n  const character = useCharacter()\n  if (!character) return null\n\n  return <InfoSection>\n    <Typography variant={'h6'}>Qualities</Typography>\n    <QualitiesList qualities={character.qualities} />\n  </InfoSection>\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { ActiveSkillData } from './ActiveSkillData'\nimport { formatSkill } from './ActiveSkillId'\n\ninterface SkillListProps {\n  skills: ActiveSkillData[]\n}\n\nexport const ActiveSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Rank</TableCell>\n          <TableCell>Attr</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => (\n          <SkillListRow key={skill.skillId} skill={skill} />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: ActiveSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.skillId}>\n      <TableCell>\n        <div>{formatSkill(skill.skillId)}</div>\n        {skill.speciality && <div>(S. {skill.speciality})</div>}\n        {skill.expertise && <div>(E. {skill.expertise})</div>}\n      </TableCell>\n      <TableCell>\n        {skill.rank}\n      </TableCell>\n      <TableCell>\n        {skill.attr}\n        {skill.altAttr && `/${skill.altAttr}`}\n      </TableCell>\n    </TableRow>\n  )\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { KnowledgeSkillData } from './KnowledgeSkillData'\n\ninterface SkillListProps {\n  skills: KnowledgeSkillData[]\n}\n\nexport const KnowledgeSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => <SkillListRow key={skill.name} skill={skill} />)}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: KnowledgeSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.name}>\n      <TableCell colSpan={3}>{skill.name}</TableCell>\n    </TableRow>\n  )\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { LanguageSkillData } from './LanguageSkillData'\n\ninterface SkillListProps {\n  skills: LanguageSkillData[]\n}\n\nexport const LanguageSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Rank</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => (\n          <SkillListRow key={skill.name} skill={skill} />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: LanguageSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.name}>\n      <TableCell>{skill.name}</TableCell>\n      <TableCell>{skill.rank}</TableCell>\n    </TableRow>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { ActiveSkillData } from '../../../System/Skill/ActiveSkill/ActiveSkillData'\nimport { ActiveSkillList } from '../../../System/Skill/ActiveSkill/ActiveSkillList'\nimport { KnowledgeSkillData } from '../../../System/Skill/KnowledgeSkill/KnowledgeSkillData'\nimport { KnowledgeSkillList } from '../../../System/Skill/KnowledgeSkill/KnowledgeSkillList'\nimport { LanguageSkillData } from '../../../System/Skill/LanguageSkill/LanguageSkillData'\nimport { LanguageSkillList } from '../../../System/Skill/LanguageSkill/LanguageSkillList'\nimport { SkillType } from '../../../System/Skill/SkillData'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { useCharacter } from '../../CharacterProvider'\n\nexport const SkillSection: FC = () => {\n  const character = useCharacter()\n  if (!character) return null\n\n  const activeSkills = character.skills\n    .filter(skill => skill.type === SkillType.active)\n    .map(skill => skill as ActiveSkillData)\n\n  const languageSkills = character.skills\n    .filter(skill => skill.type === SkillType.language)\n    .map(skill => skill as LanguageSkillData)\n\n  const knowledgeSkills = character.skills\n    .filter(skill => skill.type === SkillType.knowledge)\n    .map(skill => skill as KnowledgeSkillData)\n\n  return <InfoSection>\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Skills</Typography>\n        <ActiveSkillList skills={activeSkills} />\n      </Box>\n\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Languages</Typography>\n        <LanguageSkillList skills={languageSkills} />\n      </Box>\n\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Knowledge</Typography>\n        <KnowledgeSkillList skills={knowledgeSkills} />\n      </Box>\n    </Box>\n  </InfoSection>\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { formatNuyen, useNuyenBalance } from '../../System/Nuyen'\nimport { InfoBlock } from '../../UI/InfoBlock/InfoBlock'\nimport { Stat } from '../../UI/StatBlock'\nimport { useCharacter } from '../CharacterProvider'\nimport { CombatArea } from './CombatArea'\nimport { AttributesSection } from './Sections/AttributesSection'\nimport { DicePoolsSection } from './Sections/DicePoolsSection'\nimport { EdgeTracker } from './Sections/EdgeTracker'\nimport { QualitiesSection } from './Sections/QualitiesSection'\nimport { SkillSection } from './Sections/SkillSection'\n\nexport const CharacterInfo: FC = () => {\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n  const character = useCharacter()\n  const nuyenBalance = useNuyenBalance()\n\n  if (!character) return null\n\n  const bio = character.bio\n  const karma: number = character.karma.reduce((sum, entry) => sum + entry.value, 0)\n\n  const blockTitleRight = <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n    <Stat name=\"Nuyen\" value={formatNuyen(nuyenBalance)} />\n    <Stat name=\"Karma\" value={karma} />\n  </Box>\n\n  return (\n    <InfoBlock\n      title={bio.alias || bio.name} subtitle={bio.metaType} titleFontSize={50}\n      titleRight={blockTitleRight}\n    >\n      <AttributesSection />\n      <EdgeTracker />\n\n      <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'row-reverse' : 'column' }}>\n        <CombatArea />\n\n        <Box sx={{ flexGrow: 1 }}>\n          <DicePoolsSection />\n          <SkillSection />\n          <QualitiesSection />\n        </Box>\n      </Box>\n    </InfoBlock>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport React, { FC } from 'react'\n\nimport { InfoBlock } from '../UI/InfoBlock/InfoBlock'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\nimport { Stat } from '../UI/StatBlock'\nimport { ContactData } from './ContactData'\n\ninterface ContactInfoProps {\n  contact: ContactData\n}\n\nexport const ContactInfo: FC<ContactInfoProps> = ({\n  contact,\n}) => {\n  const blockTitleRight = <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n    <Stat name=\"Loyalty\" value={contact.loyalty} />\n    <Stat name=\"Connection\" value={contact.connection} />\n  </Box>\n\n  return (\n    <InfoBlock title={contact.name} titleRight={blockTitleRight}>\n      {contact.description && (\n        <InfoSection>\n          <Typography>{contact.description}</Typography>\n        </InfoSection>\n      )}\n    </InfoBlock>\n  )\n}\n","import { Box } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { ContactData } from './ContactData'\nimport { ContactInfo } from './ContactInfo'\n\ninterface ContactListProps {\n  contacts: ContactData[]\n}\n\nexport const ContactList: FC<ContactListProps> = ({\n  contacts,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      {contacts.map(contact => (\n        <ContactInfo key={contact.name} contact={contact} />\n      ))}\n    </Box>\n  )\n}\n","import { BaseGearData, GearData, GearType } from '../GearData'\nimport { SinAttr } from './SinAttr'\n\nexport interface SinData extends BaseGearData {\n  gearType: GearType.sin\n  attributes: {\n    [SinAttr.rating]: number\n  }\n}\n\nexport function isSin (gear: GearData): gear is SinData {\n  return gear.gearType === GearType.sin\n}\n","import { Box, Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { CharacterInfo } from '../../Character/InfoBlock/CharacterInfo'\nimport { ContactList } from '../../Contacts/ContactList'\nimport { useAllGear } from '../../Gear/GearContext'\nimport { GearList } from '../../Gear/GearList'\nimport { isSin } from '../../Gear/License/SinData'\n\nexport const CharacterInfoPage: FC = () => {\n  const character = useCharacter()\n  const sins = useAllGear().filter(isSin)\n  if (!character) return null\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      <CharacterInfo />\n\n      <Box>\n        <Typography variant={'h4'}>SINs</Typography>\n        <GearList gear={sins} />\n      </Box>\n\n      <Box>\n        <Typography variant={'h4'}>Contacts</Typography>\n        <ContactList contacts={character.contacts} />\n      </Box>\n    </Box>\n  )\n}\n","import { Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { parseISO } from 'date-fns'\nimport { FC } from 'react'\n\nimport { formatDate } from '../Helpers'\nimport { BalanceLog } from '../System/BalanceLog'\n\ninterface BalanceLogTableProps {\n  log: BalanceLog\n\n  formatValue? (value: number): string\n}\n\nexport const BalanceLogTable: FC<BalanceLogTableProps> = ({\n  log,\n  formatValue = (value) => value,\n}) => {\n  let runningTotal = 0\n\n  const logRows = log\n    .sort((a, b) => parseISO(a.date).getTime() - parseISO(b.date).getTime())\n    .map(entry => (\n      <TableRow key={entry.id}>\n        <TableCell>{formatDate(entry.date)}</TableCell>\n        <TableCell>{entry.note}</TableCell>\n        <TableCell align=\"right\">{formatValue(entry.value)}</TableCell>\n        <TableCell align=\"right\">{formatValue(runningTotal += entry.value)}</TableCell>\n      </TableRow>\n    ))\n\n  logRows.reverse()\n\n  return (\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Note</TableCell>\n            <TableCell align=\"right\">Amount</TableCell>\n            <TableCell align=\"right\">Balance</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {logRows}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n","import { Paper } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { BalanceLogTable } from '../../UI/BalanceLogTable'\n\nexport const KarmaPage: FC = () => {\n  const character = useCharacter()\n  if (!character) return null\n\n  return (\n    <Paper>\n      <BalanceLogTable log={character.karma} />\n    </Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { useAllGear } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\n\nexport const MiscGearPage: FC = () => {\n  const excludedGear: GearType[] = [\n    GearType.weapon,\n    GearType.vehicle,\n    GearType.augment,\n    GearType.sin,\n    GearType.license,\n  ]\n\n  const otherGear = useAllGear()\n    .filter(gear => !gear.attachedTo)\n    .filter(gear => !excludedGear.includes(gear.gearType))\n\n  return (\n    <>\n      <Typography variant={'h4'}>Other Gear</Typography>\n      <GearList gear={otherGear} />\n    </>\n  )\n}\n","import { Paper } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { formatNuyen, useNuyenBalance } from '../../System/Nuyen'\nimport { BalanceLogTable } from '../../UI/BalanceLogTable'\nimport { Stat, StatBlock } from '../../UI/StatBlock'\n\nexport const NuyenPage: FC = () => {\n  const character = useCharacter()\n  const nuyenBalance = useNuyenBalance()\n  if (!character) return null\n\n  return (\n    <Paper>\n      <StatBlock>\n        <Stat name={'Total Balance'} value={formatNuyen(nuyenBalance)} />\n      </StatBlock>\n      <BalanceLogTable log={character.nuyen} formatValue={formatNuyen} />\n    </Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\nimport { VehicleData } from '../../Gear/Vehicles/VehicleData'\n\nexport const VehiclesPage: FC = () => {\n  const vehicles = useGearOfType<VehicleData>(GearType.vehicle)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Vehicles</Typography>\n      <GearList gear={vehicles} />\n    </>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\nimport { WeaponData } from '../../Gear/Weapons/WeaponData'\n\nexport const WeaponsPage: FC = () => {\n  const weapons = useGearOfType<WeaponData>(GearType.weapon)\n    .filter(gear => !gear.attachedTo)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Weapons</Typography>\n      <GearList gear={weapons} />\n    </>\n  )\n}\n","import { Paper } from '@material-ui/core'\nimport React, { FC, useEffect, useState } from 'react'\nimport { Redirect, Route, Switch, useHistory, useParams, useRouteMatch } from 'react-router-dom'\n\nimport { CharacterData } from '../Character/CharacterData'\nimport { CharacterProvider } from '../Character/CharacterProvider'\nimport { loadCharacter } from '../StorageService'\nimport { CharacterNavDrawer } from '../UI/NavDrawer/CharacterNavDrawer'\nimport { AugmentsPage } from './Character/AugmentsPage'\nimport { CharacterInfoPage } from './Character/CharacterInfoPage'\nimport { KarmaPage } from './Character/KarmaPage'\nimport { MiscGearPage } from './Character/MiscGearPage'\nimport { NuyenPage } from './Character/NuyenPage'\nimport { VehiclesPage } from './Character/VehiclesPage'\nimport { WeaponsPage } from './Character/WeaponsPage'\nimport { RootLayout } from './RootLayout'\n\nexport const CharacterPage: FC = () => {\n  const history = useHistory()\n  const { path } = useRouteMatch()\n  const { characterId } = useParams<{ characterId: string }>()\n  const [character, setCharacter] = useState<CharacterData | null>(null)\n\n  useEffect(() => {\n    const character: CharacterData | null = loadCharacter(characterId)\n    if (character === null) history.push('/')\n    setCharacter(character)\n  }, [history, characterId])\n\n  if (!character) { return <Paper>Loading...</Paper>}\n\n  return (\n    <CharacterProvider character={character}>\n      <RootLayout NavDrawer={CharacterNavDrawer}>\n        <Switch>\n          <Route path={`${path}/weapons`} component={WeaponsPage} />\n          <Route path={`${path}/vehicles`} component={VehiclesPage} />\n          <Route path={`${path}/augments`} component={AugmentsPage} />\n          <Route path={`${path}/misc`} component={MiscGearPage} />\n          <Route path={`${path}/karma`} component={KarmaPage} />\n          <Route path={`${path}/nuyen`} component={NuyenPage} />\n          <Route path={`${path}/`} component={CharacterInfoPage} />\n          <Route><Redirect to=\"/\" /></Route>\n        </Switch>\n      </RootLayout>\n    </CharacterProvider>\n  )\n}\n","import React, { FC } from 'react'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\n\nimport { AppThemeProvider } from './AppThemeProvider'\nimport { CharacterListPage } from './Pages/CharacterListPage'\nimport { CharacterPage } from './Pages/CharacterPage'\nimport { loadCharacters } from './StorageService'\n\nloadCharacters()\n\nconst App: FC = () => {\n  return (\n    <HashRouter>\n      <AppThemeProvider>\n        <Switch>\n          <Route path=\"/characters\" component={CharacterListPage} />\n          <Route path=\"/:characterId\" component={CharacterPage} />\n          <Route><Redirect to=\"/characters\" /></Route>\n        </Switch>\n      </AppThemeProvider>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DamageTrack\":\"DamageTrack_DamageTrack__3Cfmx\"};"],"sourceRoot":""}