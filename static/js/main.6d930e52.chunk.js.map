{"version":3,"sources":["AppThemeProvider.tsx","Api/Model.ts","Gear/Effect.ts","Character/Migrations/index.ts","Character/Migrations/1-Inital.ts","Character/Migrations/2-Bio.ts","Character/Migrations/3-BalanceLog.ts","Character/CharacterAttr.tsx","Gear/Augments/AugmentAttr.ts","Gear/GearData.ts","Gear/Augments/AugmentData.ts","Gear/License/SinAttr.ts","Gear/OtherGearData.ts","Gear/Rcc/RccAttr.tsx","Gear/Software/Autosoft/AutosoftAttr.ts","Gear/Vehicles/VehicleAttr.tsx","Gear/Vehicles/VehicleModData.ts","Gear/Weapons/WeaponAttr.ts","Gear/Weapons/WeaponModData.ts","System/Skill/ActiveSkill/ActiveSkillId.ts","System/Attribute.ts","System/Skill/SkillData.ts","data/Artemis.ts","Character/CharacterPoolTypes.tsx","Gear/Armor/ArmorAttr.ts","Gear/Commlink/CommlinkAttr.ts","Gear/Kit/KitAttr.ts","Gear/Kit/KitType.ts","data/Silicus.ts","StorageService.ts","Helpers.ts","UI/AppBar.tsx","Pages/RootLayout.tsx","Pages/CharacterListPage.tsx","Gear/GearContext.tsx","System/AttributeProvider.tsx","System/Damage/DamageProvider.tsx","System/Damage/DamageType.ts","System/Skill/ActiveSkill/ActiveSkillData.ts","Character/CharacterProvider.tsx","Gear/Weapons/PistolSvg.tsx","UI/NavDrawer/index.tsx","UI/NavDrawer/DefaultNavDrawer.tsx","UI/NavDrawer/CharacterNavDrawer.tsx","System/Nuyen.ts","System/Source.ts","UI/StatBlock.tsx","UI/AttributeBlock.tsx","UI/InfoBlock/InfoBlock.tsx","Gear/Software/Autosoft/AutosoftData.ts","Gear/Vehicles/DicePools.tsx","UI/InfoBlock/InfoSection.tsx","Gear/GearInfoBlock.tsx","Gear/Availability.ts","Gear/Rcc/RccInfo.tsx","UI/TrackCell.tsx","System/Damage/DamageTrack.tsx","System/DefenseRating.tsx","System/Initiative.tsx","UI/DicePool.tsx","Gear/GearDicePools.tsx","Gear/Software/Autosoft/AutosoftProvider.tsx","Gear/Software/Autosoft/AutosoftsList.tsx","Gear/Weapons/DicePools.tsx","Gear/Vehicles/VehicleInfo.tsx","Gear/Weapons/WeaponInfo.tsx","Gear/GearInfo.tsx","Gear/GearList.tsx","Pages/Character/AugmentsPage.tsx","Character/InfoBlock/CombatArea.tsx","Character/InfoBlock/Sections/AttributesSection.tsx","Character/InfoBlock/Sections/DicePoolsSection.tsx","Character/InfoBlock/Sections/EdgeTracker.tsx","Qualities/QualitiesList.tsx","Character/InfoBlock/Sections/QualitiesSection.tsx","System/Skill/ActiveSkill/ActiveSkillList.tsx","System/Skill/KnowledgeSkill/KnowledgeSkillList.tsx","System/Skill/LanguageSkill/LanguageSkillList.tsx","Character/InfoBlock/Sections/SkillSection.tsx","Character/InfoBlock/CharacterInfo.tsx","Contacts/ContactInfo.tsx","Contacts/ContactList.tsx","Gear/License/SinData.ts","Pages/Character/CharacterInfoPage.tsx","UI/BalanceLogTable.tsx","Pages/Character/KarmaPage.tsx","Pages/Character/MiscGearPage.tsx","Pages/Character/NuyenPage.tsx","Pages/Character/VehiclesPage.tsx","Pages/Character/WeaponsPage.tsx","Pages/CharacterPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","System/Damage/DamageTrack.module.scss"],"names":["displayFontFamily","theme","createTheme","palette","mode","primary","main","secondary","text","background","default","typography","h1","fontFamily","h2","h3","h4","h5","h6","AppThemeProvider","children","ThemeProvider","nextRecordId","uuid","EffectType","migrateCharacter","character","migrations","migration","dataVersion","version","run","bio","name","alias","metaType","ethnicity","age","gender","height","weight","updated","nuyen","id","date","Date","toISOString","note","value","karma","sort","a","b","isAttrBonus","effect","type","attrBonus","isAttrOverride","attrOverride","isInitBonus","initBonus","isSkillBonus","skillBonus","CharacterAttr","AugmentAttr","GearType","AugmentType","AugmentSlot","AugmentGrade","SinAttr","OtherGearAttr","RccAttr","AutosoftAttr","VehicleAttr","ModType","WeaponAttr","WeaponModAttr","WeaponModSlot","ActiveSkillId","collectGearEffects","gear","filter","effects","flatMap","attributeNames","registerAttrNames","names","formatAttr","calculateAttributes","attrs","adjustedAttrs","Object","entries","forEach","attr","calculateAttribute","overrides","map","length","Math","max","reduce","sum","bonus","isAugment","gearType","augment","body","agility","reaction","strength","willpower","logic","intuition","charisma","edge","essence","magic","resonance","grade","rating","capacity","capacityCost","deviceRating","dataProcessing","firewall","skill","weapon","handling","accel","speedInterval","topSpeed","armor","pilot","sensor","seat","dv","attackRatings","modes","ammo","maxRange","FirearmSpecialties","SkillType","skillNames","athletics","biotech","closeCombat","cracking","electronics","engineering","firearms","perception","piloting","stealth","formatSkill","skillId","Artemis","role","lifestyle","upkeep","prepaid","attributes","contacts","connection","loyalty","description","skills","active","rank","speciality","altAttr","language","knowledge","qualities","source","book","page","cost","gameEffect","addGear","attachedGear","push","item","attachedTo","smartGunIntMod","weaponMod","slot","removable","wirelessBonus","enabled","avail","rarity","license","augmentSlot","headware","augmentType","controlRig","essenceCost","used","bioware","specialtyName","submachineGuns","topOrUnder","lightPistols","autosofts","autosoft","rcc","slavedAutosofts","soft","CharacterPoolTypes","ArmorAttr","CommlinkAttr","KitAttr","KitType","fnHar","rifles","stdWeaponMount","vehicleMod","modType","illegal","riggerInterface","sensorArray","vehicle","slavedTo","pilotingSpeciality","Array","fill","_","index","quantity","alpha","eyeware","other","bodyware","sin","programSlots","medkitRating","Silicus","expertise","dicePoolBonus","poolType","barrel","heavyPistols","trasers","dice","dmgResist","beta","defenseBonus","armorMod","kit","medKit","firstAid","characterStorageKey","characterId","charactersStorageKey","loadCharacters","savedCharacters","Error","console","log","localStorage","setItem","JSON","stringify","saveCharacter","parse","getItem","noOp","AppBar","withMenu","openMenu","Box","sx","flexGrow","position","Toolbar","IconButton","size","color","mr","onClick","Typography","variant","component","RootLayout","NavDrawer","useState","drawerOpen","setDrawerOpen","Paper","display","gridTemplateRows","bgcolor","className","square","open","closeDrawer","overflow","width","maxWidth","margin","padding","CharacterListPage","history","useHistory","characters","setCharacters","useEffect","Stack","Button","fontSize","justifyContent","GearContext","createContext","GearProvider","Provider","useAllGear","useContext","useGear","gearId","allGear","find","undefined","useFindGear","foundGear","useFilterGear","useAttachedGear","useGearOfType","AttributeContext","AttributeProvider","parentAttrs","useAttributes","keys","allAttributes","filtered","key","useAttribute","DamageType","DamageContext","DamageProvider","dmgSessionKey","setDmgValue","parseInt","damages","setValue","toString","isActiveSkill","hasSpecialty","specialty","toLowerCase","hasExpertise","CharacterContext","CharacterProvider","charPhysical","charStun","useCharacter","useActiveSkill","PistolSvg","xmlns","viewBox","enableBackground","d","NavButton","icon","label","routeTo","ListItem","button","ListItemIcon","SvgIcon","ListItemText","DefaultNavDrawer","Drawer","anchor","onClose","List","faUsers","CharacterNavDrawer","faUser","faCarAlt","faCogs","faArchive","Divider","faYenSign","faAward","nuyenFormatter","Intl","NumberFormat","formatNuyen","format","useNuyenBalance","parseISO","getTime","entry","formatSource","StatBlock","vertical","gap","flexWrap","flexDirection","Stat","toFixed","whiteSpace","textAlign","AttributeBlock","library","add","faCaretSquareDown","faCaretSquareRight","AutosoftType","VehiclePoolKeys","InfoBlock","title","titleFontSize","subtitle","titleRight","expanded","defaultExpanded","expandable","setExpanded","elevation","Chip","marginLeft","verticalAlign","InfoSection","GearInfoBlock","blockTitleRight","Boolean","fontStyle","RccInfo","includes","slavedVehicles","maxSlaved","TrackCell","filled","hovered","setHovered","backgroundColor","userSelect","onMouseEnter","onMouseLeave","DamageTrack","current","useDamage","onChange","useSetDamage","onToggleCell","paddingBottom","styles","toggleCell","DamageCell","penalty","floor","CharacterDefRatingStat","VehicleDefRatingStat","InitiativeStat","base","CharacterHotVrInit","CharacterColdVrInit","DicePools","skillSpecialtyBonus","DicePool","bonuses","groups","dmgPenaltyTypes","skillList","skillIds","useSkills","attrList","dmgPenalty","types","damageData","useDamagePenalty","attrType","total","g","group","DiceGroupDisplay","marginRight","GearDicePools","AutosoftContext","AutosoftProvider","useAutosoft","AutosoftsList","slavedIds","paddingTop","AutosoftListItem","faBroadcastTower","faSave","WeaponPoolKeys","AutosoftPiloting","evasionAutosoft","evasion","maneuveringAutosoft","maneuvering","diceGroups","poolKey","pilotEvade","vehiclePhysical","DriverPiloting","pilotingSkill","riggedEvade","RiggedPiloting","VehicleInfo","useTheme","mdScreenOrLarger","useMediaQuery","breakpoints","up","physicalMax","ceil","allAutosofts","BasicAttackPool","firearmsSkill","specialtyBonus","basicAttack","DroneAttackPool","targetingGroup","weaponName","useTargetingAutosoft","droneAttack","VehicleAttackPool","mountedAttack","RiggedAttackPool","riggedAttack","WeaponInfo","mounted","GearInfo","GearList","AugmentsPage","augments","CombatArea","stunMax","initDice","AttributesSection","charAttributes","DicePoolsSection","DodgePool","dodge","ResistDamagePool","ComposurePool","composure","JudgeIntentPool","judgeIntent","MemoryPool","memory","LiftPool","liftCarry","FirstAidPool","firstAidKit","biotechSkill","MedkitPool","EdgeTracker","edgeSessionKey","charEdgeAttr","defaultEdge","curValue","setCurValue","setEdge","QualitiesList","quality","QualitiesListItem","level","QualitiesSection","ActiveSkillList","Table","TableHead","TableRow","TableCell","TableBody","SkillListRow","KnowledgeSkillList","colSpan","LanguageSkillList","SkillSection","activeSkills","languageSkills","knowledgeSkills","CharacterInfo","nuyenBalance","ContactInfo","contact","ContactList","isSin","CharacterInfoPage","sins","BalanceLogTable","formatValue","runningTotal","logRows","align","reverse","KarmaPage","MiscGearPage","excludedGear","otherGear","NuyenPage","gearTotal","VehiclesPage","vehicles","WeaponsPage","weapons","CharacterPage","path","useRouteMatch","useParams","setCharacter","loadCharacter","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6d930e52.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { createTheme, ThemeProvider } from '@material-ui/core'\nimport { FC } from 'react'\n\nexport const displayFontFamily = '\"Comfortaa\", \"Helvetica\", \"Arial\", sans-serif'\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#CE93D8',\n    },\n    secondary: {\n      main: '#03A9F4',\n    },\n    text: {\n      primary: '#EEEEEE',\n    },\n    background: {\n      default: '#2D2736',\n    },\n  },\n\n  typography: {\n    h1: { fontFamily: displayFontFamily },\n    h2: { fontFamily: displayFontFamily },\n    h3: { fontFamily: displayFontFamily },\n    h4: { fontFamily: displayFontFamily },\n    h5: { fontFamily: displayFontFamily },\n    h6: { fontFamily: displayFontFamily },\n  },\n})\n\nexport const AppThemeProvider: FC = ({\n  children,\n}) => {\n  return (\n    <ThemeProvider theme={theme}>{children}</ThemeProvider>\n  )\n}\n","import * as uuid from 'uuid'\n\nexport type RecordId = string | null;\n\nexport function nextRecordId (): string {\n  return uuid.v4()\n}\n\nexport interface Model {\n  id: RecordId\n  created_at: string\n  updated_at: string\n}\n","import { ActiveSkillId } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { GearData } from './GearData'\n\nexport enum EffectType {\n  attrBonus = 'attrBonus',\n  attrOverride = 'attrOverride',\n  initBonus = 'initBonus',\n  skillBonus = 'skillBonus',\n  dicePoolBonus = 'dicePoolBonus',\n}\n\ninterface BaseGearEffect {\n  type: EffectType\n}\n\ninterface AttrBonus extends BaseGearEffect {\n  type: EffectType.attrBonus\n  attr: string\n  bonus: number\n}\n\nexport function isAttrBonus (effect: BaseGearEffect): effect is AttrBonus {\n  return effect.type === EffectType.attrBonus\n}\n\ninterface AttrOverride extends BaseGearEffect {\n  type: EffectType.attrOverride\n  attr: string\n  value: number\n}\n\nexport function isAttrOverride (effect: BaseGearEffect): effect is AttrOverride {\n  return effect.type === EffectType.attrOverride\n}\n\ninterface InitBonus extends BaseGearEffect {\n  type: EffectType.initBonus\n  dice: number\n}\n\nexport function isInitBonus (effect: BaseGearEffect): effect is InitBonus {\n  return effect.type === EffectType.initBonus\n}\n\ninterface SkillBonus extends BaseGearEffect {\n  type: EffectType.skillBonus\n  skill: ActiveSkillId\n  bonus: number\n}\n\nexport function isSkillBonus (effect: BaseGearEffect): effect is SkillBonus {\n  return effect.type === EffectType.skillBonus\n}\n\ninterface DicePoolBonus extends BaseGearEffect {\n  type: EffectType.dicePoolBonus\n  poolType: string\n  bonus: number\n}\n\nexport function isDicePoolBonus (effect: BaseGearEffect): effect is DicePoolBonus {\n  return effect.type === EffectType.dicePoolBonus\n}\n\nexport type Effect =\n  | AttrBonus\n  | AttrOverride\n  | InitBonus\n  | SkillBonus\n  | DicePoolBonus\n\nexport const collectGearEffects = (gear: GearData[]): Effect[] => {\n  return gear\n    .filter(gear => gear.effects)\n    .flatMap(gear => gear.effects as Effect[])\n}\n","import { CharacterData } from '../CharacterData'\nimport { InitialMigration } from './1-Inital'\nimport { BioMigration } from './2-Bio'\nimport { BalanceLogsMigration } from './3-BalanceLog'\n\nexport interface Migration {\n  version: number\n\n  run (data: SavedCharacterData): SavedCharacterData\n}\n\nexport interface SavedCharacterData {\n  dataVersion: number\n\n  [key: string]: unknown\n}\n\nexport const migrateCharacter = (character: SavedCharacterData | CharacterData): CharacterData => {\n  for (const migration of migrations) {\n    if (character.dataVersion >= migration.version) continue\n    character = migration.run(character as SavedCharacterData)\n    character.dataVersion = migration.version\n  }\n\n  return character as unknown as CharacterData\n}\n\nconst migrations: Migration[] = [\n  InitialMigration,\n  BioMigration,\n  BalanceLogsMigration,\n].sort((a, b) => a.version - b.version)\n","import { Migration } from './index'\n\nexport const InitialMigration: Migration = {\n  version: 1,\n  run: (character) => character,\n}\n","import { Migration, SavedCharacterData } from './index'\n\ninterface InputData extends SavedCharacterData {\n  name: string\n  metaType: string\n  alias?: string\n  ethnicity?: string\n  age?: number\n  gender?: string\n  height?: string\n  weight?: string\n}\n\ninterface OutputData extends SavedCharacterData {\n  bio: BioData\n}\n\ninterface BioData {\n  name: string\n  metaType: string\n  alias?: string\n  ethnicity?: string\n  age?: number\n  gender?: string\n  height?: string\n  weight?: string\n}\n\nexport const BioMigration: Migration = {\n  version: 2,\n\n  run: (character: InputData): OutputData => {\n    const bio: BioData = {\n      name: character.name,\n      alias: character.alias,\n      metaType: character.metaType,\n      ethnicity: character.ethnicity,\n\n      age: character.age,\n      gender: character.gender,\n      height: character.height,\n      weight: character.weight,\n    }\n\n    const updated: OutputData = { ...character, bio }\n    delete updated.name\n    delete updated.alias\n    delete updated.metaType\n    delete updated.ethnicity\n    delete updated.age\n    delete updated.gender\n    delete updated.height\n    delete updated.weight\n\n    return updated\n  },\n}\n","import { nextRecordId } from '../../Api/Model'\n\nimport { Migration, SavedCharacterData } from './index'\n\ninterface InputData extends SavedCharacterData {\n  nuyen: number\n  karma: number\n}\n\ninterface OutputData extends SavedCharacterData {\n  nuyen: BalanceEntry[]\n}\n\ninterface BalanceEntry {\n  id: string\n  date: string\n  note: string\n  value: number\n}\n\nexport const BalanceLogsMigration: Migration = {\n  version: 3,\n\n  run: (character: InputData): OutputData => {\n    const nuyen: BalanceEntry[] = [\n      {\n        id: nextRecordId(),\n        date: new Date().toISOString(),\n        note: 'Import balance',\n        value: character.nuyen,\n      },\n    ]\n\n    const karma: BalanceEntry[] = [\n      {\n        id: nextRecordId(),\n        date: new Date().toISOString(),\n        note: 'Import balance',\n        value: character.karma,\n      },\n    ]\n\n    return { ...character, nuyen, karma }\n  },\n}\n","import { registerAttrNames } from '../System/Attribute'\n\nexport enum CharacterAttr {\n  body = 'char.body',\n  agility = 'char.agility',\n  reaction = 'char.reaction',\n  strength = 'char.strength',\n  willpower = 'char.willpower',\n  logic = 'char.logic',\n  intuition = 'char.intuition',\n  charisma = 'char.charisma',\n  edge = 'char.edge',\n  essence = 'char.essence',\n  magic = 'char.magic',\n  resonance = 'char.resonance',\n}\n\nregisterAttrNames({\n  [CharacterAttr.body]: 'Body',\n  [CharacterAttr.agility]: 'Agility',\n  [CharacterAttr.reaction]: 'Reaction',\n  [CharacterAttr.strength]: 'Strength',\n  [CharacterAttr.willpower]: 'Willpower',\n  [CharacterAttr.logic]: 'Logic',\n  [CharacterAttr.intuition]: 'Intuition',\n  [CharacterAttr.charisma]: 'Charisma',\n  [CharacterAttr.edge]: 'Edge',\n  [CharacterAttr.essence]: 'Essence',\n  [CharacterAttr.magic]: 'Magic',\n  [CharacterAttr.resonance]: 'Resonance',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum AugmentAttr {\n  grade = 'augment.grade',\n  rating = 'augment.rating',\n  capacity = 'augment.capacity',\n  capacityCost = 'augment.capacityCost',\n}\n\nregisterAttrNames({\n  [AugmentAttr.grade]: 'Grade',\n  [AugmentAttr.rating]: 'Rating',\n  [AugmentAttr.capacity]: 'Capacity',\n  [AugmentAttr.capacityCost]: 'Capacity Cost',\n})\n","import { RecordId } from '../Api/Model'\nimport { AttrList } from '../System/Attribute'\nimport { Source } from '../System/Source'\nimport { ArmorData } from './Armor/ArmorData'\nimport { ArmorModData } from './Armor/ArmorModData'\nimport { AugmentData } from './Augments/AugmentData'\nimport { Availability } from './Availability'\nimport { Effect } from './Effect'\nimport { LicenseData } from './License/LicenseData'\nimport { SinData } from './License/SinData'\nimport { OtherGearData } from './OtherGearData'\nimport { RccData } from './Rcc/RccData'\nimport { AutosoftData } from './Software/Autosoft/AutosoftData'\nimport { VehicleData } from './Vehicles/VehicleData'\nimport { VehicleModData } from './Vehicles/VehicleModData'\nimport { WeaponData } from './Weapons/WeaponData'\nimport { WeaponModData } from './Weapons/WeaponModData'\n\nexport type Cost = number\n\nexport enum GearType {\n  armor = 'armor',\n  armorMod = 'armorMod',\n  augment = 'augment',\n  autosoft = 'autosoft',\n  license = 'license',\n  rcc = 'rcc',\n  sin = 'sin',\n  vehicle = 'vehicle',\n  vehicleMod = 'vehicleMod',\n  weapon = 'weapon',\n  weaponMod = 'weaponMod',\n\n  other = 'other',\n}\n\nexport interface BaseGearData {\n  id: RecordId\n  source?: Source\n  gearType: GearType\n  name: string\n  type: string\n  avail?: Availability\n  cost?: Cost\n  capacity?: number\n  quantity?: number\n\n  attributes?: AttrList\n  attachedTo?: RecordId\n\n  wirelessBonus?: {\n    enabled: boolean\n    description: string\n    effects?: Effect[]\n  }\n\n  description?: string\n  effects?: Effect[]\n\n  [key: string]: unknown\n}\n\nexport type GearData =\n  | OtherGearData\n  | ArmorData\n  | ArmorModData\n  | AugmentData\n  | AutosoftData\n  | LicenseData\n  | RccData\n  | SinData\n  | VehicleData\n  | VehicleModData\n  | WeaponData\n  | WeaponModData\n","import { BaseGearData, GearData, GearType } from '../GearData'\nimport { AugmentAttr } from './AugmentAttr'\n\nexport interface AugmentData extends BaseGearData {\n  augmentSlot: AugmentSlot\n  essenceCost: number\n  augmentType?: AugmentType\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade\n    [AugmentAttr.rating]?: number\n    [AugmentAttr.capacity]?: number\n    [AugmentAttr.capacityCost]?: number\n  }\n}\n\nexport function isAugment (gear: GearData): gear is AugmentData {\n  return gear.gearType === GearType.augment\n}\n\nexport enum AugmentType {\n  controlRig = 'controlRig',\n}\n\nexport enum AugmentSlot {\n  headware = 'headware',\n  eyeware = 'eyeware',\n  earwear = 'earwear',\n  bodyware = 'bodyware',\n  cyberlimb = 'cyberlimb',\n  bioware = 'bioware',\n}\n\nexport enum AugmentGrade {\n  used = 'used',\n  alpha = 'alphaware',\n  beta = 'betaware',\n  delta = 'deltaware'\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum SinAttr {\n  rating = 'sin.rating',\n}\n\nregisterAttrNames({\n  [SinAttr.rating]: 'Rating',\n})\n","import { AttrValue, registerAttrNames } from '../System/Attribute'\nimport { BaseGearData, GearType } from './GearData'\n\nexport interface OtherGearData extends BaseGearData {\n  gearType: GearType.other\n\n  attributes?: {\n    [type: string]: AttrValue\n  }\n}\n\nexport enum OtherGearAttr {\n  capacity = 'other.capacity',\n  capacityCost = 'other.capacityCost',\n  rating = 'other.rating',\n}\n\nregisterAttrNames({\n  [OtherGearAttr.capacity]: 'Capacity',\n  [OtherGearAttr.capacityCost]: 'Capacity Cost',\n  [OtherGearAttr.rating]: 'Rating',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum RccAttr {\n  deviceRating = 'rcc.deviceRating',\n  dataProcessing = 'rcc.dataProcessing',\n  firewall = 'rcc.firewall'\n}\n\nregisterAttrNames({\n  [RccAttr.deviceRating]: 'Device Rating',\n  [RccAttr.dataProcessing]: 'Data Processing',\n  [RccAttr.firewall]: 'Firewall',\n})\n","import { registerAttrNames } from '../../../System/Attribute'\n\nexport enum AutosoftAttr {\n  rating = 'autosoft.rating',\n  attr = 'autosoft.attr',\n  skill = 'autosoft.skill',\n  weapon = 'autosoft.weapon',\n}\n\nregisterAttrNames({\n  [AutosoftAttr.rating]: 'Rating',\n  [AutosoftAttr.attr]: 'Attr',\n  [AutosoftAttr.skill]: 'Skill',\n  [AutosoftAttr.weapon]: 'Weapon',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum VehicleAttr {\n  handling = 'vehicle.handling',\n  accel = 'vehicle.accel',\n  speedInterval = 'vehicle.speedInterval',\n  topSpeed = 'vehicle.topSpeed',\n  body = 'vehicle.body',\n  armor = 'vehicle.armor',\n  pilot = 'vehicle.pilot',\n  sensor = 'vehicle.sensor',\n  seat = 'vehicle.seat',\n}\n\nregisterAttrNames({\n  [VehicleAttr.handling]: 'Handling',\n  [VehicleAttr.accel]: 'Accel',\n  [VehicleAttr.speedInterval]: 'Speed Interval',\n  [VehicleAttr.topSpeed]: 'Top Speed',\n  [VehicleAttr.body]: 'Body',\n  [VehicleAttr.armor]: 'Armor',\n  [VehicleAttr.pilot]: 'Pilot',\n  [VehicleAttr.sensor]: 'Sensor',\n  [VehicleAttr.seat]: 'Seat',\n})\n","import { BaseGearData, GearType } from '../GearData'\n\nexport enum ModType {\n  other = 'vehicleMod.other',\n  riggerInterface = 'vehicleMod.riggerInterface',\n  stdWeaponMount = 'vehicleMod.stdWeaponMount',\n  heavyWeaponMount = 'vehicleMod.heavyWeaponMount',\n  manualControl = 'vehicleMod.manualControl',\n}\n\nexport interface VehicleModData extends BaseGearData {\n  gearType: GearType.vehicleMod\n  modType?: ModType\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum WeaponAttr {\n  dv = 'weapon.dv',\n  attackRatings = 'weapon.attackRatings',\n  modes = 'weapon.modes',\n  ammo = 'weapon.ammo',\n  maxRange = 'weapon.maxRange',\n}\n\nregisterAttrNames({\n  [WeaponAttr.dv]: 'DV',\n  [WeaponAttr.attackRatings]: 'Atk. Ratings',\n  [WeaponAttr.modes]: 'Modes',\n  [WeaponAttr.ammo]: 'Ammo',\n  [WeaponAttr.maxRange]: 'Max Range',\n})\n","import { BaseGearData, GearType } from '../GearData'\n\nexport enum WeaponModAttr {\n\n}\n\nexport interface WeaponModData extends BaseGearData {\n  gearType: GearType.weaponMod\n  slot: WeaponModSlot | null\n  removable?: boolean\n}\n\nexport enum WeaponModSlot {\n  top = 'Top',\n  barrel = 'Barrel',\n  under = 'Under',\n  topOrUnder = 'Top or Under'\n}\n","export type SkillNames = Record<string, string>\n\nexport enum ActiveSkillId {\n  athletics = 'athletics',\n  biotech = 'biotech',\n  closeCombat = 'closeCombat',\n  cracking = 'cracking',\n  electronics = 'electronics',\n  engineering = 'engineering',\n  firearms = 'firearms',\n  perception = 'perception',\n  piloting = 'piloting',\n  stealth = 'stealth',\n}\n\nlet skillNames: SkillNames = {\n  [ActiveSkillId.athletics]: 'Athletics',\n  [ActiveSkillId.biotech]: 'Biotech',\n  [ActiveSkillId.closeCombat]: 'Close Combat',\n  [ActiveSkillId.cracking]: 'Cracking',\n  [ActiveSkillId.electronics]: 'Electronics',\n  [ActiveSkillId.engineering]: 'Engineering',\n  [ActiveSkillId.firearms]: 'Firearms',\n  [ActiveSkillId.perception]: 'Perception',\n  [ActiveSkillId.piloting]: 'Piloting',\n  [ActiveSkillId.stealth]: 'Stealth',\n}\n\nexport const registerSkillNames = (names: SkillNames): void => {\n  skillNames = { ...skillNames, ...names }\n}\n\nexport const formatSkill = (skillId: string): string => {\n  return skillNames[skillId] || skillId\n}\n\nexport enum FirearmSpecialties {\n  trasers = 'Tasers',\n  holdOuts = 'Hold-Outs',\n  lightPistols = 'Light Pistols',\n  machinePistols = 'Machine Pistols',\n  heavyPistols = 'Heavy Pistols',\n  submachineGuns = 'Submachine Guns',\n  shotguns = 'Shotguns',\n  rifles = 'Rifles',\n  machineGuns = 'Machine Guns',\n  assaultCannon = 'Assault Cannon',\n}\n","import { collectGearEffects, isAttrBonus, isAttrOverride } from '../Gear/Effect'\nimport { GearData } from '../Gear/GearData'\n\nexport type AttrType = string\nexport type AttrValue = number | string | null | undefined\nexport type AttrList = Record<AttrType, AttrValue>\nexport type AttrNames = Record<AttrType, string>\n\nlet attributeNames: AttrNames = {}\n\nexport const registerAttrNames = (names: AttrNames): void => {\n  attributeNames = { ...attributeNames, ...names }\n}\n\nexport const formatAttr = (type: string): string => {\n  return attributeNames[type] || type\n}\n\nexport const calculateAttributes = (attrs: AttrList, gear: GearData[]): AttrList => {\n  const adjustedAttrs: AttrList = {}\n\n  Object.entries(attrs).forEach(([attr, value]) => {\n    if (typeof value === 'number') value = calculateAttribute(attr, value, gear)\n    adjustedAttrs[attr] = value\n  })\n\n  return adjustedAttrs\n}\n\nexport const calculateAttribute = (attr: string, value: number, gear: GearData[]): number => {\n  const effects = collectGearEffects(gear)\n\n  const overrides = effects\n    .filter(isAttrOverride)\n    .filter(effect => effect.attr === attr)\n    .map(effect => effect.value)\n\n  if (overrides.length >= 1) return Math.max(...overrides)\n\n  return effects\n    .filter(isAttrBonus)\n    .filter(effect => effect.attr === attr)\n    .reduce((sum, effect) => sum + effect.bonus, value)\n}\n","import { ActiveSkillData } from './ActiveSkill/ActiveSkillData'\nimport { KnowledgeSkillData } from './KnowledgeSkill/KnowledgeSkillData'\nimport { LanguageSkillData } from './LanguageSkill/LanguageSkillData'\n\nexport enum SkillType {\n  active = 'active',\n  language = 'language',\n  knowledge = 'knowledge',\n}\n\nexport interface BasicSkillData {\n  type: SkillType\n}\n\nexport type SkillData =\n  | ActiveSkillData\n  | LanguageSkillData\n  | KnowledgeSkillData\n","import { nextRecordId } from '../Api/Model'\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { CharacterData } from '../Character/CharacterData'\nimport { AugmentAttr } from '../Gear/Augments/AugmentAttr'\nimport { AugmentData, AugmentGrade, AugmentSlot, AugmentType } from '../Gear/Augments/AugmentData'\nimport { EffectType } from '../Gear/Effect'\nimport { GearData, GearType } from '../Gear/GearData'\nimport { SinAttr } from '../Gear/License/SinAttr'\nimport { SinData } from '../Gear/License/SinData'\nimport { OtherGearAttr, OtherGearData } from '../Gear/OtherGearData'\nimport { RccAttr } from '../Gear/Rcc/RccAttr'\nimport { RccData } from '../Gear/Rcc/RccData'\nimport { AutosoftAttr } from '../Gear/Software/Autosoft/AutosoftAttr'\nimport { AutosoftData } from '../Gear/Software/Autosoft/AutosoftData'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { VehicleData } from '../Gear/Vehicles/VehicleData'\nimport { ModType, VehicleModData } from '../Gear/Vehicles/VehicleModData'\nimport { WeaponAttr } from '../Gear/Weapons/WeaponAttr'\nimport { WeaponData } from '../Gear/Weapons/WeaponData'\nimport { WeaponModData, WeaponModSlot } from '../Gear/Weapons/WeaponModData'\nimport { ActiveSkillId, FirearmSpecialties } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { SkillType } from '../System/Skill/SkillData'\n\nexport const Artemis: CharacterData = {\n  id: 'aebc2a1a-d12e-487e-aa5b-1f2daa18817a',\n  dataVersion: 3,\n\n  bio: {\n    name: 'Jessica Nelson',\n    alias: 'Artemis',\n    role: 'rigger',\n    gender: 'female',\n    metaType: 'Elf',\n  },\n\n  karma: [\n    {\n      id: 'ac8b777c-143e-42c3-a2e1-9d8e53c00eb4',\n      date: '2021-09-19T22:00',\n      value: -10,\n      note: 'Body 1 => 2',\n    },\n    {\n      id: 'f2d5f7fb-612b-4e1f-b7f1-e65b71e85f98',\n      date: '2021-09-19T16:00',\n      value: 5,\n      note: 'Session reward',\n    },\n    {\n      id: '0b622011-0e72-4e75-883b-73a565b0e35f',\n      date: '2021-09-11',\n      value: 2,\n      note: 'Session reward',\n    },\n    {\n      id: '49de36c4-cc58-4484-96f7-0fac55fe72db',\n      date: '2021-08-28',\n      value: 14,\n      note: 'Balance import',\n    },\n  ],\n\n  nuyen: [],\n\n  lifestyle: {\n    grade: 'middle',\n    upkeep: 5_000,\n    prepaid: 3,\n  },\n\n  attributes: {\n    [CharacterAttr.body]: 2,\n    [CharacterAttr.agility]: 3,\n    [CharacterAttr.reaction]: 3,\n    [CharacterAttr.strength]: 1,\n    [CharacterAttr.willpower]: 2,\n    [CharacterAttr.logic]: 7,\n    [CharacterAttr.intuition]: 5,\n    [CharacterAttr.charisma]: 4,\n    [CharacterAttr.edge]: 4,\n  },\n\n  contacts: [\n    {\n      name: 'James Serif',\n      connection: 2,\n      loyalty: 2,\n      description: 'Drone Parts Dealer',\n    },\n    {\n      name: 'Frank',\n      connection: 2,\n      loyalty: 2,\n      description: 'Matrix Developer',\n    },\n    {\n      name: 'George Crabtree',\n      connection: 2,\n      loyalty: 2,\n      description: 'Lone Star officer',\n    },\n  ],\n\n  skills: [\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.electronics,\n      rank: 3,\n      attr: 'logic',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.firearms,\n      rank: 3,\n      attr: 'agility',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.piloting,\n      rank: 6,\n      attr: 'reaction',\n      speciality: 'Ground Craft',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.engineering,\n      rank: 7,\n      attr: 'logic',\n      altAttr: 'intuition',\n    },\n    {\n      type: SkillType.language,\n      name: 'English',\n      rank: 'native',\n    },\n    {\n      type: SkillType.language,\n      name: 'Elven',\n      rank: 'speciality',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Drone Models',\n    },\n    {\n      type: SkillType.knowledge,\n      name: '80/90s Pop Culture',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Trideo Series',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Security Systems',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Virtual Nightclubs',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Tech Companies',\n    },\n  ],\n\n  gear: [],\n\n  qualities: [\n    {\n      name: 'Exceptional (Logic)',\n      source: { book: 'CRB', page: 2 },\n      cost: 12,\n    },\n    {\n      name: 'Social Stress (Large Groups)',\n      source: { book: 'CRB', page: 2 },\n      bonus: 8,\n    },\n    {\n      name: 'Juryrigger',\n      source: { book: 'CRB', page: 2 },\n      cost: 12,\n    },\n    {\n      name: 'Photographic Memory',\n      source: { book: 'CRB', page: 2 },\n      cost: 12,\n    },\n    {\n      name: 'Analytical Mind',\n      source: { book: 'CRB', page: 2 },\n      gameEffect: 'Bonus edge when making Logic tests',\n      cost: 3,\n    },\n    {\n      name: 'Ambidextrous',\n      source: { book: 'CRB', page: 2 },\n      cost: 4,\n    },\n  ],\n}\n\nexport function addGear<T extends GearData = OtherGearData> (gear: T, attachedGear: GearData[] = []): T {\n  gear = { ...gear, dataVersion: 1, id: nextRecordId() };\n\n  (Artemis.gear as GearData[]).push(gear)\n  attachedGear.forEach(item => item.attachedTo = gear.id)\n\n  return gear\n}\n\nconst smartGunIntMod: WeaponModData = {\n  id: null,\n  source: { book: 'CRB', page: 260 },\n  gearType: GearType.weaponMod,\n  name: 'Smart Gun Int.',\n  type: 'Weapon Mod',\n  cost: 500,\n\n  slot: null,\n  removable: false,\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'You gain a +1 dice pool bonus. Gain a bonus Minor Action on a turn when ' +\n      'you use the Reload Smartgun or Change Device Mode actions to eject a ' +\n      'clip or change fire mode.',\n  },\n}\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Control Rig',\n  type: 'Headwear Augment',\n  avail: { rarity: 3, license: true },\n  cost: 60_000,\n  augmentSlot: AugmentSlot.headware,\n  augmentType: AugmentType.controlRig,\n  essenceCost: 2.2,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 2,\n  },\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Cerebral Booster',\n  type: 'Cultured Bioware Augment',\n  avail: { rarity: 4 },\n  cost: 47_250,\n  augmentSlot: AugmentSlot.bioware,\n  essenceCost: 0.66,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n  },\n\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.logic, bonus: 3 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Sleep Regulator',\n  type: 'Cultured Bioware Augment',\n  avail: { rarity: 4 },\n  source: { book: 'CRB', page: 293 },\n  cost: 6_000,\n  augmentSlot: AugmentSlot.bioware,\n  essenceCost: 0.11,\n\n  description: (`\n    You need less sleep per day, and the sleep you get is deep and restful (and harder\n    to wake up from). The sleep regulator lets you get by with three hours of sleep\n    each night, and you can stay awake for twice as long as normal without acquiring \n    the Fatigued status. Resting hours for healing purposes are not affected.\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n  },\n})\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 254 },\n  gearType: GearType.weapon,\n  name: 'FN P93 Predator',\n  type: 'Submachine Gun',\n  avail: { rarity: 4, license: true },\n  cost: 925,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '9/12/7/-/-',\n    [WeaponAttr.ammo]: '50(c)',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.submachineGuns,\n}, [\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Rigid Stock',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Laser sight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Flashlight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear(smartGunIntMod),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 252 },\n  gearType: GearType.weapon,\n  name: 'Colt America L36',\n  type: 'Light Pistol',\n  avail: { rarity: 2, license: true },\n  cost: 230,\n\n  attributes: {\n    [WeaponAttr.dv]: '2P',\n    [WeaponAttr.modes]: 'SA',\n    [WeaponAttr.attackRatings]: '8/8/6/-/-',\n    [WeaponAttr.ammo]: '11(c)',\n  },\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'The user can alter ownership with a Minor Action',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.lightPistols,\n}, [\n  addGear(smartGunIntMod),\n])\n\nconst autosofts: AutosoftData[] = [\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'FN-HAR Targeting',\n    type: 'Targeting Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.weapon]: 'FN-HAR',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'Clearsight',\n    type: 'Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.skill]: 'Perception',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'Evasion',\n    type: 'Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.skill]: 'Evasion',\n      [AutosoftAttr.attr]: 'Pilot',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'Maneuvering',\n    type: 'Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.skill]: 'Piloting',\n      [AutosoftAttr.attr]: 'Pilot',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: null,\n    gearType: GearType.autosoft,\n    name: 'Electronic Warfare',\n    type: 'Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.skill]: 'Cracking',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n]\n\nconst rcc: RccData = addGear({\n  id: null,\n  gearType: GearType.rcc,\n  name: 'Proteus Poseidon',\n  type: 'RCC',\n  avail: { rarity: 6, license: true },\n  cost: 68_000,\n\n  attributes: {\n    [RccAttr.deviceRating]: 5,\n    [RccAttr.dataProcessing]: 5,\n    [RccAttr.firewall]: 5,\n  },\n\n  slavedAutosofts: [],\n})\n\nautosofts.forEach(soft => soft.attachedTo = rcc.id)\nrcc.slavedAutosofts = autosofts.map(soft => soft.id)\n\nconst fnHar: WeaponData = {\n  id: null,\n  gearType: GearType.weapon,\n  name: 'FN-HAR',\n  type: 'Rifle',\n  avail: { rarity: 3, license: true },\n  cost: 2_100,\n  attributes: {\n    [WeaponAttr.dv]: '5P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '3/11/10/6/1',\n    [WeaponAttr.ammo]: '35(c)',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.rifles,\n}\n\nconst stdWeaponMount: VehicleModData = {\n  id: null,\n  gearType: GearType.vehicleMod,\n  modType: ModType.stdWeaponMount,\n  name: 'Standard Weapon Mount',\n  type: 'vehicle mod',\n  avail: { rarity: 5, illegal: true },\n  cost: 4_500,\n}\n\nconst riggerInterface: VehicleModData = {\n  id: null,\n  gearType: GearType.vehicleMod,\n  modType: ModType.riggerInterface,\n  name: 'Rigger Interface',\n  type: 'vehicle mod',\n  avail: { rarity: 2, license: true },\n  cost: 1_000,\n}\n\nconst sensorArray: VehicleModData = {\n  id: null,\n  gearType: GearType.vehicleMod,\n  name: 'Sensor Array',\n  type: 'vehicle mod',\n  avail: { rarity: 3 },\n  cost: 4_000,\n\n  attributes: {\n    [OtherGearAttr.rating]: 4,\n  },\n\n  effects: [\n    { type: EffectType.attrOverride, attr: VehicleAttr.sensor, value: 4 },\n  ],\n}\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Range Rover Model 2080',\n  type: 'Van',\n  cost: 73_000,\n  avail: { rarity: 2 },\n\n  attributes: {\n    [VehicleAttr.handling]: '4/5',\n    [VehicleAttr.accel]: 12,\n    [VehicleAttr.speedInterval]: 20,\n    [VehicleAttr.topSpeed]: 160,\n    [VehicleAttr.body]: 16,\n    [VehicleAttr.armor]: 10,\n    [VehicleAttr.pilot]: 4,\n    [VehicleAttr.sensor]: 4,\n    [VehicleAttr.seat]: 4,\n  },\n\n  slavedTo: rcc.id,\n  pilotingSpeciality: 'Ground Craft',\n}, [\n  addGear(riggerInterface),\n  rcc,\n])\n\nnew Array(2).fill(null).forEach((_, index) => {\n  addGear<VehicleData>({\n    id: null,\n    gearType: GearType.vehicle,\n    type: 'Medium Rotor Drone',\n    name: `MCT-Nissan Roto-drone ${index + 1}`,\n    cost: 5_000,\n    avail: { rarity: 2 },\n\n    attributes: {\n      [VehicleAttr.handling]: 3,\n      [VehicleAttr.accel]: 20,\n      [VehicleAttr.speedInterval]: 30,\n      [VehicleAttr.topSpeed]: 160,\n      [VehicleAttr.body]: 5,\n      [VehicleAttr.armor]: 6,\n      [VehicleAttr.pilot]: 3,\n      [VehicleAttr.sensor]: 2,\n      [VehicleAttr.seat]: null,\n    },\n\n    slavedTo: rcc.id,\n    pilotingSpeciality: 'Aircraft',\n  }, [\n    addGear(stdWeaponMount, [\n      addGear(fnHar),\n    ]),\n    addGear(riggerInterface),\n    // addGear(sensorArray),\n  ])\n})\n\nnew Array(4).fill(null).forEach((_, index) => {\n  addGear<VehicleData>({\n    id: null,\n    gearType: GearType.vehicle,\n    name: `Aztech Crawler ${index + 1}`,\n    type: 'Small Anthro Drone',\n    cost: 4_500,\n    avail: { rarity: 2 },\n\n    attributes: {\n      [VehicleAttr.handling]: '3/4',\n      [VehicleAttr.accel]: 8,\n      [VehicleAttr.speedInterval]: 10,\n      [VehicleAttr.topSpeed]: 30,\n      [VehicleAttr.body]: 6,\n      [VehicleAttr.armor]: 2,\n      [VehicleAttr.pilot]: 2,\n      [VehicleAttr.sensor]: 2,\n      [VehicleAttr.seat]: null,\n    },\n\n    slavedTo: rcc.id,\n    pilotingSpeciality: 'Ground Craft',\n  }, [\n    addGear(stdWeaponMount, [\n      addGear(fnHar),\n    ]),\n    addGear(riggerInterface),\n    addGear(sensorArray),\n  ])\n})\n\nnew Array(1).fill(null).forEach((_, index) => {\n  addGear<VehicleData>({\n    id: null,\n    gearType: GearType.vehicle,\n    type: 'Small Rotor Drone',\n    name: `Cyberspace Designs Quadrotor ${index + 1}`,\n    cost: 5_000,\n    avail: { rarity: 2 },\n\n    attributes: {\n      [VehicleAttr.handling]: 2,\n      [VehicleAttr.accel]: 15,\n      [VehicleAttr.speedInterval]: 20,\n      [VehicleAttr.topSpeed]: 120,\n      [VehicleAttr.body]: 3,\n      [VehicleAttr.armor]: 1,\n      [VehicleAttr.pilot]: 3,\n      [VehicleAttr.sensor]: 2,\n      [VehicleAttr.seat]: null,\n    },\n\n    slavedTo: rcc.id,\n    pilotingSpeciality: 'Aircraft',\n  }, [\n    addGear(riggerInterface),\n  ])\n})\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  type: 'Micro Rotor Drone',\n  name: 'MCT Gnat',\n  cost: 800,\n  quantity: 10,\n  avail: { rarity: 2 },\n\n  attributes: {\n    [VehicleAttr.handling]: 3,\n    [VehicleAttr.accel]: 4,\n    [VehicleAttr.speedInterval]: 10,\n    [VehicleAttr.topSpeed]: 30,\n    [VehicleAttr.body]: 0,\n    [VehicleAttr.armor]: 0,\n    [VehicleAttr.pilot]: 2,\n    [VehicleAttr.sensor]: 1,\n    [VehicleAttr.seat]: null,\n  },\n\n  slavedTo: rcc.id,\n  pilotingSpeciality: 'Aircraft',\n}, [\n  addGear(riggerInterface),\n])\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Cybereyes',\n  type: 'Augment',\n  source: { book: 'CRB', page: 285 },\n  avail: { rarity: 4 },\n  cost: 12_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.alpha,\n    [AugmentAttr.rating]: 3,\n    [AugmentAttr.capacity]: 12,\n  },\n\n  essenceCost: 0.32,\n  augmentSlot: AugmentSlot.eyeware,\n}, [\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Smartlink',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 4, license: true },\n    cost: 4_800,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.capacityCost]: 3,\n    },\n\n    essenceCost: 0.16,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Imagelink',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 3 },\n    cost: 960,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.capacityCost]: 0,\n    },\n\n    essenceCost: 0.08,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Low-Light Vision',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 3 },\n    cost: 900,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.capacityCost]: 2,\n    },\n\n    essenceCost: 0.08,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Vision Enhancement',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 4 },\n    cost: 4_800,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.capacityCost]: 2,\n    },\n\n    essenceCost: 0.08,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n  addGear<AugmentData>({\n    id: null,\n    gearType: GearType.augment,\n    name: 'Vision Magnification',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 4 },\n    cost: 2_400,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.capacityCost]: 2,\n    },\n\n    essenceCost: 0.08,\n    augmentSlot: AugmentSlot.eyeware,\n  }),\n])\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Commlink',\n  type: 'Headware Augment',\n  source: { book: 'CRB', page: 283 },\n  avail: { rarity: 1 },\n  cost: 1_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n  },\n\n  essenceCost: 0.11,\n  augmentSlot: AugmentSlot.headware,\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Hermes Ikon',\n    type: 'Commlink',\n    source: { book: 'CRB', page: 267 },\n    avail: { rarity: 3 },\n    cost: 5_000,\n\n    attributes: {\n      'commlink.deviceRating': 5,\n      'commlink.attributes': '3/0',\n      'commlink.programSlots': 2,\n    },\n  }),\n])\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Reaction Enhancers',\n  type: 'Bodyware Augment',\n  source: { book: 'CRB', page: 287 },\n  avail: { rarity: 3, license: true },\n  cost: 22_500,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n  },\n\n  essenceCost: 0.99,\n  augmentSlot: AugmentSlot.bodyware,\n\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.reaction, bonus: 3 },\n  ],\n})\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Davina Hasselhoff',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 15_000,\n\n  description: 'General use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 6,\n  },\n})\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Sara McCabe',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 10_000,\n\n  description: 'Runner SIN',\n\n  attributes: {\n    [SinAttr.rating]: 4,\n  },\n})\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Jane Smith',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 5_000,\n\n  description: 'Burner SIN',\n\n  attributes: {\n    [SinAttr.rating]: 2,\n  },\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Engineering Shop',\n  type: 'Shop',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4 },\n  cost: 5_000,\n})\n\nArtemis.nuyen = [\n  {\n    id: '2ea02500-4f16-4f4b-a8bd-6f8f1264bf3c',\n    date: '2021-09-19T22:01',\n    value: -16_000,\n    note: 'Buy r4 sensor arrays for crawlers',\n  },\n  {\n    id: '16d0a750-32c4-47eb-8c22-b7070e21dd31',\n    date: '2021-09-19T22:00',\n    value: -22_500,\n    note: 'Buy Reaction Enhancers',\n  },\n  {\n    id: '4dd2c72c-bbaf-4d71-b48f-ef276b2f8421',\n    date: '2021-09-19T16:00',\n    value: 25_000,\n    note: 'Session Reward',\n  },\n  {\n    id: '5119778e-31f6-47ce-bdbc-b63f80d35bb0',\n    date: '2021-08-28T00:04',\n    value: 18_070,\n    note: 'Session Reward',\n  },\n  {\n    id: '21cc28eb-8b84-4df3-995e-94a5553ff52f',\n    date: '2021-08-28T00:03',\n    value: -15_000,\n    note: 'Lifestyle (3 months)',\n  },\n  {\n    id: '62535d44-5922-4fb4-8cf4-295434279d72',\n    date: '2021-08-28T00:02',\n    value: -431_665,\n    note: 'Starting Gear',\n  },\n  {\n    id: 'ff344122-9196-4c9f-98f6-42620097383a',\n    date: '2021-08-28T00:01',\n    value: 450_000,\n    note: 'Character Creation',\n  },\n]\n","export enum CharacterPoolTypes {\n  dodge = 'character.dodge',\n  dmgResist = 'character.dmgResist',\n  composure = 'character.composure',\n  judgeIntent = 'character.judgeIntent',\n  memory = 'character.memory',\n  liftCarry = 'character.liftCarry',\n  firstAid = 'character.firstAid',\n}\n","export enum ArmorAttr {\n  defenseBonus = 'armor.defenseBonus',\n  capacity = 'armor.capacity',\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum CommlinkAttr {\n  deviceRating = 'commlink.deviceRating',\n  attributes = 'commlink.attributes',\n  programSlots = 'commlink.programSlots',\n}\n\nregisterAttrNames({\n  [CommlinkAttr.deviceRating]: 'Device Rating',\n  [CommlinkAttr.attributes]: 'Attributes',\n  [CommlinkAttr.programSlots]: 'Program Slots',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum KitAttr {\n  medkitRating = 'medkit.rating',\n}\n\nregisterAttrNames({\n  [KitAttr.medkitRating]: 'Rating',\n})\n","export enum KitType {\n  firstAid = 'kit.firstAid',\n  medKit = 'kit.medKit',\n}\n","import { nextRecordId } from '../Api/Model'\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { CharacterData } from '../Character/CharacterData'\nimport { CharacterPoolTypes } from '../Character/CharacterPoolTypes'\nimport { ArmorAttr } from '../Gear/Armor/ArmorAttr'\nimport { ArmorData } from '../Gear/Armor/ArmorData'\nimport { AugmentAttr } from '../Gear/Augments/AugmentAttr'\nimport { AugmentData, AugmentGrade, AugmentSlot } from '../Gear/Augments/AugmentData'\nimport { CommlinkAttr } from '../Gear/Commlink/CommlinkAttr'\nimport { EffectType } from '../Gear/Effect'\nimport { GearData, GearType } from '../Gear/GearData'\nimport { KitAttr } from '../Gear/Kit/KitAttr'\nimport { KitType } from '../Gear/Kit/KitType'\nimport { SinAttr } from '../Gear/License/SinAttr'\nimport { SinData } from '../Gear/License/SinData'\nimport { OtherGearAttr, OtherGearData } from '../Gear/OtherGearData'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { VehicleData } from '../Gear/Vehicles/VehicleData'\nimport { ModType } from '../Gear/Vehicles/VehicleModData'\nimport { WeaponAttr } from '../Gear/Weapons/WeaponAttr'\nimport { WeaponData } from '../Gear/Weapons/WeaponData'\nimport { WeaponModData, WeaponModSlot } from '../Gear/Weapons/WeaponModData'\nimport { ActiveSkillId, FirearmSpecialties } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { SkillType } from '../System/Skill/SkillData'\n\nexport const Silicus: CharacterData = {\n  id: 'fc7d8ad1-c25e-4c1b-8c13-0e795a449ef2',\n  dataVersion: 3,\n\n  bio: {\n    name: 'Silicus',\n    metaType: 'Elf',\n    gender: 'male',\n    role: 'Street Samurai',\n  },\n\n  karma: [\n    {\n      id: '43d8f19c-7c78-4f6e-95ae-9895781556f1',\n      date: '2021-09-19T16:00',\n      value: 5,\n      note: 'Session reward',\n    },\n    {\n      id: '06c06985-4024-45e3-9a73-a49375e0b095',\n      date: '2021-09-12',\n      value: 2,\n      note: 'Session reward',\n    },\n  ],\n\n  nuyen: [\n    {\n      id: 'cb349d2e-d2ca-40b6-ac31-6134f07312f9',\n      date: '2021-09-19T16:00',\n      value: 25_000,\n      note: 'Session reward',\n    },\n    {\n      id: 'bb9f128e-641a-4a71-a980-b46ae4358b32',\n      date: '2021-08-28T00:03',\n      value: -9_000,\n      note: '3 months lifestyle (middle)',\n    },\n    {\n      id: '737b40e5-9820-4382-98f5-2d564565ed4e',\n      date: '2021-08-28T00:02',\n      value: -439_575,\n      note: 'Char creation Gear',\n    },\n    {\n      id: '24b4f26a-0c8e-42d0-b8e9-49e668785783',\n      date: '2021-08-28T00:01',\n      value: 450_000,\n      note: 'Char creation',\n    },\n  ],\n\n  lifestyle: {\n    grade: 'middle',\n    upkeep: 5_000,\n    prepaid: 3,\n  },\n\n  attributes: {\n    [CharacterAttr.body]: 4,\n    [CharacterAttr.agility]: 8,\n    [CharacterAttr.reaction]: 2,\n    [CharacterAttr.strength]: 1,\n    [CharacterAttr.willpower]: 1,\n    [CharacterAttr.logic]: 5,\n    [CharacterAttr.intuition]: 4,\n    [CharacterAttr.charisma]: 3,\n    [CharacterAttr.edge]: 4,\n  },\n\n  contacts: [\n    {\n      name: 'Hunter Morgan',\n      connection: 3,\n      loyalty: 3,\n      description: 'Researcher at Kamino Biotech',\n    },\n    {\n      name: 'Johennes',\n      connection: 3,\n      loyalty: 3,\n      description: 'Fence',\n    },\n    {\n      name: 'Dr. Weber',\n      connection: 3,\n      loyalty: 3,\n      description: 'Ripperdoc',\n    },\n  ],\n\n  skills: [\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.biotech,\n      rank: 5,\n      attr: 'logic',\n      altAttr: 'intuition',\n      expertise: 'First Aid',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.firearms,\n      rank: 6,\n      attr: 'agility',\n      speciality: 'Automatics',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.perception,\n      rank: 3,\n      attr: 'intuition',\n      altAttr: 'logic',\n    },\n    {\n      type: SkillType.active,\n      skillId: ActiveSkillId.closeCombat,\n      rank: 5,\n      attr: 'agility',\n    },\n    {\n      type: SkillType.language,\n      name: 'English',\n      rank: 'native',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Law Enforcement Corps',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Security Systems',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Tech Companies',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Weapon Manufacturers',\n    },\n    {\n      type: SkillType.knowledge,\n      name: 'Local Gangs',\n    },\n  ],\n\n  gear: [],\n\n  qualities: [\n    {\n      name: 'Analytical Mind',\n      source: { book: 'CRB', page: 70 },\n      gameEffect: 'Bonus edge when making Logic tests',\n      cost: 3,\n    },\n    {\n      name: 'Exceptional (Agility)',\n      source: { book: 'CRB', page: 71 },\n      gameEffect: 'Increase max of one Physical or Mental attribute by 1',\n      cost: 12,\n    },\n  ],\n}\n\nfunction addGear<T extends GearData = OtherGearData> (gear: T, attachedGear: GearData[] = []): T {\n  gear = { ...gear, dataVersion: 1, id: nextRecordId() };\n\n  (Silicus.gear as GearData[]).push(gear)\n  attachedGear.forEach(item => item.attachedTo = gear.id)\n\n  return gear\n}\n\nconst smartGunIntMod: WeaponModData = {\n  id: null,\n  source: { book: 'CRB', page: 260 },\n  gearType: GearType.weaponMod,\n  name: 'Smart Gun Int.',\n  type: 'Weapon Mod',\n  cost: 500,\n\n  slot: null,\n  removable: false,\n\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'You gain a +1 dice pool bonus. Gain a bonus Minor Action on a turn when ' +\n      'you use the Reload Smartgun or Change Device Mode actions to eject a ' +\n      'clip or change fire mode.',\n    effects: [\n      { type: EffectType.dicePoolBonus, poolType: 'weapon.all', bonus: 1 },\n    ],\n  },\n}\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 254 },\n  gearType: GearType.weapon,\n  name: 'FN P93 Predator',\n  type: 'Submachine Gun',\n  avail: { rarity: 4, license: true },\n  cost: 925,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '9/12/7/-/-',\n    [WeaponAttr.ammo]: '50(c)',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.submachineGuns,\n}, [\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Rigid Stock',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Laser sight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Flashlight',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear(smartGunIntMod),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 259 },\n    gearType: GearType.weaponMod,\n    name: 'Gas Vent',\n    type: 'Weapon Mod',\n    avail: { rarity: 3 },\n    cost: 500,\n\n    description: 'Removes the attack rating penalty for Semi-Automatic fire, and reduces it to 2 for Burst Fire',\n\n    slot: WeaponModSlot.barrel,\n    removable: false,\n  }),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 255 },\n  gearType: GearType.weapon,\n  name: 'Ares Viper Silvergun',\n  type: 'Heavy Pistol',\n  avail: { rarity: 4, license: true },\n  cost: 610,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P(f)',\n    [WeaponAttr.modes]: 'SA/BF',\n    [WeaponAttr.attackRatings]: '12/8/6/-/-',\n    [WeaponAttr.ammo]: '30(c)',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.heavyPistols,\n}, [\n  addGear(smartGunIntMod),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 260 },\n    gearType: GearType.weaponMod,\n    name: 'Quick Draw Holster',\n    type: 'Weapon Mod',\n    avail: { rarity: 2 },\n    cost: 175,\n\n    description: 'Use of a Quick-Draw holster provides a bonus Minor action when the Quick-Draw Action is taken',\n    slot: null,\n  }),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 255 },\n  gearType: GearType.weapon,\n  name: 'Defiance SuperShocker',\n  type: 'Taser',\n  avail: { rarity: 1 },\n  cost: 340,\n\n  attributes: {\n    [WeaponAttr.dv]: '6S(e)',\n    [WeaponAttr.modes]: 'SS',\n    [WeaponAttr.attackRatings]: '10/6/-/-/-',\n    [WeaponAttr.ammo]: '4(m)',\n    [WeaponAttr.maxRange]: '20m',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.trasers,\n}, [\n  addGear(smartGunIntMod),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 254 },\n  gearType: GearType.weapon,\n  name: 'Survival Knife',\n  type: 'Blade',\n  avail: { rarity: 2 },\n  cost: 250,\n\n  attributes: {\n    [WeaponAttr.dv]: '3P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '8/2/-/-/-',\n    [WeaponAttr.maxRange]: '20m',\n  },\n\n  skill: ActiveSkillId.closeCombat,\n  specialtyName: 'Blades',\n})\n\naddGear<AugmentData>({\n  id: null,\n  name: 'Synaptic Booster',\n  type: 'Cultured Bioware Augment',\n  gearType: GearType.augment,\n  source: { book: 'CRB', page: 293 },\n  avail: { rarity: 4, license: true },\n  cost: 142_500,\n\n  description: (`\n    The nerve cells making up the spinal cord are both broadened and replicated \n    with this bioware, allowing for neural bandwidth. The result is a much faster \n    reaction time. The booster confers a bonus of +1 Reaction (and the accompanying \n    adjustment to Initiative Score), 1 additional Initiative Die, and 1 additional\n    Minor Action per point of Rating. The synaptic booster cannot be combined with \n    any other form of Reaction or Initiative enhancement. Unlike other enhancements,\n    this cannot be turned off, leaving the user in a perpetual state of being in\n    surrounded by slow motion.  \n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n  },\n\n  essenceCost: 1.65,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.reaction, bonus: 3 },\n    { type: EffectType.initBonus, dice: 3 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Platelet Factories',\n  type: 'Bioware Augment',\n  source: { book: 'CRB', page: 292 },\n  avail: { rarity: 3 },\n  cost: 8_500,\n\n  description: (`\n    Any time you would take 2 or more boxes of damage to your Physical Condition \n    Monitor, reduce the damage by 1 box.\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n  },\n\n  essenceCost: 0.22,\n  augmentSlot: AugmentSlot.bioware,\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Muscle Toner',\n  type: 'Bioware Augment',\n  source: { book: 'CRB', page: 292 },\n  avail: { rarity: 3, license: true },\n  cost: 64_000,\n\n  description: (`\n    Muscle Toner adds it's rating to your Agility attribute. This bioware is incompatible\n    with augmentations that increase Agility, including the muscle replacement cyberware\n    and enhanced articulations bioware\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 4,\n  },\n\n  essenceCost: 0.88,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.agility, bonus: 4 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Bone Density',\n  type: 'Bioware Augment',\n  source: { book: 'CRB', page: 291 },\n  avail: { rarity: 3, license: true },\n  cost: 24_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.alpha,\n    [AugmentAttr.rating]: 4,\n  },\n\n  description: (`\n      Increases Body during damage resistance test by rating. \n      Melee damage: 3P, Atk. Rating: +2\n  `),\n\n  essenceCost: 0.48,\n  augmentSlot: AugmentSlot.bioware,\n\n  effects: [\n    { type: EffectType.dicePoolBonus, poolType: CharacterPoolTypes.dmgResist, bonus: 4 },\n    // Melee damage: 3P\n    // Melee Atk. Rating: +2\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  name: 'Pain Editor',\n  type: 'Cultured Bioware Augment',\n  gearType: GearType.augment,\n  source: { book: 'CRB', page: 293 },\n  avail: { rarity: 5, illegal: true },\n  cost: 72_000,\n\n  description: (`\n    This cluster of specialized nervous tissue is designed to filter sensory stimuli.\n    If the pain editor is active, this allows you to ignore all injury modifiers, \n    and you can even stay conscious when your stun condition monitor is completely \n    full. You feel no pain—you're blissfully, dangerously, recklessly unaware of\n    the extent of the damage you've taken without either performing a self-examination\n    (Observe in Detail action) or being informed by a biomonitor. While active, the\n    pain editor increases your willpower by 1 and decreases your intuition by 1;\n    additionally, all tactile Perception tests you make have their threshold increased\n    by 1. \n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.beta,\n  },\n\n  essenceCost: 0.21,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.willpower, bonus: 1 },\n    { type: EffectType.attrBonus, attr: CharacterAttr.intuition, bonus: -1 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Reflex Recorder (Firearms)',\n  type: 'Cultured Bioware Augment',\n  source: { book: 'CRB', page: 293 },\n  avail: { rarity: 4 },\n  cost: 7_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n  },\n\n  essenceCost: 0.11,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.skillBonus, skill: ActiveSkillId.firearms, bonus: 1 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Cerebral Booster',\n  type: 'Cultured Bioware Augment',\n  source: { book: 'CRB', page: 293 },\n  avail: { rarity: 5 },\n  cost: 47_250,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n  },\n\n  essenceCost: 0.66,\n  augmentSlot: AugmentSlot.bioware,\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.logic, bonus: 3 },\n  ],\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Sony Emperor',\n  type: 'Commlink',\n  source: { book: 'CRB', page: 267 },\n  avail: { rarity: 2 },\n  cost: 700,\n\n  attributes: {\n    [CommlinkAttr.deviceRating]: 2,\n    [CommlinkAttr.attributes]: '1/1',\n    [CommlinkAttr.programSlots]: 1,\n  },\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Biomonitor',\n  type: 'Biotech',\n  source: { book: 'CRB', page: 281 },\n  avail: { rarity: 2 },\n  cost: 300,\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Glasses',\n  type: 'Clothing',\n  source: { book: 'CRB', page: 285 },\n  avail: { rarity: 2 },\n  cost: 400,\n\n  attributes: {\n    [OtherGearAttr.capacity]: 4,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Smartlink',\n    type: 'Visual Enhancement',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 2 },\n    cost: 2_000,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 2,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Imagelink',\n    type: 'Visual Enhancement',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 1 },\n    cost: 25,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 1,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Thermographic Vision',\n    type: 'Visual Enhancement',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 2 },\n    cost: 500,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 1,\n    },\n  }),\n])\n\naddGear<ArmorData>({\n  id: null,\n  gearType: GearType.armor,\n  name: 'Armor Jacket',\n  type: 'Armor',\n  source: { book: 'CRB', page: 265 },\n  avail: { rarity: 2 },\n  cost: 1_000,\n\n  attributes: {\n    [ArmorAttr.defenseBonus]: 4,\n    [ArmorAttr.capacity]: 8,\n  },\n})\n\naddGear({\n  id: null,\n  gearType: GearType.armor,\n  name: 'Auctioneer Business Clothes',\n  type: 'Armor',\n  source: { book: 'CRB', page: 265 },\n  avail: { rarity: 2 },\n  cost: 1_500,\n\n  attributes: {\n    'armor.defenseBonus': 2,\n    'armor.capacity': 6,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.armorMod,\n    name: 'Concealed Hostler',\n    type: 'Armor Mod',\n    source: { book: 'CRB', page: 259 },\n\n    wirelessBonus: {\n      enabled: true,\n      description: 'Increases cancellability threshold by 1',\n    },\n  }),\n])\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Medkit',\n  type: 'Biotech',\n  source: { book: 'CRB', page: 281 },\n  avail: { rarity: 3 },\n  cost: 1_500,\n\n  attributes: {\n    [KitAttr.medkitRating]: 6,\n  },\n\n  wirelessBonus: {\n    enabled: true,\n    description: (`\n      The medkit provides a +1 dice pool modifier to healing tests\n    `),\n  },\n\n  kit: KitType.medKit,\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Medkit Supplies',\n    type: 'Supplies',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 1 },\n    cost: 100,\n    quantity: 5,\n  }),\n])\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'First Aid Kit',\n  type: 'Kit',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 1 },\n  cost: 500,\n\n  kit: KitType.firstAid,\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Trauma Patch',\n  type: 'Slap Patch',\n  source: { book: 'CRB', page: 282 },\n  avail: { rarity: 3 },\n  cost: 500,\n  quantity: 2,\n  description: (`\n    If placed on a patient with Overflow Damage, the patient is automatically stabilized.\n    These patches are always wireless, and connect to the matrix the moment they are applied.\n  `),\n})\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Suzuki Mirage',\n  type: 'Bike',\n  cost: 12_000,\n  avail: { rarity: 2 },\n  source: { book: 'CRB', page: 295 },\n\n  attributes: {\n    [VehicleAttr.handling]: '2/6',\n    [VehicleAttr.accel]: 29,\n    [VehicleAttr.speedInterval]: 30,\n    [VehicleAttr.topSpeed]: 260,\n    [VehicleAttr.body]: 4,\n    [VehicleAttr.armor]: 2,\n    [VehicleAttr.pilot]: 1,\n    [VehicleAttr.sensor]: 1,\n    [VehicleAttr.seat]: 1,\n  },\n\n  pilotingSpeciality: 'Ground Craft',\n})\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Hyundai Shin-Hyung',\n  type: 'Car',\n  cost: 20_000,\n  avail: { rarity: 2 },\n  source: { book: 'CRB', page: 295 },\n\n  attributes: {\n    [VehicleAttr.handling]: '3/5',\n    [VehicleAttr.accel]: 12,\n    [VehicleAttr.speedInterval]: 25,\n    [VehicleAttr.topSpeed]: 200,\n    [VehicleAttr.body]: 7,\n    [VehicleAttr.armor]: 1,\n    [VehicleAttr.pilot]: 1,\n    [VehicleAttr.sensor]: 1,\n    [VehicleAttr.seat]: 3,\n  },\n\n  pilotingSpeciality: 'Ground Craft',\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.vehicleMod,\n    modType: ModType.riggerInterface,\n    name: 'Rigger Interface',\n    type: 'vehicle mod',\n    avail: { rarity: 2, license: true },\n    cost: 1_000,\n  }),\n])\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Jake Ozbourne',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 15_000,\n\n  description: 'General use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 6,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Concealed Carry',\n    type: 'Fake License',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      'Rating': 5,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Firearm Carry',\n    type: 'Fake License',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      'Rating': 5,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Ares Viper Silvergun',\n    type: 'Fake License',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      'Rating': 5,\n    },\n  }),\n])\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Picard DeLance',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 10_000,\n\n  description: 'Runner use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 4,\n  },\n})\n","import { nextRecordId } from './Api/Model'\nimport { CharacterData } from './Character/CharacterData'\nimport { migrateCharacter, SavedCharacterData } from './Character/Migrations'\nimport { Artemis } from './data/Artemis'\nimport { Silicus } from './data/Silicus'\n\nconst characterStorageKey = (characterId: string) => `character.${characterId}`\nconst charactersStorageKey = 'characters'\nconst DEBUG_LOAD = true\n\nexport type SavedCharacters = Record<string, string>\n\nexport function loadCharacters (): SavedCharacters {\n  if (DEBUG_LOAD || !localStorage.getItem(charactersStorageKey)) {\n    const savedCharacters: SavedCharacters = {}\n\n    const characters = [\n      migrateCharacter(Artemis),\n      migrateCharacter(Silicus),\n    ]\n\n    characters.forEach(character => {\n      if (character.id === null) character.id = nextRecordId()\n      saveCharacter(character)\n      savedCharacters[character.id] = character.bio.alias || character.bio.name\n    })\n\n    localStorage.setItem(charactersStorageKey, JSON.stringify(savedCharacters))\n  }\n\n  return JSON.parse(localStorage.getItem(charactersStorageKey) || '{}')\n}\n\nexport function saveCharacter (character: CharacterData): void {\n  if (character.id == null) throw new Error('Character has no id')\n  console.log(`Saved ${character.id}`)\n  localStorage.setItem(characterStorageKey(character.id), JSON.stringify(character))\n}\n\nexport function loadCharacter (characterId: string): CharacterData | null {\n  const character: SavedCharacterData = JSON.parse(localStorage.getItem(characterStorageKey(characterId)) || 'null')\n  if (character) return migrateCharacter(character)\n  return null\n}\n","import { format, parseISO } from 'date-fns'\n\nexport const noOp = (): void => {/* No Operation */}\n\nexport function formatDate (date: Date | string): string {\n  if (typeof date === 'string') date = parseISO(date)\n  return format(date, 'PP')\n}\n","import { AppBar as MuiAppBar, Box, IconButton, Toolbar, Typography } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { FC } from 'react'\n\nimport { noOp } from '../Helpers'\n\ntype NavBarProps = {\n  withMenu?: boolean\n  openMenu? (): void\n}\n\nexport const AppBar: FC<NavBarProps> = ({\n  withMenu,\n  openMenu = noOp,\n}) => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <MuiAppBar position=\"static\">\n        <Toolbar>\n          {withMenu && (\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n              onClick={() => openMenu()}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            ShadowSIN 6e\n          </Typography>\n        </Toolbar>\n      </MuiAppBar>\n    </Box>\n  )\n}\n","import { Box, Paper } from '@material-ui/core'\nimport React, { FC, useState } from 'react'\n\nimport { AppBar } from '../UI/AppBar'\nimport { NavDrawerProps } from '../UI/NavDrawer'\n\ninterface RootLayoutProps {\n  NavDrawer?: FC<NavDrawerProps>\n}\n\nexport const RootLayout: FC<RootLayoutProps> = ({\n  NavDrawer,\n  children,\n}) => {\n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n  return (\n    <Paper\n      sx={{ display: 'grid', gridTemplateRows: 'auto 1fr', bgcolor: 'background.default' }}\n      className=\"App\"\n      square\n    >\n      <AppBar withMenu={!!NavDrawer} openMenu={() => setDrawerOpen(true)} />\n      {NavDrawer && <NavDrawer open={drawerOpen} closeDrawer={() => setDrawerOpen(false)} />}\n\n      <Box sx={{ overflow: 'auto' }}>\n        <Box sx={{ width: '100%', maxWidth: 1200, margin: '0 auto', padding: 1 }}>\n          {children}\n        </Box>\n      </Box>\n    </Paper>\n  )\n}\n","import { Button, Stack } from '@material-ui/core'\nimport React, { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { loadCharacters, SavedCharacters } from '../StorageService'\nimport { RootLayout } from './RootLayout'\n\nexport const CharacterListPage: FC = () => {\n  const history = useHistory()\n  const [characters, setCharacters] = useState<SavedCharacters>({})\n\n  useEffect(() => setCharacters(loadCharacters()), [])\n\n  return (\n    <RootLayout>\n      <Stack>\n        {Object.entries(characters).map(([id, name]) => (\n          <Button\n            key={id}\n            onClick={() => history.push(`/${id}`)}\n            sx={{ padding: 1, fontSize: 30, justifyContent: 'flex-start' }}\n          >\n            {name}\n          </Button>\n        ))}\n      </Stack>\n    </RootLayout>\n  )\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { RecordId } from '../Api/Model'\nimport { GearData, GearType } from './GearData'\n\nconst GearContext = createContext<GearData[]>([])\n\ninterface GearProviderProps {\n  gear: GearData[]\n}\n\nexport const GearProvider: FC<GearProviderProps> = ({\n  gear,\n  children,\n}) => {\n  return (\n    <GearContext.Provider value={gear}>{children}</GearContext.Provider>\n  )\n}\n\nexport function useAllGear (): GearData[] {\n  return useContext(GearContext)\n}\n\nexport function useGear<T extends GearData = GearData> (gearId: RecordId | undefined): T | undefined {\n  const allGear = useAllGear()\n  if (!gearId) return undefined\n\n  const gear = allGear.find(gear => gear.id === gearId)\n  return gear ? gear as T : undefined\n}\n\ntype GearFilter = (gear: GearData) => boolean\n\nexport function useFindGear<T extends GearData = GearData> (filter: GearFilter): T | undefined {\n  const foundGear = useAllGear().find(filter)\n  return foundGear ? foundGear as T : undefined\n}\n\nexport function useFilterGear<T extends GearData = GearData> (filter: GearFilter): T[] {\n  return useAllGear().filter(filter).map(gear => gear as T)\n}\n\nexport function useAttachedGear (gearId: RecordId): GearData[] {\n  return useFilterGear(gear => gear.attachedTo === gearId)\n}\n\nexport function useGearOfType<T extends GearData> (gearType: GearType): T[] {\n  return useFilterGear<T>(gear => gear.gearType === gearType)\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { AttrList, AttrType, AttrValue } from './Attribute'\n\nconst AttributeContext = createContext<AttrList>({})\n\ninterface AttributeProviderProps {\n  attributes: AttrList\n}\n\nexport const AttributeProvider: FC<AttributeProviderProps> = ({\n  attributes,\n  children,\n}) => {\n  const parentAttrs = useAttributes()\n\n  return (\n    <AttributeContext.Provider value={{ ...parentAttrs, ...attributes }}>\n      {children}\n    </AttributeContext.Provider>\n  )\n}\n\nexport const useAttributes = (keys?: string[]): AttrList => {\n  const allAttributes = useContext(AttributeContext)\n  if (!keys) return allAttributes\n\n  const filtered: AttrList = {}\n  keys.forEach(key => filtered[key] = allAttributes[key])\n  return filtered\n}\n\nexport function useAttribute<T extends AttrValue> (type: AttrType): T {\n  return (useAttributes()[type] as T)\n}\n","import { createContext, FC, useContext, useEffect, useState } from 'react'\n\nimport { RecordId } from '../../Api/Model'\nimport { noOp } from '../../Helpers'\nimport { DamageType } from './DamageType'\n\ntype DamageSetter = (value: number) => void;\n\ntype DamageContextData = {\n  [type in DamageType]?: {\n    value: number\n    setValue?: DamageSetter\n  };\n};\n\nconst DamageContext = createContext<DamageContextData>({})\n\ninterface DamageProviderProps {\n  type: DamageType\n  id: RecordId\n}\n\nexport const DamageProvider: FC<DamageProviderProps> = ({\n  type,\n  id,\n  children,\n}) => {\n  const dmgSessionKey = `dmg.${id}.${type}`\n  const [value, setDmgValue] = useState<number>(0)\n\n  useEffect(() => {\n    const value = parseInt(localStorage.getItem(dmgSessionKey) || '0')\n    setDmgValue(value)\n  }, [dmgSessionKey])\n\n  const onDmgChange = (value: number) => {\n    setDmgValue(value)\n    localStorage.setItem(dmgSessionKey, value.toString())\n  }\n\n  const damages: DamageContextData = {\n    ...useContext(DamageContext),\n    [type]: { value, setValue: onDmgChange },\n  }\n\n  return (\n    <DamageContext.Provider value={damages}>\n      {children}\n    </DamageContext.Provider>\n  )\n}\n\nexport const useDamage = (type: DamageType): number => {\n  return useContext(DamageContext)[type]?.value || 0\n}\n\nexport const useSetDamage = (type: DamageType): DamageSetter => {\n  return useContext(DamageContext)[type]?.setValue || noOp\n}\n\nexport const useDamagePenalty = (types: DamageType[]): number => {\n  const damageData = useContext(DamageContext)\n\n  return types\n    .map(type => damageData[type]?.value || 0)\n    .map(value => Math.floor(value / 3))\n    .reduce((a, b) => a + b, 0)\n}\n","export enum DamageType {\n  charPhysical,\n  charStun,\n  vehiclePhysical\n}\n","import { BasicSkillData, SkillType } from '../SkillData'\nimport { ActiveSkillId } from './ActiveSkillId'\n\nexport type SkillList = Record<string, number>\n\nexport interface ActiveSkillData extends BasicSkillData {\n  type: SkillType.active\n  skillId: ActiveSkillId\n  rank: number\n  attr: string\n  altAttr?: string\n  speciality?: string | null\n  expertise?: string | null\n}\n\nexport function isActiveSkill (skill: BasicSkillData): skill is ActiveSkillData {\n  return skill.type === SkillType.active\n}\n\nexport const hasSpecialty = (skill?: ActiveSkillData, specialty?: string): boolean => {\n  if (!specialty || !skill || !skill.speciality) return false\n  return skill.speciality.toLowerCase() === specialty.toLowerCase()\n}\n\nexport const hasExpertise = (skill?: ActiveSkillData, specialty?: string): boolean => {\n  if (!specialty || !skill || !skill.expertise) return false\n  return skill.expertise.toLowerCase() === specialty.toLowerCase()\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { isAugment } from '../Gear/Augments/AugmentData'\nimport { collectGearEffects, isSkillBonus } from '../Gear/Effect'\nimport { GearProvider, useAllGear } from '../Gear/GearContext'\nimport { calculateAttributes } from '../System/Attribute'\nimport { AttributeProvider } from '../System/AttributeProvider'\nimport { DamageProvider } from '../System/Damage/DamageProvider'\nimport { DamageType } from '../System/Damage/DamageType'\nimport { ActiveSkillData, isActiveSkill, SkillList } from '../System/Skill/ActiveSkill/ActiveSkillData'\nimport { ActiveSkillId } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { CharacterAttr } from './CharacterAttr'\nimport { CharacterData } from './CharacterData'\n\nconst CharacterContext = createContext<CharacterData | null>(null)\n\ninterface CharacterProviderProps {\n  character: CharacterData\n}\n\nexport const CharacterProvider: FC<CharacterProviderProps> = ({\n  character,\n  children,\n}) => {\n  const attributes = calculateAttributes(character.attributes, character.gear)\n\n  attributes[CharacterAttr.essence] = character.gear\n    .filter(isAugment)\n    .reduce((essence, gear) => essence - gear.essenceCost, 6)\n\n  return (\n    <CharacterContext.Provider value={character}>\n      <AttributeProvider attributes={attributes}>\n        <GearProvider gear={character.gear}>\n          <DamageProvider type={DamageType.charPhysical} id={character.id}>\n            <DamageProvider type={DamageType.charStun} id={character.id}>\n              {children}\n            </DamageProvider>\n          </DamageProvider>\n        </GearProvider>\n      </AttributeProvider>\n    </CharacterContext.Provider>\n  )\n}\n\nexport const useCharacter = (): CharacterData | null => {\n  return useContext(CharacterContext)\n}\n\nexport function useSkills (skillIds?: string[]): SkillList {\n  const character = useContext(CharacterContext)\n  const skillList: SkillList = {}\n\n  if (character) {\n    character.skills\n      .filter(isActiveSkill)\n      .filter(skill => skillIds ? skillIds.includes(skill.skillId) : true)\n      .forEach(skill => skillList[skill.skillId] = skill.rank)\n  }\n\n  return skillList\n}\n\nexport function useActiveSkill (skillId: ActiveSkillId): ActiveSkillData | undefined {\n  const character = useContext(CharacterContext)\n  const gear = useAllGear()\n  if (!character) return undefined\n\n  const skill = character.skills\n    .filter(isActiveSkill)\n    .find(skill => skill.skillId === skillId)\n\n  if (!skill) return undefined\n\n  const rank = collectGearEffects(gear)\n    .filter(isSkillBonus)\n    .filter(effect => effect.skill === skillId)\n    .reduce((sum, effect) => sum + effect.bonus, skill.rank)\n\n  return { ...skill, rank }\n}\n","import { FC } from 'react'\n\nexport const PistolSvg: FC = () => {\n  return (\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 306.539 306.539\" enableBackground=\"new 0 0 306.539 306.539\">\n      <g>\n        <path d=\"M298.489,88.77c4.446,0,8.05-3.604,8.05-8.05V54.918c0-4.446-3.604-8.05-8.05-8.05h-13.95v-0.05   c0-4.446-3.604-8.05-8.05-8.05h-60.067c-4.446,0-8.049,3.604-8.049,8.05v13.276c0,3.313-2.687,6-6,6h-69.834c-3.314,0-6-2.687-6-6   V46.819c0-4.446-3.604-8.05-8.05-8.05H18.122C8.114,38.77,0,46.883,0,56.892V88.77H298.489z\"/>\n        <path d=\"m0,100.77v4.443c0,10.009 8.114,18.123 18.122,18.123h3.491l-20.015,106.774c-1.743,9.298 0.744,18.889 6.786,26.169s15.01,11.491 24.47,11.491h48.624c15.303,0 28.437-10.9 31.256-25.942l10.818-57.713c2.965,0.189 5.962,0.296 8.986,0.296 20.268,0 39.479-4.302 54.094-12.111 16.599-8.871 25.74-21.376 25.74-35.21 0-4.777-1.115-9.39-3.226-13.755h67.342c4.446,0 8.05-3.604 8.05-8.05v-14.515h-284.538zm132.539,63.641c-1.783,0-3.536-0.048-5.269-0.124l4.6-24.541c4.677,6.26 10.613,11.876 18.155,16.056 1.535,0.851 3.198,1.255 4.838,1.255 3.518,0 6.93-1.86 8.756-5.155 2.677-4.83 0.931-10.917-3.9-13.594-6.44-3.569-11.231-8.954-14.798-14.973h38.306c5.826,4.289 9.146,9.119 9.146,13.755 0,12.896-25.589,27.321-59.834,27.321z\"/>\n      </g>\n    </svg>\n  )\n}\n","import { ListItem, ListItemIcon, ListItemText, SvgIcon } from '@material-ui/core'\nimport { FC, ReactElement } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport interface NavDrawerProps {\n  open: boolean\n\n  closeDrawer (): void\n}\n\nexport type NavDrawer = FC<NavDrawerProps>\n\ninterface NavButtonProps {\n  icon: ReactElement\n  label: string\n  routeTo: string\n\n  closeDrawer (): void\n}\n\nexport const NavButton: FC<NavButtonProps> = ({\n  icon,\n  label,\n  routeTo,\n  closeDrawer,\n}) => {\n  const history = useHistory()\n\n  const onNavClick = () => {\n    history.push(routeTo)\n    closeDrawer()\n  }\n\n  return (\n    <ListItem button onClick={onNavClick}>\n      <ListItemIcon>\n        <SvgIcon>{icon}</SvgIcon>\n      </ListItemIcon>\n      <ListItemText primary={label} />\n    </ListItem>\n  )\n}\n","import { faUsers } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box, Drawer, List } from '@material-ui/core'\n\nimport { NavButton, NavDrawer } from './index'\n\nexport const DefaultNavDrawer: NavDrawer = ({\n  open,\n  closeDrawer,\n  children,\n}) => {\n  return (\n    <Drawer anchor=\"left\" open={open} onClose={closeDrawer}>\n      {children}\n\n      <Box sx={{ flexGrow: 1 }} />\n\n      <List>\n        <NavButton\n          icon={<FontAwesomeIcon icon={faUsers} />}\n          label=\"Characters\"\n          routeTo={'/characters'}\n          closeDrawer={closeDrawer}\n        />\n      </List>\n    </Drawer>\n  )\n}\n","import { faArchive, faAward, faCarAlt, faCogs, faUser, faYenSign } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Divider, List } from '@material-ui/core'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { PistolSvg } from '../../Gear/Weapons/PistolSvg'\nimport { DefaultNavDrawer } from './DefaultNavDrawer'\n\nimport { NavButton, NavDrawer } from './index'\n\nexport const CharacterNavDrawer: NavDrawer = ({\n  open,\n  closeDrawer,\n}) => {\n  const character = useCharacter()\n\n  if (!character) return null\n\n  return (\n    <DefaultNavDrawer open={open} closeDrawer={closeDrawer}>\n      <List>\n        <NavButton\n          icon={<FontAwesomeIcon icon={faUser} />}\n          label={character.bio.alias || character.bio.name}\n          routeTo={`/${character.id}`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<PistolSvg />}\n          label=\"Weapons\"\n          routeTo={`/${character.id}/weapons`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faCarAlt} />}\n          label=\"Vehicles\"\n          routeTo={`/${character.id}/vehicles`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faCogs} />}\n          label=\"Augments\"\n          routeTo={`/${character.id}/augments`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faArchive} />}\n          label=\"Other\"\n          routeTo={`/${character.id}/misc`}\n          closeDrawer={closeDrawer}\n        />\n        <Divider />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faYenSign} />}\n          label=\"Nyuen\"\n          routeTo={`/${character.id}/Nuyen`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faAward} />}\n          label=\"Karma\"\n          routeTo={`/${character.id}/karma`}\n          closeDrawer={closeDrawer}\n        />\n      </List>\n    </DefaultNavDrawer>\n  )\n}\n","import { parseISO } from 'date-fns'\n\nimport { useCharacter } from '../Character/CharacterProvider'\n\nconst nuyenFormatter = new Intl.NumberFormat('en')\nexport const formatNuyen = (cost: number): string => {\n  return nuyenFormatter.format(cost) + ' ¥'\n}\n\nexport const useNuyenBalance = (): number => {\n  const character = useCharacter()\n  if (!character) return 0\n\n  return character.nuyen\n    .sort((a, b) => parseISO(a.date).getTime() - parseISO(b.date).getTime())\n    .reduce((sum, entry) => sum + entry.value, 0)\n}\n","export type Source = { book: string; page: number } | 'Homebrew'\n\nexport const formatSource = (source: Source): string => {\n  if (typeof source === 'string') return source\n  return `${source.book} p.${source.page}`\n}\n","import { Paper } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\ninterface StatBlockProps {\n  vertical?: boolean\n}\n\nexport const StatBlock: FC<StatBlockProps> = ({\n  vertical,\n  children,\n}) => {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        display: 'flex',\n        padding: 1,\n        gap: 1,\n        flexWrap: 'wrap',\n        flexDirection: vertical ? 'column' : 'row',\n        justifyContent: 'space-around',\n      }}\n    >\n      {children}\n    </Paper>\n  )\n}\n\ninterface StatProps {\n  name: string\n  value: string | number | null | undefined\n}\n\nexport const Stat: FC<StatProps> = ({\n  name,\n  value,\n}) => {\n  if (name === 'Essence') {\n    value = (value as number).toFixed(2).toString()\n  }\n\n  return (\n    <Box sx={{ display: 'flex', gap: 1, whiteSpace: 'nowrap' }}>\n      <Box sx={{ fontSize: 14, display: 'inline-block', color: 'primary.main', textAlign: 'left', flexGrow: 1 }}>\n        {name}\n      </Box>\n      <Box sx={{ fontSize: 14, display: 'inline-block', textAlign: 'right', flexGrow: 1 }}>\n        {value || '-'}\n      </Box>\n    </Box>\n  )\n}\n","import { FC } from 'react'\n\nimport { AttrList, formatAttr } from '../System/Attribute'\nimport { Stat, StatBlock } from './StatBlock'\n\ninterface AttributeBlockProps {\n  attributes: AttrList\n  vertical?: boolean\n}\n\nexport const AttributeBlock: FC<AttributeBlockProps> = ({\n  attributes,\n  vertical,\n}) => {\n  if (!attributes) return null\n  if (Object.keys(attributes).length === 0) return null\n\n  return (\n    <StatBlock vertical={vertical}>\n      {Object.entries(attributes).map(([type, value]) => (\n        <Stat key={type} name={formatAttr(type)} value={value} />\n      ))}\n    </StatBlock>\n  )\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCaretSquareRight } from '@fortawesome/free-regular-svg-icons'\nimport { faCaretSquareDown } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box, Chip, IconButton, Paper, Typography } from '@material-ui/core'\nimport { FC, ReactElement, useState } from 'react'\n\nimport { displayFontFamily } from '../../AppThemeProvider'\n\nlibrary.add(faCaretSquareDown, faCaretSquareRight)\n\ninterface InfoBlockProps {\n  title: string\n  titleFontSize?: number\n  subtitle?: string\n  titleRight?: ReactElement\n  expanded?: boolean\n  expandable?: boolean\n  quantity?: number\n}\n\nexport const InfoBlock: FC<InfoBlockProps> = ({\n  title,\n  titleFontSize = 20,\n  quantity = 0,\n  subtitle,\n  titleRight,\n  children,\n  expanded: defaultExpanded = true,\n  expandable,\n}) => {\n  const [expanded, setExpanded] = useState<boolean>(defaultExpanded)\n\n  return (\n    <Paper elevation={1}>\n      <Box sx={{ display: 'flex', gap: 1, padding: 1 }}>\n        {expandable && (\n          <Box>\n            <IconButton size=\"small\" onClick={() => setExpanded(!expanded)}>\n              <FontAwesomeIcon icon={expanded ? 'caret-square-down' : ['far', 'caret-square-right']} />\n            </IconButton>\n          </Box>\n        )}\n\n        <Box sx={{ flexGrow: 1 }}>\n          <Box>\n            <Typography\n              sx={{\n                display: 'inline-block',\n                fontFamily: displayFontFamily,\n                fontSize: titleFontSize,\n                color: 'primary.main',\n              }}\n            >{title}</Typography>\n            {quantity >= 1 && (\n              <Chip\n                sx={{ marginLeft: 1, verticalAlign: 'top' }}\n                label={`x${quantity}`}\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            )}\n          </Box>\n\n          {subtitle}\n        </Box>\n\n        {titleRight}\n      </Box>\n\n      {expanded && children}\n    </Paper>\n  )\n}\n","import { BaseGearData, GearType } from '../../GearData'\nimport { AutosoftAttr } from './AutosoftAttr'\n\nexport interface AutosoftData extends BaseGearData {\n  gearType: GearType.autosoft\n  type: string\n  attributes: {\n    [AutosoftAttr.rating]: number\n    [AutosoftAttr.attr]: string\n    [AutosoftAttr.skill]?: string\n    [AutosoftAttr.weapon]?: string\n  }\n}\n\nexport enum AutosoftType {\n  targeting = 'Weapon Targeting',\n  clearsight = 'clearsight',\n  perception = 'Perception',\n  evasion = 'Evasion',\n  maneuvering = 'Maneuvering',\n  electronicWarfare = 'Electronic Warfare',\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../../Character/CharacterAttr'\nimport { useActiveSkill } from '../../Character/CharacterProvider'\nimport { useAttribute } from '../../System/AttributeProvider'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { hasExpertise, hasSpecialty } from '../../System/Skill/ActiveSkill/ActiveSkillData'\nimport { ActiveSkillId } from '../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool } from '../../UI/DicePool'\nimport { AugmentAttr } from '../Augments/AugmentAttr'\nimport { AugmentData, AugmentType } from '../Augments/AugmentData'\nimport { useFindGear, useGearOfType } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { AutosoftAttr } from '../Software/Autosoft/AutosoftAttr'\nimport { AutosoftType } from '../Software/Autosoft/AutosoftData'\nimport { useAutosoft } from '../Software/Autosoft/AutosoftProvider'\nimport { VehicleData } from './VehicleData'\nimport { ModType, VehicleModData } from './VehicleModData'\n\nexport enum VehiclePoolKeys {\n  pilotEvade = 'vehicle.pilotEvade',\n  riggedEvade = 'vehicle.riggedEvade',\n}\n\ninterface VehiclePoolProps {\n  vehicle: VehicleData\n}\n\nexport const AutosoftPiloting: FC<VehiclePoolProps> = () => {\n  const evasionAutosoft = useAutosoft(AutosoftType.evasion)\n  const maneuveringAutosoft = useAutosoft(AutosoftType.maneuvering)\n\n  const piloting: number = maneuveringAutosoft ? maneuveringAutosoft.attributes[AutosoftAttr.rating] : 0\n  const evasion: number = evasionAutosoft ? evasionAutosoft.attributes[AutosoftAttr.rating] : 0\n\n  const diceGroups: DiceGroup[] = [\n    { name: 'Piloting', size: piloting },\n    { name: 'Evasion', size: evasion },\n  ]\n\n  return <DicePool\n    poolKey={VehiclePoolKeys.pilotEvade}\n    name={'Autosoft Piloting'}\n    groups={diceGroups}\n    dmgPenaltyTypes={[DamageType.vehiclePhysical]}\n  />\n}\n\nexport const DriverPiloting: FC<VehiclePoolProps> = ({\n  vehicle,\n}) => {\n  const pilotingSkill = useActiveSkill(ActiveSkillId.piloting)\n  const reaction = useAttribute<number>(CharacterAttr.reaction) || 0\n\n  const groups: DiceGroup[] = [\n    { name: 'Piloting', size: pilotingSkill?.rank },\n    { name: 'Reaction', size: reaction },\n  ]\n\n  if (hasSpecialty(pilotingSkill, vehicle.pilotingSpeciality)) groups.push(\n    { name: vehicle.pilotingSpeciality, size: 2 })\n  if (hasExpertise(pilotingSkill, vehicle.pilotingSpeciality)) groups.push(\n    { name: vehicle.pilotingSpeciality, size: 3 })\n\n  const dmgPenaltyTypes = [DamageType.charPhysical, DamageType.charStun, DamageType.vehiclePhysical]\n  return <DicePool\n    poolKey={VehiclePoolKeys.riggedEvade}\n    name={'Piloting'}\n    groups={groups}\n    dmgPenaltyTypes={dmgPenaltyTypes}\n  />\n}\n\nexport const RiggedPiloting: FC<VehiclePoolProps> = ({\n  vehicle,\n}) => {\n  const pilotingSkill = useActiveSkill(ActiveSkillId.piloting)\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n\n  const riggerInterface = useGearOfType<VehicleModData>(GearType.vehicleMod)\n    .filter(gear => gear.attachedTo === vehicle.id)\n    .find(gear => gear.modType === ModType.riggerInterface)\n\n  const controlRig = useFindGear<AugmentData>(gear => gear.augmentType === AugmentType.controlRig)\n  if (!controlRig || !riggerInterface) return null\n\n  const groups: DiceGroup[] = [\n    { name: 'Piloting', size: pilotingSkill?.rank },\n    { name: 'Intuition', size: intuition },\n    { name: 'Control Rig', size: controlRig.attributes[AugmentAttr.rating] },\n  ]\n\n  if (hasSpecialty(pilotingSkill, vehicle.pilotingSpeciality)) groups.push(\n    { name: vehicle.pilotingSpeciality, size: 2 })\n  if (hasExpertise(pilotingSkill, vehicle.pilotingSpeciality)) groups.push(\n    { name: vehicle.pilotingSpeciality, size: 3 })\n\n  const dmgPenaltyTypes = [DamageType.charPhysical, DamageType.charStun, DamageType.vehiclePhysical]\n  return <DicePool\n    poolKey={VehiclePoolKeys.riggedEvade}\n    name={'Rigged Piloting'}\n    groups={groups}\n    dmgPenaltyTypes={dmgPenaltyTypes}\n  />\n}\n","import { Box } from '@material-ui/core'\nimport { FC } from 'react'\n\nexport const InfoSection: FC = ({\n  children,\n}) => {\n  return (\n    <Box sx={{ padding: 1 }}>{children}</Box>\n  )\n}\n\nexport const CombatSection: FC = ({\n  children,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', gap: 1, padding: 1, flexWrap: 'wrap' }}>\n      {children}\n    </Box>\n  )\n}\n","import { Paper, Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport React, { FC } from 'react'\n\nimport { calculateAttributes } from '../System/Attribute'\nimport { AttributeProvider } from '../System/AttributeProvider'\nimport { formatNuyen } from '../System/Nuyen'\nimport { formatSource } from '../System/Source'\nimport { AttributeBlock } from '../UI/AttributeBlock'\nimport { InfoBlock } from '../UI/InfoBlock/InfoBlock'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\nimport { Stat } from '../UI/StatBlock'\nimport { formatAvail } from './Availability'\nimport { useAttachedGear } from './GearContext'\nimport { GearInfoProps } from './GearInfo'\nimport { GearList } from './GearList'\n\nexport const GearInfoBlock: FC<GearInfoProps> = ({\n  item,\n  expanded,\n  children,\n}) => {\n  const blockTitleRight = <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n    {item.avail && <Stat name=\"Avail\" value={formatAvail(item.avail)} />}\n    {item.cost && <Stat name=\"Cost\" value={formatNuyen(item.cost)} />}\n    {item.source && <Stat name=\"Source\" value={formatSource(item.source)} />}\n  </Box>\n\n  const attachedGear = useAttachedGear(item.id)\n\n  const expandable = Boolean(\n    item.description\n    || item.wirelessBonus\n    || item.attributes\n    || children\n    || attachedGear.length > 0,\n  )\n\n  const attributes = calculateAttributes(item.attributes || {}, attachedGear)\n\n  return (\n    <AttributeProvider attributes={attributes}>\n      <InfoBlock\n        title={item.name}\n        quantity={item.quantity || 0}\n        subtitle={item.type}\n        titleRight={blockTitleRight}\n        expandable={expandable}\n        expanded={expanded}\n      >\n        {item.description && (\n          <InfoSection>\n            <Typography sx={{ fontStyle: 'italic' }}>{item.description}</Typography>\n          </InfoSection>\n        )}\n\n        {item.wirelessBonus && (\n          <InfoSection>\n            <Box sx={{ fontStyle: 'italic' }}>\n              <Typography variant=\"body2\" sx={{ color: 'primary.main', display: 'inline' }}>Wireless\n                Bonus:</Typography>\n              <Typography\n                variant=\"body2\"\n                sx={{ display: 'inline', marginLeft: 0.5 }}\n              >{item.wirelessBonus.description}</Typography>\n            </Box>\n          </InfoSection>\n        )}\n\n        <InfoSection>\n          <AttributeBlock attributes={attributes} />\n        </InfoSection>\n\n        {children}\n\n        {attachedGear.length >= 1 && (\n          <Paper variant=\"outlined\" sx={{ padding: 1 }}>\n            <GearList gear={attachedGear} />\n          </Paper>\n        )}\n      </InfoBlock>\n    </AttributeProvider>\n  )\n}\n","export type Availability = {\n  rarity: number\n  illegal?: boolean\n  license?: boolean\n}\nexport const formatAvail = (avail: Availability): string => {\n  return `${avail.rarity}${avail.illegal ? '(i)' : ''}${avail.license ? '(L)' : ''}`\n}\n","import { Chip, Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { useAttachedGear, useFilterGear } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearInfoProps } from '../GearInfo'\nimport { GearInfoBlock } from '../GearInfoBlock'\nimport { AutosoftData } from '../Software/Autosoft/AutosoftData'\nimport { VehicleData } from '../Vehicles/VehicleData'\nimport { RccAttr } from './RccAttr'\nimport { RccData } from './RccData'\n\nexport const RccInfo: FC<GearInfoProps<RccData>> = ({\n  item: rcc,\n  expanded,\n}) => {\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n  const autosofts = useAttachedGear(rcc.id)\n    .filter(gear => gear.gearType === GearType.autosoft)\n    .map(gear => gear as AutosoftData)\n  const slavedAutosofts = autosofts\n    .filter(autosoft => rcc.slavedAutosofts.includes(autosoft.id))\n\n  const slavedVehicles: VehicleData[] = useFilterGear(gear => gear.slavedTo === rcc.id)\n  const maxSlaved = rcc.attributes[RccAttr.deviceRating] * 3\n\n  return (\n    <GearInfoBlock item={rcc} expanded={expanded}>\n      <InfoSection>\n        <Typography variant={'h6'}>Autosofts ({rcc.slavedAutosofts.length}/{dataProcessing} shared)</Typography>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n          {slavedAutosofts.map(autosoft => (\n            <Chip key={autosoft.id} label={autosoft.name} />\n          ))}\n        </Box>\n      </InfoSection>\n\n      <InfoSection>\n        <Typography variant={'h6'}>Slaved ({slavedVehicles.length} / {maxSlaved})</Typography>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n          {slavedVehicles.map(vehicle => (\n            <Chip key={vehicle.id} label={vehicle.name} />\n          ))}\n        </Box>\n      </InfoSection>\n    </GearInfoBlock>\n  )\n}\n","import Paper from '@material-ui/core/Paper'\nimport { FC, useState } from 'react'\n\nimport { noOp } from '../Helpers'\n\ninterface TrackCellProps {\n  onClick? (): void\n\n  filled?: boolean\n}\n\nexport const TrackCell: FC<TrackCellProps> = ({\n  children,\n  onClick = noOp,\n  filled = false,\n}) => {\n  const [hovered, setHovered] = useState<boolean>(false)\n\n  let backgroundColor = 'default'\n  if (filled) backgroundColor = 'primary.dark'\n  if (hovered) backgroundColor = 'primary.light'\n\n  return (\n    <Paper\n      sx={{ padding: 1, userSelect: 'none', backgroundColor }}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      onClick={() => {\n        setHovered(false)\n        onClick()\n      }}\n      variant={'outlined'}\n    >{children}</Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { noOp } from '../../Helpers'\nimport { TrackCell } from '../../UI/TrackCell'\nimport { useDamage, useSetDamage } from './DamageProvider'\nimport { DamageType } from './DamageType'\n\nimport styles from './DamageTrack.module.scss'\n\ninterface DamageTrackProps {\n  type: DamageType\n  max: number\n  label?: string\n}\n\nexport const DamageTrack: FC<DamageTrackProps> = ({\n  type,\n  max,\n  label = 'Physical',\n}) => {\n  const current = useDamage(type)\n  const onChange = useSetDamage(type)\n\n  const onToggleCell = (value: number) => {\n    if (value === current) {\n      onChange(value - 1)\n    } else {\n      onChange(value)\n    }\n  }\n\n  return (\n    <Box sx={{ maxWidth: 300 }}>\n      <Typography variant={'h6'}>{label}</Typography>\n      <Box sx={{ paddingBottom: 0.5, textAlign: 'right' }}>\n        <TrackCell onClick={() => onChange(0)}>0</TrackCell>\n      </Box>\n      <Box className={styles.DamageTrack}>\n        {new Array(max).fill(null).map((_, index) => (\n          <DamageCell key={index} value={index + 1} filled={index < current} toggleCell={onToggleCell} />\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\ninterface DamageCellProps {\n  value: number\n  filled?: boolean\n\n  toggleCell? (newValue: number): void\n}\n\nconst DamageCell: FC<DamageCellProps> = ({\n  value,\n  filled = false,\n  toggleCell = noOp,\n}) => {\n  const penalty = Math.floor((value + 1) / 3)\n\n  return (\n    <TrackCell onClick={() => toggleCell(value)} filled={filled}>\n      <Box sx={{ textAlign: 'right' }}>\n        {value % 3 === 0 ? penalty * -1 : '\\u00A0'}\n      </Box>\n    </TrackCell>\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { Stat } from '../UI/StatBlock'\nimport { useAttribute } from './AttributeProvider'\n\nexport const CharacterDefRatingStat: FC = () => {\n  const body = useAttribute<number>(CharacterAttr.body) || 0\n  const armor = 0\n\n  return (\n    <Stat name=\"Def. Rating\" value={body + armor} />\n  )\n}\n\nexport const VehicleDefRatingStat: FC = () => {\n  const body = useAttribute<number>(VehicleAttr.body) || 0\n  const armor = useAttribute<number>(VehicleAttr.armor) || 0\n\n  return (\n    <Stat name=\"Def. Rating\" value={body + armor} />\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { useFindGear } from '../Gear/GearContext'\nimport { GearType } from '../Gear/GearData'\nimport { RccAttr } from '../Gear/Rcc/RccAttr'\nimport { RccData } from '../Gear/Rcc/RccData'\nimport { Stat } from '../UI/StatBlock'\nimport { useAttribute } from './AttributeProvider'\n\ninterface InitiativeStatProps {\n  name: string\n  base: number\n  dice?: number\n}\n\nexport const InitiativeStat: FC<InitiativeStatProps> = ({\n  name,\n  base,\n  dice = 1,\n}) => {\n  return (\n    <Stat name={name} value={`${base} + ${dice}D6`} />\n  )\n}\n\nexport const CharacterHotVrInit: FC = () => {\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const rcc = useFindGear<RccData>(gear => gear.gearType === GearType.rcc)\n  if (!rcc) return null\n\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n\n  return (\n    <InitiativeStat name=\"VR Cold Init\" base={intuition + dataProcessing} dice={2} />\n  )\n}\n\nexport const CharacterColdVrInit: FC = () => {\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const rcc = useFindGear<RccData>(gear => gear.gearType === GearType.rcc)\n  if (!rcc) return null\n\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n\n  return (\n    <InitiativeStat name=\"VR Hot Init\" base={intuition + dataProcessing} dice={3} />\n  )\n}\n","import { Box, Paper } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { useSkills } from '../Character/CharacterProvider'\nimport { formatAttr } from '../System/Attribute'\nimport { useAttributes } from '../System/AttributeProvider'\nimport { useDamagePenalty } from '../System/Damage/DamageProvider'\nimport { DamageType } from '../System/Damage/DamageType'\nimport { ActiveSkillData, hasExpertise, hasSpecialty } from '../System/Skill/ActiveSkill/ActiveSkillData'\nimport { formatSkill } from '../System/Skill/ActiveSkill/ActiveSkillId'\n\nexport interface DiceGroup {\n  name: string\n  size: number | undefined\n  default?: number\n}\n\nexport const DicePools: FC = ({\n  children,\n}) => {\n  return <Paper variant=\"outlined\" sx={{ padding: 1, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n    {children}\n  </Paper>\n}\n\nexport interface DicePoolData {\n  poolKey: string\n  name: string\n  skills?: string[]\n  attrs?: string[]\n  bonuses?: DiceGroup[]\n  dmgPenaltyTypes?: DamageType[]\n}\n\nexport const skillSpecialtyBonus = (\n  skill: ActiveSkillData | undefined,\n  specialtyName: string | undefined,\n): DiceGroup | null => {\n  if (!skill || !specialtyName)\n    return null\n\n  if (hasSpecialty(skill, specialtyName))\n    return { name: 'Specialty', size: 2 }\n\n  if (hasExpertise(skill, specialtyName))\n    return { name: 'Expertise', size: 3 }\n\n  return null\n}\n\ntype DicePoolProps = {\n  name: string\n  groups?: DiceGroup[]\n  dmgPenaltyTypes?: DamageType[]\n} & DicePoolData\n\nexport const DicePool: FC<DicePoolProps> = ({\n  name,\n  skills = [],\n  attrs = [],\n  bonuses = [],\n  groups = [],\n  dmgPenaltyTypes = [],\n}) => {\n  const skillList = useSkills(skills)\n  const attrList = useAttributes(attrs)\n  const dmgPenalty = useDamagePenalty(dmgPenaltyTypes)\n\n  groups = [\n    ...groups,\n    ...Object.entries(skillList)\n      .map(([skillId, rank]) => ({ name: formatSkill(skillId), size: rank })),\n    ...Object.entries(attrList)\n      .filter(([_, value]) => typeof value === 'number')\n      .map(([attrType, value]) => ({ name: formatAttr(attrType), size: value as number })),\n    ...bonuses,\n  ]\n\n  if (dmgPenalty > 0) {\n    groups = [...groups, { name: 'Dmg. Penalty', size: dmgPenalty * -1 }]\n  }\n\n  const total = Math.max(0, groups.map(g => g.size || g.default || 0).reduce((a, b) => a + b, 0))\n\n  return (\n    <Box sx={{ display: 'inline-flex', flexDirection: 'column' }}>\n      <DiceGroupDisplay name={name} size={total} total />\n      {groups.map(group => (\n        <DiceGroupDisplay key={group.name} name={group.name} size={group.size || group.default || 0} />\n      ))}\n    </Box>\n  )\n}\n\ninterface DiceGroupDisplayProps {\n  name: string\n  size: number\n  total?: boolean\n}\n\nconst DiceGroupDisplay: FC<DiceGroupDisplayProps> = ({\n  name,\n  size,\n  total,\n}) => {\n  const sizeStyles = { display: 'inline-block', padding: 0.5, width: 30, textAlign: 'center' } as const\n  const nameStyles = { display: 'inline-block', padding: 0.5, marginRight: 1 } as const\n\n  return (\n    <Box sx={{ display: 'flex', fontSize: total ? 14 : 12, backgroundColor: total ? '#424242' : undefined }}>\n      <Box sx={sizeStyles}>{size}</Box>\n      <Box sx={nameStyles}>{name}</Box>\n    </Box>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { DicePools } from '../UI/DicePool'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\n\nexport const GearDicePools: FC = ({\n  children,\n}) => {\n  return (\n    <InfoSection>\n      <Typography variant={'h6'}>Dice Pools</Typography>\n      <DicePools>{children}</DicePools>\n    </InfoSection>\n  )\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { AutosoftAttr } from './AutosoftAttr'\nimport { AutosoftData } from './AutosoftData'\n\nconst AutosoftContext = createContext<AutosoftData[]>([])\n\ninterface AutosoftProviderProps {\n  autosofts: AutosoftData[]\n}\n\nexport const AutosoftProvider: FC<AutosoftProviderProps> = ({\n  autosofts,\n  children,\n}) => {\n  return (\n    <AutosoftContext.Provider value={autosofts}>{children}</AutosoftContext.Provider>\n  )\n}\n\nexport const useAutosoft = (name: string): AutosoftData | undefined => {\n  const autosofts = useContext(AutosoftContext)\n  return autosofts.find(autosoft => autosoft.name === name)\n}\n\nexport const useTargetingAutosoft = (weaponName: string): number | undefined => {\n  return useContext(AutosoftContext)\n    .find(autosoft => autosoft.attributes[AutosoftAttr.weapon] === weaponName)\n    ?.attributes[AutosoftAttr.rating]\n}\n","import { faBroadcastTower, faSave } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { RecordId } from '../../../Api/Model'\nimport { AttributeBlock } from '../../../UI/AttributeBlock'\nimport { AutosoftData } from './AutosoftData'\n\ninterface AutosoftsListProps {\n  autosofts: AutosoftData[]\n  slavedIds?: RecordId[]\n  withAvail?: boolean\n  withCost?: boolean\n}\n\nexport const AutosoftsList: FC<AutosoftsListProps> = ({\n  autosofts,\n  slavedIds,\n}) => {\n  return (\n    <Box>\n      {autosofts.map(autosoft => (\n        <Box key={autosoft.id} sx={{ paddingTop: 1 }}>\n          <AutosoftListItem\n            key={autosoft.id}\n            autosoft={autosoft}\n            slavedIds={slavedIds}\n          />\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\ninterface AutosoftListItemProps {\n  autosoft: AutosoftData\n  slavedIds?: RecordId[]\n  withAvail?: boolean\n  withCost?: boolean\n}\n\nconst AutosoftListItem: FC<AutosoftListItemProps> = ({\n  autosoft,\n  slavedIds,\n}) => {\n  return (\n    <Box>\n      <Box>\n        <Box sx={{ display: 'inline-block', marginRight: 1 }}>\n          {slavedIds?.includes(autosoft.id) ? (\n            <FontAwesomeIcon icon={faBroadcastTower} />\n          ) : (\n            <FontAwesomeIcon icon={faSave} />\n          )}\n        </Box>\n        {autosoft.name}\n      </Box>\n\n      <AttributeBlock attributes={autosoft.attributes} />\n    </Box>\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../../Character/CharacterAttr'\nimport { useActiveSkill } from '../../Character/CharacterProvider'\nimport { useAttribute } from '../../System/AttributeProvider'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { ActiveSkillId } from '../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool, skillSpecialtyBonus } from '../../UI/DicePool'\nimport { AugmentAttr } from '../Augments/AugmentAttr'\nimport { AugmentData, AugmentType } from '../Augments/AugmentData'\nimport { useFindGear } from '../GearContext'\nimport { useTargetingAutosoft } from '../Software/Autosoft/AutosoftProvider'\nimport { VehicleAttr } from '../Vehicles/VehicleAttr'\nimport { WeaponData } from './WeaponData'\n\nexport enum WeaponPoolKeys {\n  basicAttack = 'weapon.basicAttack',\n  droneAttack = 'weapon.droneAttack',\n  mountedAttack = 'weapon.mountedAttack',\n  riggedAttack = 'weapon.riggedAttack',\n}\n\ninterface FirearmPoolProps {\n  weapon: WeaponData\n}\n\nexport const BasicAttackPool: FC<FirearmPoolProps> = ({\n  weapon,\n}) => {\n  const firearmsSkill = useActiveSkill(weapon.skill)\n  const specialtyBonus = skillSpecialtyBonus(firearmsSkill, weapon.specialtyName)\n\n  const bonuses: DiceGroup[] = []\n  if (specialtyBonus) bonuses.push(specialtyBonus)\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.basicAttack}\n    name={'Basic Attack'}\n    attrs={[CharacterAttr.agility]}\n    skills={[ActiveSkillId.firearms]}\n    bonuses={bonuses}\n    dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n  />\n}\n\nexport const DroneAttackPool: FC<FirearmPoolProps> = ({\n  weapon,\n}) => {\n  const targetingAutosoft = useTargetingAutosoft(weapon.name) || -1\n\n  const targetingGroup: DiceGroup = { name: 'Targeting', size: targetingAutosoft }\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.droneAttack}\n    name={'Drone Attack'}\n    attrs={[VehicleAttr.sensor]}\n    groups={[targetingGroup]}\n    dmgPenaltyTypes={[DamageType.vehiclePhysical]}\n  />\n}\n\nexport const VehicleAttackPool: FC<FirearmPoolProps> = () => <DicePool\n  poolKey={WeaponPoolKeys.mountedAttack}\n  name={'Mounted Attack'}\n  attrs={[CharacterAttr.logic]}\n  skills={[ActiveSkillId.engineering]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nexport const RiggedAttackPool: FC<FirearmPoolProps> = () => {\n  const controlRig = useFindGear<AugmentData>(gear => gear.augmentType === AugmentType.controlRig)\n  if (!controlRig) return null\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.riggedAttack}\n    name={'Rigged Attack'}\n    attrs={[CharacterAttr.logic]}\n    skills={[ActiveSkillId.engineering]}\n    bonuses={[\n      { name: 'Control Rig', size: controlRig.attributes[AugmentAttr.rating] },\n    ]}\n    dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun, DamageType.vehiclePhysical]}\n  />\n}\n","import { Box, Typography, useMediaQuery, useTheme } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { DamageProvider } from '../../System/Damage/DamageProvider'\nimport { DamageTrack } from '../../System/Damage/DamageTrack'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { VehicleDefRatingStat } from '../../System/DefenseRating'\nimport { CharacterColdVrInit, CharacterHotVrInit, InitiativeStat } from '../../System/Initiative'\nimport { AttributeBlock } from '../../UI/AttributeBlock'\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { StatBlock } from '../../UI/StatBlock'\nimport { useGear, useGearOfType } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearDicePools } from '../GearDicePools'\nimport { GearInfoProps } from '../GearInfo'\nimport { GearInfoBlock } from '../GearInfoBlock'\nimport { RccData } from '../Rcc/RccData'\nimport { AutosoftData } from '../Software/Autosoft/AutosoftData'\nimport { AutosoftProvider } from '../Software/Autosoft/AutosoftProvider'\nimport { AutosoftsList } from '../Software/Autosoft/AutosoftsList'\nimport { DriverPiloting, AutosoftPiloting, RiggedPiloting } from './DicePools'\nimport { VehicleAttr } from './VehicleAttr'\nimport { VehicleData } from './VehicleData'\nimport { ModType, VehicleModData } from './VehicleModData'\n\nexport const VehicleInfo: FC<GearInfoProps<VehicleData>> = ({\n  item: vehicle,\n  expanded,\n}) => {\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n\n  const pilot = vehicle.attributes[VehicleAttr.pilot] || 0\n\n  const riggerInterface = useGearOfType<VehicleModData>(GearType.vehicleMod)\n    .filter(gear => gear.attachedTo === vehicle.id)\n    .find(gear => gear.modType === ModType.riggerInterface)\n\n  const rcc = useGear<RccData>(vehicle.slavedTo)\n  const physicalMax = Math.ceil(vehicle.attributes[VehicleAttr.body] / 2) + 8\n  const allAutosofts = useGearOfType<AutosoftData>(GearType.autosoft)\n\n  let autosofts = allAutosofts\n    .filter(gear => gear.attachedTo === vehicle.id)\n\n  if (rcc) {\n    autosofts = [\n      ...autosofts,\n      ...allAutosofts\n        .filter(autosoft => autosoft.attachedTo === rcc.id)\n        .filter(autosoft => rcc.slavedAutosofts.includes(autosoft.id)),\n    ]\n  }\n\n  return (\n    <DamageProvider type={DamageType.vehiclePhysical} id={vehicle.id}>\n      <AutosoftProvider autosofts={autosofts}>\n        <GearInfoBlock item={vehicle} expanded={expanded}>\n          <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'row-reverse' : 'column', flexWrap: 'wrap' }}>\n            <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'column' : 'row', padding: 1, gap: 1 }}>\n              <Box>\n                <Typography variant={'h6'}>Combat</Typography>\n                <StatBlock vertical>\n                  <InitiativeStat name=\"Drone Init\" base={pilot * 2} dice={4} />\n                  {riggerInterface && (\n                    <>\n                      <CharacterHotVrInit />\n                      <CharacterColdVrInit />\n                    </>\n                  )}\n                  <VehicleDefRatingStat />\n                </StatBlock>\n              </Box>\n\n              <Box>\n                <DamageTrack type={DamageType.vehiclePhysical} max={physicalMax} label=\"Physical\" />\n              </Box>\n            </Box>\n\n            <Box sx={{ flexGrow: 1 }}>\n              <GearDicePools>\n                <DriverPiloting vehicle={vehicle} />\n                <AutosoftPiloting vehicle={vehicle} />\n                <RiggedPiloting vehicle={vehicle} />\n              </GearDicePools>\n\n              {rcc && (\n                <InfoSection>\n                  <Typography variant={'h6'}>Slaved To</Typography>\n                  <Typography>{rcc.name}</Typography>\n                  <AttributeBlock attributes={rcc.attributes} />\n                </InfoSection>\n              )}\n\n              <InfoSection>\n                <Typography variant={'h6'}>Autosofts</Typography>\n                <AutosoftsList autosofts={autosofts} slavedIds={rcc?.slavedAutosofts} />\n              </InfoSection>\n            </Box>\n          </Box>\n        </GearInfoBlock>\n      </AutosoftProvider>\n    </DamageProvider>\n  )\n}\n","import { FC } from 'react'\n\nimport { useGear } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearDicePools } from '../GearDicePools'\nimport { GearInfoProps } from '../GearInfo'\nimport { GearInfoBlock } from '../GearInfoBlock'\nimport { BasicAttackPool, DroneAttackPool, RiggedAttackPool, VehicleAttackPool } from './DicePools'\nimport { WeaponData } from './WeaponData'\n\nexport const WeaponInfo: FC<GearInfoProps<WeaponData>> = ({\n  expanded,\n  item: weapon,\n}) => {\n  const mounted = useGear(weapon.attachedTo)?.gearType === GearType.vehicleMod\n\n  return (\n    <GearInfoBlock item={weapon} expanded={expanded}>\n      <GearDicePools>\n        {mounted ? (\n          <>\n            <VehicleAttackPool weapon={weapon} />\n            <DroneAttackPool weapon={weapon} />\n            <RiggedAttackPool weapon={weapon} />\n          </>\n        ) : (\n          <>\n            <BasicAttackPool weapon={weapon} />\n          </>\n        )}\n      </GearDicePools>\n    </GearInfoBlock>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { GearData, GearType } from './GearData'\nimport { GearInfoBlock } from './GearInfoBlock'\nimport { RccData } from './Rcc/RccData'\nimport { RccInfo } from './Rcc/RccInfo'\nimport { VehicleData } from './Vehicles/VehicleData'\nimport { VehicleInfo } from './Vehicles/VehicleInfo'\nimport { WeaponData } from './Weapons/WeaponData'\nimport { WeaponInfo } from './Weapons/WeaponInfo'\n\nexport interface GearInfoProps<Type extends GearData = GearData> {\n  item: Type\n  expanded?: boolean\n}\n\nexport const GearInfo: FC<GearInfoProps> = ({\n  item,\n  expanded,\n}) => {\n  switch (item.gearType) {\n    case GearType.weapon:\n      return <WeaponInfo item={item as WeaponData} expanded={expanded} />\n    case GearType.vehicle:\n      return <VehicleInfo item={item as VehicleData} expanded={expanded} />\n    case GearType.rcc:\n      return <RccInfo item={item as RccData} expanded={expanded} />\n    default:\n      return <GearInfoBlock item={item} expanded={expanded} />\n  }\n}\n","import Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { GearData } from './GearData'\nimport { GearInfo } from './GearInfo'\n\ninterface GearListProps {\n  gear: GearData[]\n  expanded?: boolean\n}\n\nexport const GearList: FC<GearListProps> = ({\n  gear,\n  expanded = true,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      {gear.map((gear) => <GearInfo key={gear.id} item={gear} expanded={expanded} />)}\n    </Box>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { AugmentData } from '../../Gear/Augments/AugmentData'\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\n\nexport const AugmentsPage: FC = () => {\n  const augments = useGearOfType<AugmentData>(GearType.augment)\n    .filter(gear => !gear.attachedTo)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Augments</Typography>\n      <GearList gear={augments} />\n    </>\n  )\n}\n","import { Typography, useMediaQuery, useTheme } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { collectGearEffects, isInitBonus } from '../../Gear/Effect'\nimport { useAllGear } from '../../Gear/GearContext'\nimport { useAttribute } from '../../System/AttributeProvider'\nimport { DamageTrack } from '../../System/Damage/DamageTrack'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { CharacterDefRatingStat } from '../../System/DefenseRating'\nimport { CharacterColdVrInit, CharacterHotVrInit, InitiativeStat } from '../../System/Initiative'\nimport { StatBlock } from '../../UI/StatBlock'\nimport { CharacterAttr } from '../CharacterAttr'\n\nexport const CombatArea: FC = () => {\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n  const gear = useAllGear()\n\n  const body = useAttribute<number>(CharacterAttr.body) || 0\n  const reaction = useAttribute<number>(CharacterAttr.reaction) || 0\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const willpower = useAttribute<number>(CharacterAttr.willpower) || 0\n\n  const physicalMax = Math.ceil(body / 2) + 8\n  const stunMax = Math.ceil(willpower / 2) + 8\n\n  const initDice = collectGearEffects(gear)\n    .filter(isInitBonus)\n    .reduce((sum, effect) => sum + effect.dice, 1)\n\n  return <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'column' : 'row', padding: 1, gap: 1 }}>\n    <Box>\n      <Typography variant={'h6'}>Combat</Typography>\n      <StatBlock vertical>\n        {/* NOTE: pg. 67 => changed by augments */}\n        <InitiativeStat name=\"Init\" base={reaction + intuition} dice={initDice} />\n        <CharacterHotVrInit />\n        <CharacterColdVrInit />\n        <CharacterDefRatingStat />\n      </StatBlock>\n    </Box>\n\n    <Box>\n      <DamageTrack type={DamageType.charPhysical} max={physicalMax} label=\"Physical\" />\n    </Box>\n\n    <Box>\n      <DamageTrack type={DamageType.charStun} max={stunMax} label=\"Stun\" />\n    </Box>\n  </Box>\n}\n","import { FC } from 'react'\n\nimport { useAttributes } from '../../../System/AttributeProvider'\nimport { AttributeBlock } from '../../../UI/AttributeBlock'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { CharacterAttr } from '../../CharacterAttr'\n\nexport const AttributesSection: FC = () => {\n  const charAttributes = useAttributes([\n    CharacterAttr.body,\n    CharacterAttr.agility,\n    CharacterAttr.reaction,\n    CharacterAttr.strength,\n    CharacterAttr.willpower,\n    CharacterAttr.logic,\n    CharacterAttr.intuition,\n    CharacterAttr.charisma,\n    CharacterAttr.edge,\n    CharacterAttr.essence,\n    CharacterAttr.magic,\n    CharacterAttr.resonance,\n  ])\n\n  const magic = charAttributes[CharacterAttr.magic]\n  if (!magic) delete charAttributes[CharacterAttr.magic]\n\n  const resonance = charAttributes[CharacterAttr.resonance]\n  if (!resonance) delete charAttributes[CharacterAttr.resonance]\n\n  return <InfoSection>\n    <AttributeBlock attributes={charAttributes} />\n  </InfoSection>\n}\n","import { Typography } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { useAllGear } from '../../../Gear/GearContext'\nimport { KitAttr } from '../../../Gear/Kit/KitAttr'\nimport { KitType } from '../../../Gear/Kit/KitType'\nimport { OtherGearData } from '../../../Gear/OtherGearData'\nimport { DamageType } from '../../../System/Damage/DamageType'\nimport { ActiveSkillId } from '../../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool, DicePools, skillSpecialtyBonus } from '../../../UI/DicePool'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { CharacterAttr } from '../../CharacterAttr'\nimport { CharacterPoolTypes } from '../../CharacterPoolTypes'\nimport { useActiveSkill } from '../../CharacterProvider'\n\nexport const DicePoolsSection: FC = () => {\n  return <InfoSection>\n    <Typography variant={'h6'}>Dice Pools</Typography>\n    <DicePools>\n      <DodgePool />\n      <ResistDamagePool />\n      <ComposurePool />\n      <JudgeIntentPool />\n      <MemoryPool />\n      <LiftPool />\n      <FirstAidPool />\n      <MedkitPool />\n    </DicePools>\n  </InfoSection>\n}\n\nconst DodgePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.dodge}\n  name={'Dodge'}\n  attrs={[CharacterAttr.reaction, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst ResistDamagePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.dmgResist}\n  name={'Resist Dmg.'}\n  attrs={[CharacterAttr.body]}\n  dmgPenaltyTypes={[]}\n/>\n\nconst ComposurePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.composure}\n  name={'Composure'}\n  attrs={[CharacterAttr.willpower, CharacterAttr.charisma]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst JudgeIntentPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.judgeIntent}\n  name={'Judge Intent'}\n  attrs={[CharacterAttr.willpower, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst MemoryPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.memory}\n  name={'Memory'}\n  attrs={[CharacterAttr.logic, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst LiftPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.liftCarry}\n  name={'Lift/Carry'}\n  attrs={[CharacterAttr.body, CharacterAttr.strength]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst FirstAidPool: FC = () => {\n  const firstAidKit = useAllGear()\n    .find(gear => gear.kit === KitType.firstAid)\n  const biotechSkill = useActiveSkill(ActiveSkillId.biotech)\n  if (!biotechSkill) return null\n\n  const bonuses: DiceGroup[] = []\n  const specialtyBonus = skillSpecialtyBonus(biotechSkill, 'First Aid')\n  if (specialtyBonus) bonuses.push(specialtyBonus)\n  if (!firstAidKit) bonuses.push({ name: 'Kit', size: -2 })\n\n  return (\n    <DicePool\n      poolKey={CharacterPoolTypes.firstAid}\n      name={'First Aid'}\n      skills={[ActiveSkillId.biotech]}\n      attrs={[CharacterAttr.logic]}\n      bonuses={bonuses}\n      dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n    />\n  )\n}\n\nconst MedkitPool: FC = () => {\n  const biotechSkill = useActiveSkill(ActiveSkillId.biotech)\n  const medKit = useAllGear().find(gear => gear.kit === KitType.medKit) as OtherGearData | undefined\n\n  if (!biotechSkill) return null\n  if (!medKit) return null\n\n  const bonuses: DiceGroup[] = []\n  if (medKit.attributes && medKit.attributes[KitAttr.medkitRating])\n    bonuses.push({ name: 'Medkit', size: medKit.attributes[KitAttr.medkitRating] as number || 0 })\n\n  return (\n    <DicePool\n      poolKey={CharacterPoolTypes.firstAid}\n      name={'MedKit'}\n      skills={[ActiveSkillId.biotech]}\n      attrs={[CharacterAttr.logic]}\n      bonuses={bonuses}\n      dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n    />\n  )\n}\n","import { Chip, Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC, useState } from 'react'\n\nimport { useAttribute } from '../../../System/AttributeProvider'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { TrackCell } from '../../../UI/TrackCell'\nimport { CharacterAttr } from '../../CharacterAttr'\n\nexport const EdgeTracker: FC = () => {\n  const edgeSessionKey = 'char.edge'\n  const charEdgeAttr = useAttribute<number>(CharacterAttr.edge) || 0\n  const defaultEdge = parseInt(localStorage.getItem(edgeSessionKey) || charEdgeAttr.toString())\n\n  const [curValue, setCurValue] = useState<number>(defaultEdge)\n  const setEdge = (value: number) => {\n    setCurValue(value)\n    localStorage.setItem(edgeSessionKey, value.toString())\n  }\n\n  const onToggleCell = (value: number) => {\n    if (value === curValue) {\n      setEdge(value - 1)\n    } else {\n      setEdge(value)\n    }\n  }\n\n  const onReset = () => {\n    setEdge(charEdgeAttr)\n  }\n\n  return (\n    <InfoSection>\n      <Box>\n        <Typography variant=\"h6\" sx={{ display: 'inline', marginRight: 1 }}>Edge</Typography>\n        <Chip onClick={onReset} label=\"Reset\" size=\"small\" variant=\"outlined\" sx={{ verticalAlign: 'text-bottom' }} />\n      </Box>\n      <Box sx={{ display: 'flex', textAlign: 'center', gap: 0.5 }}>\n        <Box sx={{ flexGrow: 0.5 }}>\n          <TrackCell onClick={() => setEdge(0)}>0</TrackCell>\n        </Box>\n        {new Array(7).fill(null).map((_, index) => (\n          <Box key={index} sx={{ flexGrow: 1 }}>\n            <TrackCell filled={index < curValue} onClick={() => onToggleCell(index + 1)}>\n              {index + 1}\n            </TrackCell>\n          </Box>\n        ))}\n      </Box>\n    </InfoSection>\n  )\n}\n","import { Box, Paper, Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { formatSource } from '../System/Source'\nimport { Stat } from '../UI/StatBlock'\nimport { QualityData } from './QualityData'\n\ninterface ContactListProps {\n  qualities: QualityData[]\n}\n\nexport const QualitiesList: FC<ContactListProps> = ({\n  qualities,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', gap: 1, flexDirection: 'column' }}>\n      {qualities.map(quality => (\n        <Box key={quality.name}>\n          <QualitiesListItem quality={quality} />\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\ninterface QualitiesListItemProps {\n  quality: QualityData\n}\n\nexport const QualitiesListItem: FC<QualitiesListItemProps> = ({\n  quality,\n}) => {\n  return (\n    <Paper variant=\"outlined\" sx={{ padding: 1, display: 'flex' }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"body1\">{quality.name}</Typography>\n        <Typography variant=\"caption\">{quality.description}</Typography>\n        <Typography variant=\"caption\">{quality.gameEffect}</Typography>\n      </Box>\n\n      <Box>\n        {quality.source && <Stat name=\"Source\" value={formatSource(quality.source)} />}\n        {quality.bonus && <Stat name=\"Bonus\" value={quality.bonus} />}\n        {quality.cost && <Stat name=\"Cost\" value={quality.cost} />}\n        {quality.level && <Stat name=\"Level\" value={quality.level} />}\n      </Box>\n    </Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { QualitiesList } from '../../../Qualities/QualitiesList'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { useCharacter } from '../../CharacterProvider'\n\nexport const QualitiesSection: FC = () => {\n  const character = useCharacter()\n  if (!character) return null\n\n  return <InfoSection>\n    <Typography variant={'h6'}>Qualities</Typography>\n    <QualitiesList qualities={character.qualities} />\n  </InfoSection>\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { ActiveSkillData } from './ActiveSkillData'\nimport { formatSkill } from './ActiveSkillId'\n\ninterface SkillListProps {\n  skills: ActiveSkillData[]\n}\n\nexport const ActiveSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Rank</TableCell>\n          <TableCell>Attr</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => (\n          <SkillListRow key={skill.skillId} skill={skill} />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: ActiveSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.skillId}>\n      <TableCell>\n        <div>{formatSkill(skill.skillId)}</div>\n        {skill.speciality && <div>(S. {skill.speciality})</div>}\n        {skill.expertise && <div>(E. {skill.expertise})</div>}\n      </TableCell>\n      <TableCell>\n        {skill.rank}\n      </TableCell>\n      <TableCell>\n        {skill.attr}\n        {skill.altAttr && `/${skill.altAttr}`}\n      </TableCell>\n    </TableRow>\n  )\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { KnowledgeSkillData } from './KnowledgeSkillData'\n\ninterface SkillListProps {\n  skills: KnowledgeSkillData[]\n}\n\nexport const KnowledgeSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => <SkillListRow key={skill.name} skill={skill} />)}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: KnowledgeSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.name}>\n      <TableCell colSpan={3}>{skill.name}</TableCell>\n    </TableRow>\n  )\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { LanguageSkillData } from './LanguageSkillData'\n\ninterface SkillListProps {\n  skills: LanguageSkillData[]\n}\n\nexport const LanguageSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Rank</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => (\n          <SkillListRow key={skill.name} skill={skill} />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: LanguageSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.name}>\n      <TableCell>{skill.name}</TableCell>\n      <TableCell>{skill.rank}</TableCell>\n    </TableRow>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { ActiveSkillData } from '../../../System/Skill/ActiveSkill/ActiveSkillData'\nimport { ActiveSkillList } from '../../../System/Skill/ActiveSkill/ActiveSkillList'\nimport { KnowledgeSkillData } from '../../../System/Skill/KnowledgeSkill/KnowledgeSkillData'\nimport { KnowledgeSkillList } from '../../../System/Skill/KnowledgeSkill/KnowledgeSkillList'\nimport { LanguageSkillData } from '../../../System/Skill/LanguageSkill/LanguageSkillData'\nimport { LanguageSkillList } from '../../../System/Skill/LanguageSkill/LanguageSkillList'\nimport { SkillType } from '../../../System/Skill/SkillData'\nimport { InfoSection } from '../../../UI/InfoBlock/InfoSection'\nimport { useCharacter } from '../../CharacterProvider'\n\nexport const SkillSection: FC = () => {\n  const character = useCharacter()\n  if (!character) return null\n\n  const activeSkills = character.skills\n    .filter(skill => skill.type === SkillType.active)\n    .map(skill => skill as ActiveSkillData)\n\n  const languageSkills = character.skills\n    .filter(skill => skill.type === SkillType.language)\n    .map(skill => skill as LanguageSkillData)\n\n  const knowledgeSkills = character.skills\n    .filter(skill => skill.type === SkillType.knowledge)\n    .map(skill => skill as KnowledgeSkillData)\n\n  return <InfoSection>\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Skills</Typography>\n        <ActiveSkillList skills={activeSkills} />\n      </Box>\n\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Languages</Typography>\n        <LanguageSkillList skills={languageSkills} />\n      </Box>\n\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Knowledge</Typography>\n        <KnowledgeSkillList skills={knowledgeSkills} />\n      </Box>\n    </Box>\n  </InfoSection>\n}\n","import { useMediaQuery, useTheme } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport { FC } from 'react'\n\nimport { formatNuyen, useNuyenBalance } from '../../System/Nuyen'\nimport { InfoBlock } from '../../UI/InfoBlock/InfoBlock'\nimport { Stat } from '../../UI/StatBlock'\nimport { useCharacter } from '../CharacterProvider'\nimport { CombatArea } from './CombatArea'\nimport { AttributesSection } from './Sections/AttributesSection'\nimport { DicePoolsSection } from './Sections/DicePoolsSection'\nimport { EdgeTracker } from './Sections/EdgeTracker'\nimport { QualitiesSection } from './Sections/QualitiesSection'\nimport { SkillSection } from './Sections/SkillSection'\n\nexport const CharacterInfo: FC = () => {\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n  const character = useCharacter()\n  const nuyenBalance = useNuyenBalance()\n\n  if (!character) return null\n\n  const bio = character.bio\n  const karma: number = character.karma.reduce((sum, entry) => sum + entry.value, 0)\n\n  const blockTitleRight = <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n    <Stat name=\"Nuyen\" value={formatNuyen(nuyenBalance)} />\n    <Stat name=\"Karma\" value={karma} />\n  </Box>\n\n  return (\n    <InfoBlock\n      title={bio.alias || bio.name} subtitle={bio.metaType} titleFontSize={50}\n      titleRight={blockTitleRight}\n    >\n      <AttributesSection />\n      <EdgeTracker />\n\n      <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'row-reverse' : 'column' }}>\n        <CombatArea />\n\n        <Box sx={{ flexGrow: 1 }}>\n          <DicePoolsSection />\n          <SkillSection />\n          <QualitiesSection />\n        </Box>\n      </Box>\n    </InfoBlock>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport React, { FC } from 'react'\n\nimport { InfoBlock } from '../UI/InfoBlock/InfoBlock'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\nimport { Stat } from '../UI/StatBlock'\nimport { ContactData } from './ContactData'\n\ninterface ContactInfoProps {\n  contact: ContactData\n}\n\nexport const ContactInfo: FC<ContactInfoProps> = ({\n  contact,\n}) => {\n  const blockTitleRight = <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n    <Stat name=\"Loyalty\" value={contact.loyalty} />\n    <Stat name=\"Connection\" value={contact.connection} />\n  </Box>\n\n  return (\n    <InfoBlock title={contact.name} titleRight={blockTitleRight}>\n      {contact.description && (\n        <InfoSection>\n          <Typography>{contact.description}</Typography>\n        </InfoSection>\n      )}\n    </InfoBlock>\n  )\n}\n","import { Box } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { ContactData } from './ContactData'\nimport { ContactInfo } from './ContactInfo'\n\ninterface ContactListProps {\n  contacts: ContactData[]\n}\n\nexport const ContactList: FC<ContactListProps> = ({\n  contacts,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      {contacts.map(contact => (\n        <ContactInfo key={contact.name} contact={contact} />\n      ))}\n    </Box>\n  )\n}\n","import { BaseGearData, GearData, GearType } from '../GearData'\nimport { SinAttr } from './SinAttr'\n\nexport interface SinData extends BaseGearData {\n  gearType: GearType.sin\n  attributes: {\n    [SinAttr.rating]: number\n  }\n}\n\nexport function isSin (gear: GearData): gear is SinData {\n  return gear.gearType === GearType.sin\n}\n","import { Box, Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { CharacterInfo } from '../../Character/InfoBlock/CharacterInfo'\nimport { ContactList } from '../../Contacts/ContactList'\nimport { useAllGear } from '../../Gear/GearContext'\nimport { GearList } from '../../Gear/GearList'\nimport { isSin } from '../../Gear/License/SinData'\n\nexport const CharacterInfoPage: FC = () => {\n  const character = useCharacter()\n  const sins = useAllGear().filter(isSin)\n  if (!character) return null\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      <CharacterInfo />\n\n      <Box>\n        <Typography variant={'h4'}>SINs</Typography>\n        <GearList gear={sins} />\n      </Box>\n\n      <Box>\n        <Typography variant={'h4'}>Contacts</Typography>\n        <ContactList contacts={character.contacts} />\n      </Box>\n    </Box>\n  )\n}\n","import { Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { parseISO } from 'date-fns'\nimport { FC } from 'react'\n\nimport { formatDate } from '../Helpers'\nimport { BalanceLog } from '../System/BalanceLog'\n\ninterface BalanceLogTableProps {\n  log: BalanceLog\n\n  formatValue? (value: number): string\n}\n\nexport const BalanceLogTable: FC<BalanceLogTableProps> = ({\n  log,\n  formatValue = (value) => value,\n}) => {\n  let runningTotal = 0\n\n  const logRows = log\n    .sort((a, b) => parseISO(a.date).getTime() - parseISO(b.date).getTime())\n    .map(entry => (\n      <TableRow key={entry.id}>\n        <TableCell>{formatDate(entry.date)}</TableCell>\n        <TableCell>{entry.note}</TableCell>\n        <TableCell align=\"right\">{formatValue(entry.value)}</TableCell>\n        <TableCell align=\"right\">{formatValue(runningTotal += entry.value)}</TableCell>\n      </TableRow>\n    ))\n\n  logRows.reverse()\n\n  return (\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Note</TableCell>\n            <TableCell align=\"right\">Amount</TableCell>\n            <TableCell align=\"right\">Balance</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {logRows}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n","import { Paper } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { BalanceLogTable } from '../../UI/BalanceLogTable'\n\nexport const KarmaPage: FC = () => {\n  const character = useCharacter()\n  if (!character) return null\n\n  return (\n    <Paper>\n      <BalanceLogTable log={character.karma} />\n    </Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { useAllGear } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\n\nexport const MiscGearPage: FC = () => {\n  const excludedGear: GearType[] = [\n    GearType.weapon,\n    GearType.vehicle,\n    GearType.augment,\n    GearType.sin,\n    GearType.license,\n  ]\n\n  const otherGear = useAllGear()\n    .filter(gear => !gear.attachedTo)\n    .filter(gear => !excludedGear.includes(gear.gearType))\n\n  return (\n    <>\n      <Typography variant={'h4'}>Other Gear</Typography>\n      <GearList gear={otherGear} />\n    </>\n  )\n}\n","import { Paper } from '@material-ui/core'\nimport { FC } from 'react'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { useAllGear } from '../../Gear/GearContext'\nimport { formatNuyen, useNuyenBalance } from '../../System/Nuyen'\nimport { BalanceLogTable } from '../../UI/BalanceLogTable'\nimport { Stat, StatBlock } from '../../UI/StatBlock'\n\nexport const NuyenPage: FC = () => {\n  const character = useCharacter()\n  const nuyenBalance = useNuyenBalance()\n  const gear = useAllGear()\n  if (!character) return null\n\n  const gearTotal = gear\n    .filter(gear => typeof gear.cost === 'number')\n    .map(gear => gear.cost as number)\n    .reduce((sum, cost) => sum + cost, 0)\n\n  return (\n    <Paper>\n      <StatBlock>\n        <Stat name={'Total Balance'} value={formatNuyen(nuyenBalance)} />\n        <Stat name={'Gear Total'} value={formatNuyen(gearTotal)} />\n        <Stat name={'Net Worth'} value={formatNuyen(gearTotal + nuyenBalance)} />\n      </StatBlock>\n      <BalanceLogTable log={character.nuyen} formatValue={formatNuyen} />\n    </Paper>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\nimport { VehicleData } from '../../Gear/Vehicles/VehicleData'\n\nexport const VehiclesPage: FC = () => {\n  const vehicles = useGearOfType<VehicleData>(GearType.vehicle)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Vehicles</Typography>\n      <GearList gear={vehicles} />\n    </>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React, { FC } from 'react'\n\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\nimport { WeaponData } from '../../Gear/Weapons/WeaponData'\n\nexport const WeaponsPage: FC = () => {\n  const weapons = useGearOfType<WeaponData>(GearType.weapon)\n    .filter(gear => !gear.attachedTo)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Weapons</Typography>\n      <GearList gear={weapons} />\n    </>\n  )\n}\n","import { Paper } from '@material-ui/core'\nimport React, { FC, useEffect, useState } from 'react'\nimport { Redirect, Route, Switch, useHistory, useParams, useRouteMatch } from 'react-router-dom'\n\nimport { CharacterData } from '../Character/CharacterData'\nimport { CharacterProvider } from '../Character/CharacterProvider'\nimport { loadCharacter } from '../StorageService'\nimport { CharacterNavDrawer } from '../UI/NavDrawer/CharacterNavDrawer'\nimport { AugmentsPage } from './Character/AugmentsPage'\nimport { CharacterInfoPage } from './Character/CharacterInfoPage'\nimport { KarmaPage } from './Character/KarmaPage'\nimport { MiscGearPage } from './Character/MiscGearPage'\nimport { NuyenPage } from './Character/NuyenPage'\nimport { VehiclesPage } from './Character/VehiclesPage'\nimport { WeaponsPage } from './Character/WeaponsPage'\nimport { RootLayout } from './RootLayout'\n\nexport const CharacterPage: FC = () => {\n  const history = useHistory()\n  const { path } = useRouteMatch()\n  const { characterId } = useParams<{ characterId: string }>()\n  const [character, setCharacter] = useState<CharacterData | null>(null)\n\n  useEffect(() => {\n    const character: CharacterData | null = loadCharacter(characterId)\n    if (character === null) history.push('/')\n    setCharacter(character)\n  }, [history, characterId])\n\n  if (!character) { return <Paper>Loading...</Paper>}\n\n  return (\n    <CharacterProvider character={character}>\n      <RootLayout NavDrawer={CharacterNavDrawer}>\n        <Switch>\n          <Route path={`${path}/weapons`} component={WeaponsPage} />\n          <Route path={`${path}/vehicles`} component={VehiclesPage} />\n          <Route path={`${path}/augments`} component={AugmentsPage} />\n          <Route path={`${path}/misc`} component={MiscGearPage} />\n          <Route path={`${path}/karma`} component={KarmaPage} />\n          <Route path={`${path}/nuyen`} component={NuyenPage} />\n          <Route path={`${path}/`} component={CharacterInfoPage} />\n          <Route><Redirect to=\"/\" /></Route>\n        </Switch>\n      </RootLayout>\n    </CharacterProvider>\n  )\n}\n","import React, { FC } from 'react'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\n\nimport { AppThemeProvider } from './AppThemeProvider'\nimport { CharacterListPage } from './Pages/CharacterListPage'\nimport { CharacterPage } from './Pages/CharacterPage'\nimport { loadCharacters } from './StorageService'\n\nloadCharacters()\n\nconst App: FC = () => {\n  return (\n    <HashRouter>\n      <AppThemeProvider>\n        <Switch>\n          <Route path=\"/characters\" component={CharacterListPage} />\n          <Route path=\"/:characterId\" component={CharacterPage} />\n          <Route><Redirect to=\"/characters\" /></Route>\n        </Switch>\n      </AppThemeProvider>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DamageTrack\":\"DamageTrack_DamageTrack__3Cfmx\"};"],"sourceRoot":""}