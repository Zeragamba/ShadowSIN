{"version":3,"sources":["System/Damage/DamageTrack.module.scss","AppThemeProvider.tsx","Api/ServerApi.ts","Auth/AuthApi.ts","Auth/AuthProvider.tsx","Auth/Login/LoginForm.tsx","Auth/Login/SignupFormState.ts","Auth/Login/SignupForm.tsx","Auth/Login/LoginDialog.tsx","Helpers.ts","UI/AppBar.tsx","Gear/Effect.ts","Pages/RootLayout.tsx","Gear/Augments/AugmentAttr.ts","Gear/GearData.ts","Gear/Augments/AugmentData.ts","System/Attribute.ts","Gear/GearContext.tsx","System/AttributeProvider.tsx","System/Damage/DamageProvider.tsx","System/Damage/DamageType.ts","System/Skill/SkillData.ts","System/Skill/ActiveSkill/ActiveSkillData.ts","Character/CharacterAttr.tsx","Character/CharacterProvider.tsx","Gear/Weapons/PistolSvg.tsx","Character/AwakenedType.ts","Character/Metatypes.ts","UI/NavDrawer/index.tsx","UI/NavDrawer/DefaultNavDrawer.tsx","UI/NavDrawer/CharacterNavDrawer.tsx","UI/Incrementor.tsx","Character/CharacterBuilder/Attributes/metatypeMaximums.ts","Character/CharacterBuilder/Attributes/AttributesTable.tsx","Character/CharacterBuilder/BioSection.tsx","Character/CharacterBuilder/Priorities/Priorities.ts","System/Nuyen.ts","Character/CharacterBuilder/Priorities/PriorityRow.tsx","Character/CharacterBuilder/Priorities/PrioritiesTable.tsx","Character/CharacterBuilder/BuilderPage.tsx","Api/Model.ts","Character/Migrations/1-Inital.ts","Gear/License/LicenseAttr.ts","Gear/License/SinAttr.ts","Gear/OtherGearData.ts","Gear/Rcc/RccAttr.tsx","Gear/Software/Autosoft/AutosoftAttr.ts","Gear/Vehicles/VehicleAttr.tsx","Gear/Vehicles/VehicleModData.ts","Gear/Weapons/WeaponAttr.ts","Gear/Weapons/WeaponModData.ts","System/Skill/ActiveSkill/ActiveSkillId.ts","Character/Migrations/index.ts","data/Artemis.ts","Character/CharacterPoolTypes.tsx","Gear/Armor/ArmorAttr.ts","Gear/Commlink/CommlinkAttr.ts","Gear/Kit/KitAttr.ts","Gear/Kit/KitType.ts","data/Silicus.ts","StorageService.ts","Pages/CharacterListPage.tsx","System/Source.ts","UI/InfoBlock/SimpleInfoBlock.tsx","UI/StatBlock.tsx","Gear/Availability.ts","UI/AttributeBlock.tsx","UI/InfoBlock/InfoBlock.tsx","Gear/Software/Autosoft/AutosoftData.ts","Gear/Vehicles/DicePools.tsx","UI/InfoBlock/InfoSection.tsx","Gear/GearInfoBlock.tsx","Gear/License/LicenseInfo.tsx","Gear/License/SinInfo.tsx","Gear/Rcc/RccInfo.tsx","UI/TrackCell.tsx","System/Damage/DamageTrack.tsx","System/DefenseRating.tsx","System/Initiative.tsx","UI/DicePool.tsx","Gear/GearDicePools.tsx","Gear/Software/Autosoft/AutosoftProvider.tsx","Gear/Software/Autosoft/AutosoftsList.tsx","Gear/Weapons/DicePools.tsx","Gear/Vehicles/VehicleInfo.tsx","Gear/Weapons/WeaponInfo.tsx","Gear/GearInfo.tsx","Gear/GearList.tsx","Pages/Character/AugmentsPage.tsx","Contacts/ContactInfo.tsx","Contacts/ContactList.tsx","Gear/License/SinData.ts","Character/CharacterInfo/AttributesSection.tsx","Character/CharacterInfo/CombatArea.tsx","Character/CharacterInfo/DicePoolsSection.tsx","Character/CharacterInfo/EdgeTracker.tsx","Qualities/QualitiesList.tsx","Character/CharacterInfo/QualitiesSection.tsx","System/Skill/ActiveSkill/ActiveSkillList.tsx","System/Skill/KnowledgeSkill/KnowledgeSkillList.tsx","System/Skill/LanguageSkill/LanguageSkillList.tsx","Character/CharacterInfo/SkillSection.tsx","Character/CharacterInfo/CharacterInfo.tsx","Pages/Character/CharacterInfoPage.tsx","UI/BalanceLogTable.tsx","Pages/Character/KarmaPage.tsx","Pages/Character/MiscGearPage.tsx","Pages/Character/NuyenPage.tsx","Pages/Character/VehiclesPage.tsx","Pages/Character/WeaponsPage.tsx","Pages/CharacterPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","displayFontFamily","theme","createTheme","palette","mode","primary","main","secondary","text","background","default","typography","h1","fontFamily","h2","h3","h4","h5","h6","AppThemeProvider","children","StyledEngineProvider","injectFirst","ThemeProvider","ServerApi","path","config","this","axiosInstance","get","then","res","data","catch","error","handleError","post","axios","isAxiosError","response","undefined","err","create","baseURL","process","withCredentials","AuthApi","username","password","user","AuthContext","createContext","fetching","login","Error","signup","fetchUser","logout","AuthProvider","useState","setUser","setFetching","finally","state","useEffect","console","Provider","value","useAuth","useContext","LoginForm","onLogin","setUsername","setPassword","authorizing","setAuthorizing","message","setMessage","onSubmit","isApiError","msg","TextField","autoFocus","label","fullWidth","sx","marginBottom","variant","onChange","e","target","disabled","type","Typography","textAlign","Button","onClick","defaultState","dirty","confirmPassword","valid","submitting","reducer","action","validateUsername","validatePassword","validateConfirmPassword","trim","length","SignupForm","onSignup","useReducer","form","dispatch","onBlur","LoginDialog","open","onClose","activeTab","setActiveTab","Dialog","DialogContent","padding","width","Box","display","gap","flexDirection","Tabs","_","orientation","flexGrow","Tab","noOp","EffectType","AppBar","withMenu","openMenu","fetchingUser","currentUser","position","top","Toolbar","IconButton","size","edge","color","mr","component","CircularProgress","UserMenu","menuOpen","setMenuOpen","anchorEl","setAnchorEl","event","currentTarget","id","MenuItem","LoginButton","dialogOpen","setDialogOpen","RootLayout","NavDrawer","drawerOpen","setDrawerOpen","Paper","gridTemplateRows","bgcolor","height","overflow","square","closeDrawer","maxWidth","margin","isAttrBonus","effect","attrBonus","isAttrOverride","attrOverride","isInitBonus","initBonus","isSkillBonus","skillBonus","isDefRatingBonus","defRatingBonus","AugmentAttr","GearType","AugmentType","AugmentSlot","AugmentGrade","collectGearEffects","gear","filter","effects","flatMap","attributeNames","registerAttrNames","names","formatAttr","calculateAttributes","attrs","adjustedAttrs","Object","entries","forEach","attr","calculateAttribute","overrides","map","Math","max","reduce","sum","bonus","isAugment","gearType","augment","grade","rating","slot","essenceCost","capacity","capacityCost","GearContext","GearProvider","useAllGear","useGear","gearId","allGear","find","useFindGear","foundGear","useFilterGear","useAttachedGear","attachedTo","useGearOfType","AttributeContext","AttributeProvider","attributes","parentAttrs","useAttributes","keys","allAttributes","filtered","key","useAttribute","DamageType","SkillType","DamageContext","DamageProvider","dmgSessionKey","setDmgValue","parseInt","localStorage","getItem","damages","setValue","setItem","toString","isActiveSkill","skill","active","CharacterAttr","hasSpecialty","specialty","speciality","toLowerCase","hasExpertise","expertise","body","agility","reaction","strength","willpower","logic","intuition","charisma","essence","magic","resonance","CharacterContext","CharacterProvider","character","characterData","charPhysical","charStun","useCharacter","useCharacterData","useActiveSkill","skillId","skills","rank","AwakenedType","Metatype","PistolSvg","version","xmlns","viewBox","enableBackground","d","NavButton","icon","routeTo","history","useHistory","ListItem","button","push","ListItemIcon","SvgIcon","ListItemText","DefaultNavDrawer","Drawer","anchor","List","faUsers","CharacterNavDrawer","faUser","name","faCarAlt","faCogs","faArchive","Divider","faYenSign","faAward","Incrementor","min","Infinity","Remove","fontSize","Add","metatypeMaximums","Dwarf","Elf","Human","Ork","Troll","defaultAttributes","AttributesTable","metatype","awakened","attributePoints","adjustmentPoints","attributeMaximums","adjPointsSpent","setAdjPointsSpent","pointsSpent","setPointsSpent","karmaPoints","setKarmaPoints","totalAdjPointsSpent","values","points","totalPointsSpent","base","Technomancer","Aspected","Mundane","totalPreKarma","mergePointLists","totalKarmaCost","cost","total","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","attribute","includes","lists","PriorityStat","BioSection","bio","metatypes","magicPriority","showMetaTypeWarning","log","showAwakenedWarning","Stack","direction","flexWrap","alias","select","focused","helperText","role","ethnicity","age","gender","weight","priorityValues","skillPoints","nuyen","nuyenFormatter","Intl","NumberFormat","formatNuyen","format","useNuyenBalance","sort","a","b","parseISO","date","getTime","entry","PriorityRow","level","selectedType","onSelect","backgroundColor","selected","Full","Mystic","Adept","PriorityCell","className","PrioritiesTable","selectedPriorities","setSelectedPriorities","onPriorityChange","stat","priorities","priority","oldLevel","levelValues","toPriorityValues","defaultCharacter","dataVersion","karma","heat","reputation","lifestyle","prepaid","upkeep","qualities","contacts","BuilderPage","setPriorities","setCharacterData","nextRecordId","uuid","LicenseAttr","SinAttr","OtherGearAttr","RccAttr","AutosoftAttr","VehicleAttr","ModType","WeaponAttr","WeaponModAttr","WeaponModSlot","ActiveSkillId","migrateCharacter","migrations","migration","run","deviceRating","dataProcessing","firewall","weapon","handling","accel","speedInterval","topSpeed","armor","pilot","sensor","seat","dv","attackRatings","modes","ammo","maxRange","FirearmSpecialties","skillNames","athletics","biotech","closeCombat","cracking","electronics","engineering","firearms","perception","piloting","stealth","formatSkill","Artemis","userId","updatedAt","Date","toISOString","createdAt","note","connection","loyalty","description","altAttr","language","knowledge","source","book","page","gameEffect","usedIds","Set","addGear","attachedGear","has","item","add","smartGunIntMod","weaponMod","removable","wirelessBonus","enabled","avail","rarity","license","used","headware","augmentType","controlRig","bioware","specialtyName","submachineGuns","topOrUnder","lightPistols","autosofts","autosoft","rccHeadwear","rcc","slavedAutosofts","soft","fnHar","rifles","stdWeaponMount","vehicleMod","modType","illegal","riggerInterface","sensorArray","vehicle","slavedTo","pilotingSpeciality","rotoDrone","CharacterPoolTypes","ArmorAttr","CommlinkAttr","KitAttr","KitType","crawlerDrone","quantity","alpha","eyeware","other","bodyware","sin","programSlots","medkitRating","Silicus","dicePoolBonus","poolType","barrel","heavyPistols","trasers","dice","dmgResist","beta","delta","defenseBonus","armorMod","kit","medKit","firstAid","characterStorageKey","characterId","charactersStorageKey","loadCharacters","savedCharacters","JSON","stringify","saveCharacter","parse","CharacterListPage","characters","setCharacters","justifyContent","formatSource","SimpleInfoBlock","footer","Chip","marginLeft","verticalAlign","StatBlock","vertical","Stat","toFixed","whiteSpace","formatAvail","AttributeBlock","library","faCaretSquareDown","faCaretSquareRight","AutosoftType","VehiclePoolKeys","InfoBlock","title","titleFontSize","subtitle","titleRight","expanded","defaultExpanded","expandable","setExpanded","elevation","InfoSection","GearInfoBlock","blockTitleRight","Boolean","fontStyle","LicenseInfo","SinInfo","licenses","RccInfo","slavedVehicles","maxSlaved","TrackCell","filled","hovered","setHovered","userSelect","onMouseEnter","onMouseLeave","DamageTrack","current","useDamage","useSetDamage","onToggleCell","minWidth","paddingBottom","styles","Array","fill","index","toggleCell","DamageCell","penalty","floor","CharacterDefRatingStat","VehicleDefRatingStat","InitiativeStat","CharacterHotVrInit","CharacterColdVrInit","DicePools","skillSpecialtyBonus","DicePool","bonuses","groups","dmgPenaltyTypes","skillList","skillIds","useSkills","attrList","dmgPenalty","types","damageData","useDamagePenalty","attrType","g","group","DiceGroupDisplay","marginRight","GearDicePools","AutosoftContext","AutosoftProvider","useAutosoft","AutosoftsList","slavedIds","paddingTop","AutosoftListItem","faBroadcastTower","faSave","WeaponPoolKeys","VehicleResistDmg","poolKey","resistDmg","AutosoftPiloting","evasionAutosoft","evasion","maneuveringAutosoft","maneuvering","diceGroups","pilotEvade","vehiclePhysical","DriverPiloting","pilotingSkill","riggedEvade","RiggedPiloting","VehicleInfo","useTheme","mdScreenOrLarger","useMediaQuery","breakpoints","up","physicalMax","ceil","allAutosofts","BasicAttackPool","specialtyBonus","basicAttack","DroneAttackPool","targetingGroup","weaponName","useTargetingAutosoft","droneAttack","VehicleAttackPool","mountedAttack","RiggedAttackPool","riggedAttack","WeaponInfo","mounted","GearInfo","SimpleGearInfo","GearList","AugmentsPage","augments","ContactInfo","contact","ContactList","isSin","AttributesSection","charAttributes","CombatArea","stunMax","initDice","DicePoolsSection","DodgePool","dodge","ResistDamagePool","ComposurePool","composure","JudgeIntentPool","judgeIntent","MemoryPool","memory","LiftPool","liftCarry","FirstAidPool","firstAidKit","biotechSkill","MedkitPool","EdgeTracker","edgeSessionKey","charEdgeAttr","defaultEdge","curValue","setCurValue","setEdge","QualitiesList","quality","QualitiesSection","ActiveSkillList","SkillListRow","KnowledgeSkillList","colSpan","LanguageSkillList","SkillSection","activeSkills","languageSkills","knowledgeSkills","CharacterInfo","sins","nuyenBalance","CharacterInfoPage","BalanceLogTable","formatValue","runningTotal","logRows","align","reverse","KarmaPage","MiscGearPage","excludedGear","otherGear","NuyenPage","gearTotal","VehiclesPage","vehicles","WeaponsPage","weapons","CharacterPage","useRouteMatch","useParams","setCharacter","loadCharacter","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,YAAc,mC,qJCGnBC,EAAoB,gDAE3BC,EAAQC,YAAY,CACxBC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,KAAM,CACJH,QAAS,WAEXI,WAAY,CACVC,QAAS,YAIbC,WAAY,CACVC,GAAI,CAAEC,WAAYb,GAClBc,GAAI,CAAED,WAAYb,GAClBe,GAAI,CAAEF,WAAYb,GAClBgB,GAAI,CAAEH,WAAYb,GAClBiB,GAAI,CAAEJ,WAAYb,GAClBkB,GAAI,CAAEL,WAAYb,MAITmB,EAAuB,SAAC,GAE9B,IADLC,EACI,EADJA,SAEA,OACE,cAACC,EAAA,EAAD,CAAsBC,aAAW,EAAjC,SACE,cAACC,EAAA,EAAD,CAAetB,MAAOA,EAAtB,SAA8BmB,O,mEChCvBI,EAAb,wFAME,SAAsBC,EAAcC,GAA0C,IAAD,OAC3E,OAAOC,KAAKC,cACTC,IAAIJ,EAAMC,GAAQI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAClCC,OAAM,SAACC,GAAD,OAAW,EAAKC,YAAYD,QATzC,kBAYE,SAAoCT,EAAcO,EAAUN,GAA0C,IAAD,OACnG,OAAOC,KAAKC,cACTQ,KAAKX,EAAMO,EAAMN,GAAQI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QACzCC,OAAM,SAACC,GAAD,OAAW,EAAKC,YAAYD,QAfzC,gEAkBE,WAAqCA,GAArC,oEACOG,IAAMC,aAAaJ,GAD1B,sBACwCA,EADxC,UAEOA,EAAMK,SAFb,sBAE6BL,EAF7B,aAGQA,EAAMK,SAASP,KAHvB,2CAlBF,+EAwBE,SAA0BE,GACxB,YAAmCM,IAA3BN,EAAmBO,QAzB/B,KAAajB,EACII,cAA+BS,IAAMK,OAAO,CACzDC,QAJeC,wBAKfC,iBAAiB,ICNd,IAAMC,EAAU,SACbC,EAAkBC,GACxB,OAAOxB,EACJY,KAAqB,UAAW,CAAEW,WAAUC,aAC5ClB,MAAK,SAAAE,GAAI,OAAIA,EAAKiB,SAJZH,EAAU,SAOdC,EAAkBC,GACvB,OAAOxB,EACJY,KAAqB,SAAU,CAAEW,WAAUC,aAC3ClB,MAAK,SAAAE,GAAI,OAAIA,EAAKiB,SAVZH,EAAU,WAcnB,OAAOtB,EACJY,KAAY,YAfNU,EAAU,WAmBnB,OAAOtB,EAAUK,IAAoB,SAClCC,MAAK,SAAAE,GAAI,OAAIA,EAAKiB,SCLnBC,EAAcC,wBAAgC,CAClDF,KAAM,KACNG,UAAU,EACVC,MAAO,WAAQ,MAAM,IAAIC,MAAM,wBAC/BC,OAAQ,WAAQ,MAAM,IAAID,MAAM,wBAChCE,UAAW,WAAQ,MAAM,IAAIF,MAAM,wBACnCG,OAAQ,WAAQ,MAAM,IAAIH,MAAM,0BAGrBI,EAAmB,SAAC,GAE1B,IADLtC,EACI,EADJA,SAEA,EAAwBuC,mBAAsB,MAA9C,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAAgCD,oBAAkB,GAAlD,mBAAOP,EAAP,KAAiBS,EAAjB,KAgBML,EAAY,WAEhB,OADAK,GAAY,GACLf,IACJhB,MAAK,SAAAmB,GAEJ,OADAW,EAAQX,GACDA,KAERa,SAAQ,kBAAMD,GAAY,OAQzBE,EAA0B,CAC9Bd,OACAG,WACAI,YACAD,OA1Ba,SAACR,EAAkBC,GAChC,OAAOF,EAAeC,EAAUC,GAAUlB,MAAK,SAAAmB,GAE7C,OADAW,EAAQX,GACDA,MAwBTI,MAlCY,SAACN,EAAkBC,GAC/B,OAAOF,EAAcC,EAAUC,GAAUlB,MAAK,SAAAmB,GAE5C,OADAW,EAAQX,GACDA,MAgCTQ,OAXa,WAEb,OADAG,EAAQ,MACDd,MAgBT,OAJAkB,qBAAU,WACRR,IAAYvB,MAAMgC,QAAQ/B,SACzB,IAGD,cAACgB,EAAYgB,SAAb,CAAsBC,MAAOJ,EAA7B,SAAqC3C,KAI5BgD,EAAU,WACrB,OAAOC,qBAAWnB,I,+KCvEPoB,EAAgC,SAAC,GAEvC,IADLC,EACI,EADJA,QAEA,EAAgCZ,mBAAiB,IAAjD,mBAAOZ,EAAP,KAAiByB,EAAjB,KACA,EAAgCb,mBAAiB,IAAjD,mBAAOX,EAAP,KAAiByB,EAAjB,KACA,EAAsCd,oBAAkB,GAAxD,mBAAOe,EAAP,KAAoBC,EAApB,KACA,EAA8BhB,mBAAwB,MAAtD,mBAAOiB,EAAP,KAAgBC,EAAhB,KAEQxB,EAAUe,IAAVf,MAEFyB,EAAW,WACfH,GAAe,GAEftB,EAAMN,EAAUC,GACblB,MAAK,kBAAMyC,OACXtC,OAAM,SAACC,GACNyC,GAAe,GAEXnD,EAAUuD,WAAW7C,GACvB2C,EAAW3C,EAAM8C,MAEjBf,QAAQ/B,MAAMA,GACd2C,EAAW,qBAKnB,OAAO,uBAAMC,SAAUA,EAAhB,UACL,cAACG,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,WACNC,WAAS,EACTC,GAAI,CAAEC,aAAc,GACpBC,QAAQ,WACRpB,MAAOpB,EACPyC,SAAU,SAACC,GAAD,OAAsCjB,EAAYiB,EAAEC,OAAOvB,QACrEwB,SAAUjB,IAGZ,cAACO,EAAA,EAAD,CACEE,MAAM,WACNC,WAAS,EACTQ,KAAK,WACLL,QAAQ,WACRF,GAAI,CAAEC,aAAc,GACpBnB,MAAOnB,EACPwC,SAAU,SAACC,GAAD,OAAsChB,EAAYgB,EAAEC,OAAOvB,QACrEwB,SAAUjB,IAGXE,GACC,cAACiB,EAAA,EAAD,CAAYR,GAAI,CAAES,UAAW,SAAUR,aAAc,GAArD,SAA2DV,IAG7D,cAACmB,EAAA,EAAD,CAAQH,KAAK,SAASL,QAAQ,YAAYS,QAASlB,EAAUa,SAAUjB,EAAaU,WAAS,EAA7F,SACGV,EAAc,gBAAkB,cCzC1BuB,EAA0B,CACrClD,SAAU,CACRmD,OAAO,EACPhE,MAAO,KACPiC,MAAO,IAGTgC,gBAAiB,CACfD,OAAO,EACPhE,MAAO,KACPiC,MAAO,IAGTnB,SAAU,CACRkD,OAAO,EACPhE,MAAO,KACPiC,MAAO,IAGT+B,OAAO,EACPE,OAAO,EACPC,YAAY,EACZnE,MAAO,MAaHoE,GAA0C,SAACvC,EAAOwC,GACtD,OAAQA,EAAOX,MACb,IAAK,cACH,OAAO,2BACF7B,GADL,IAEEhB,SAAS,2BACJgB,EAAMhB,UADH,IAENb,MAAOsE,GAAiBD,EAAOpC,OAC/BA,MAAOoC,EAAOpC,UAGpB,IAAK,eACH,OAAO,2BACFJ,GADL,IAEEhB,SAAS,2BACJgB,EAAMhB,UADH,IAENmD,OAAO,MAGb,IAAK,cACH,OAAO,2BACFnC,GADL,IAEEf,SAAS,2BACJe,EAAMf,UADH,IAENmB,MAAOoC,EAAOpC,MACdjC,MAAOuE,GAAiBF,EAAOpC,WAGrC,IAAK,eACH,OAAO,2BACFJ,GADL,IAEEf,SAAS,2BACJe,EAAMf,UADH,IAENkD,OAAO,MAGb,IAAK,qBACH,OAAO,2BACFnC,GADL,IAEEoC,gBAAgB,2BACXpC,EAAMoC,iBADI,IAEbhC,MAAOoC,EAAOpC,MACdjC,MAAOwE,GAAwB3C,EAAMf,SAASmB,MAAOoC,EAAOpC,WAGlE,IAAK,sBACH,OAAO,2BACFJ,GADL,IAEEoC,gBAAgB,2BACXpC,EAAMoC,iBADI,IAEbD,OAAO,MAGb,IAAK,SACH,OAAO,2BACFnC,GADL,IAEEsC,YAAY,EACZnE,MAAO,OAEX,IAAK,QACH,OAAO,2BACF6B,GADL,IAEEsC,YAAY,EACZnE,MAAOqE,EAAOrE,QAElB,QACE,OAAO6B,IAIb,SAASyC,GAAkBzD,GACzB,OAAKA,GAAgC,KAApBA,EAAS4D,OAGnB,KAFE,uBAKX,SAASF,GAAkBzD,GACzB,OAAKA,GAAyB,KAAbA,EAGbA,EAAS4D,QAAU,GACd,6CAEF,KALE,uBAQX,SAASF,GAAyBP,EAAyBnD,GACzD,OAAImD,IAAoBnD,EACf,yBAEF,KAGF,IC9IM6D,GAAkC,SAAC,GAEzC,IADLC,EACI,EADJA,SAEA,ED4IOC,qBAAWT,GAASL,GC5I3B,mBAAOe,EAAP,KAAaC,EAAb,KAEQ1D,EAAWa,IAAXb,OAEFuB,EAAW,WACfmC,EAAS,CAAErB,KAAM,WAEjBrC,EAAOyD,EAAKjE,SAASoB,MAAO6C,EAAKhE,SAASmB,OACvCrC,MAAK,kBAAMgF,OACX7E,OAAM,SAACC,GACFV,EAAUuD,WAAW7C,GACvB+E,EAAS,CAAErB,KAAM,QAAS1D,MAAOA,EAAM8C,OAEvCf,QAAQ/B,MAAMA,GACd+E,EAAS,CAAErB,KAAM,QAAS1D,MAAO,sBAKzC,OAAO,uBAAM4C,SAAUA,EAAhB,UACL,cAACG,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,WACNC,WAAS,EACTC,GAAI,CAAEC,aAAc,GACpBC,QAAQ,WACRpB,MAAO6C,EAAKjE,SAASoB,MACrB+C,OAAQ,kBAAMD,EAAS,CAAErB,KAAM,kBAC/BJ,SAAU,SAACC,GAAD,OAAsCwB,EAAS,CACvDrB,KAAM,cACNzB,MAAOsB,EAAEC,OAAOvB,SAElBwB,SAAUqB,EAAKX,aAGhBW,EAAKjE,SAASmD,OAASc,EAAKjE,SAASb,OACpC,cAAC2D,EAAA,EAAD,CAAYR,GAAI,CAAEC,aAAc,GAAhC,SAAsC0B,EAAKjE,SAASb,QAGtD,cAAC+C,EAAA,EAAD,CACEE,MAAM,WACNC,WAAS,EACTQ,KAAK,WACLL,QAAQ,WACRF,GAAI,CAAEC,aAAc,GACpBnB,MAAO6C,EAAKhE,SAASmB,MACrB+C,OAAQ,kBAAMD,EAAS,CAAErB,KAAM,kBAC/BJ,SAAU,SAACC,GAAD,OAAsCwB,EAAS,CACvDrB,KAAM,cACNzB,MAAOsB,EAAEC,OAAOvB,SAElBwB,SAAUqB,EAAKX,aAGhBW,EAAKhE,SAASkD,OAASc,EAAKhE,SAASd,OACpC,cAAC2D,EAAA,EAAD,CAAYR,GAAI,CAAEC,aAAc,GAAhC,SAAsC0B,EAAKhE,SAASd,QAGtD,cAAC+C,EAAA,EAAD,CACEE,MAAM,mBACNC,WAAS,EACTQ,KAAK,WACLL,QAAQ,WACRF,GAAI,CAAEC,aAAc,GACpBnB,MAAO6C,EAAKb,gBAAgBhC,MAC5B+C,OAAQ,kBAAMD,EAAS,CAAErB,KAAM,yBAC/BJ,SAAU,SAACC,GAAD,OAAsCwB,EAAS,CACvDrB,KAAM,qBACNzB,MAAOsB,EAAEC,OAAOvB,SAElBwB,SAAUqB,EAAKX,aAGhBW,EAAKb,gBAAgBD,OAASc,EAAKb,gBAAgBjE,OAClD,cAAC2D,EAAA,EAAD,CAAYR,GAAI,CAAEC,aAAc,GAAhC,SAAsC0B,EAAKb,gBAAgBjE,QAG5D8E,EAAK9E,OACJ,cAAC2D,EAAA,EAAD,CAAYR,GAAI,CAAES,UAAW,SAAUR,aAAc,GAArD,SAA2D0B,EAAK9E,QAGlE,cAAC6D,EAAA,EAAD,CAAQH,KAAK,SAASL,QAAQ,YAAYS,QAASlB,EAAUa,SAAUqB,EAAKX,WAAYjB,WAAS,EAAjG,SACG4B,EAAKX,WAAa,iBAAmB,cCpF/Bc,GAAoC,SAAC,GAG3C,IAAD,IAFJC,YAEI,SADJC,EACI,EADJA,QAEA,EAAkC1D,mBAAiB,SAAnD,mBAAO2D,EAAP,KAAkBC,EAAlB,KAEA,OACE,cAACC,EAAA,EAAD,CAAQJ,KAAMA,EAAd,SACE,cAACK,EAAA,EAAD,CAAepC,GAAI,CAAEqC,QAAS,EAAGC,MAAO,KAAxC,SACE,eAACC,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQC,IAAK,GAAjC,UACE,eAACF,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQE,cAAe,UAA3C,UACE,eAACC,EAAA,EAAD,CACE7D,MAAOmD,EACP9B,SAAU,SAACyC,EAAG9D,GAAJ,OAAcoD,EAAapD,IACrC+D,YAAY,WACZ7C,GAAI,CAAE8C,SAAU,GAJlB,UAME,cAACC,EAAA,EAAD,CAAKjD,MAAM,QAAQhB,MAAM,UACzB,cAACiE,EAAA,EAAD,CAAKjD,MAAM,UAAUhB,MAAM,cAE7B,cAAC4B,EAAA,EAAD,CAAQC,QAASqB,EAAS9B,QAAQ,WAAlC,uBAGF,eAACqC,EAAA,EAAD,CAAKvC,GAAI,CAAE8C,SAAU,GAArB,UACiB,UAAdb,GAAyB,cAAC,EAAD,CAAW/C,QAAS8C,IAC/B,WAAdC,GAA0B,cAAC,GAAD,CAAYR,SAAUO,e,oBCnChDgB,GAAO,aCoBb,ICnBKC,GDmBCC,GAA0B,SAAC,GAGjC,IAFLC,EAEI,EAFJA,SAEI,IADJC,gBACI,MADOJ,GACP,EACJ,EAAsDjE,IAApCsE,EAAlB,EAAQtF,SAA8BuF,EAAtC,EAAgC1F,KAEhC,OACE,cAAC,IAAD,CAAW2F,SAAS,SAASvD,GAAI,CAAEwD,IAAK,GAAxC,SACE,eAACC,EAAA,EAAD,WACGN,GACC,cAACO,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAM,UACN,aAAW,OACX7D,GAAI,CAAE8D,GAAI,GACVnD,QAAS,kBAAMyC,KANjB,SAQE,cAAC,IAAD,MAGJ,cAAC5C,EAAA,EAAD,CAAYN,QAAQ,KAAK6D,UAAU,MAAM/D,GAAI,CAAE8C,SAAU,GAAzD,0BAI4C,SAA3CvF,gLAAA,0BACC8F,EACE,cAACW,EAAA,EAAD,CAAkBhE,GAAI,CAAEsC,MAAO,UAE/BgB,EAAc,cAAC,GAAD,IAAe,cAAC,GAAD,WAQ5BW,GAAe,WAC1B,IAAMX,ENyBCvE,IAAUnB,KMxBjB,EAAgCU,oBAAkB,GAAlD,mBAAO4F,EAAP,KAAiBC,EAAjB,KACA,EAAgC7F,mBAA6B,MAA7D,mBAAO8F,EAAP,KAAiBC,EAAjB,KACQjG,EAAWW,IAAXX,OAER,IAAKkF,EAAa,OAAO,KAWzB,OACE,qCACE,cAAC5C,EAAA,EAAD,CAAQC,QAXK,SAAC2D,GAChBD,EAAYC,EAAMC,eAClBJ,GAAY,IASV,SAA4Bb,EAAY5F,WACxC,cAAC,IAAD,CACE8G,GAAG,aACHJ,SAAUA,EACVrC,KAAMmC,EACNlC,QAAS,kBAAMmC,GAAY,IAJ7B,SAME,cAACM,EAAA,EAAD,CAAU9D,QAbC,WACfvC,IAASxB,MAAMgC,QAAQ/B,QAYnB,0BAMK6H,GAAkB,WAC7B,MAAoCpG,oBAAkB,GAAtD,mBAAOqG,EAAP,KAAmBC,EAAnB,KAEA,OACE,qCACE,cAAClE,EAAA,EAAD,CAAQC,QAAS,kBAAMiE,GAAc,IAArC,mBACA,cAAC,GAAD,CAAa7C,KAAM4C,EAAY3C,QAAS,kBAAM4C,GAAc,UEvFrDC,GAAkC,SAAC,GAGzC,IAFLC,EAEI,EAFJA,UACA/I,EACI,EADJA,SAEA,EAAoCuC,oBAAkB,GAAtD,mBAAOyG,EAAP,KAAmBC,EAAnB,KAEA,OACE,eAACC,EAAA,EAAD,CACEjF,GAAI,CACFwC,QAAS,OACT0C,iBAAkB,WAClBC,QAAS,qBACTC,OAAQ,QACR9C,MAAO,QACP+C,SAAU,QAEZC,QAAM,EATR,UAWE,cAAC,GAAD,CAAQnC,WAAY2B,EAAW1B,SAAU,kBAAM4B,GAAc,MAC5DF,GAAa,cAACA,EAAD,CAAW/C,KAAMgD,EAAYQ,YAAa,kBAAMP,GAAc,MAE5E,cAACzC,EAAA,EAAD,CAAKvC,GAAI,CAAEsC,MAAO,OAAQkD,SAAU,KAAMC,OAAQ,SAAUpD,QAAS,GAArE,SACGtG,Q,+CDVF,SAAS2J,GAAaC,GAC3B,OAAOA,EAAOpF,OAAS0C,GAAW2C,UAS7B,SAASC,GAAgBF,GAC9B,OAAOA,EAAOpF,OAAS0C,GAAW6C,aAQ7B,SAASC,GAAaJ,GAC3B,OAAOA,EAAOpF,OAAS0C,GAAW+C,UAS7B,SAASC,GAAcN,GAC5B,OAAOA,EAAOpF,OAAS0C,GAAWiD,WAkB7B,SAASC,GAAkBR,GAChC,OAAOA,EAAOpF,OAAS0C,GAAWmD,gB,SApExBnD,K,sBAAAA,E,4BAAAA,E,sBAAAA,E,wBAAAA,E,8BAAAA,E,iCAAAA,Q,KA+EL,I,GEhFKoD,GCkBAC,GCAAC,GAIAC,GASAC,GJiDCC,GAAqB,SAACC,GACjC,OAAOA,EACJC,QAAO,SAAAD,GAAI,OAAIA,EAAKE,WACpBC,SAAQ,SAAAH,GAAI,OAAIA,EAAKE,YK7EtBE,GAA4B,GAEnBC,GAAoB,SAACC,GAChCF,GAAc,2BAAQA,IAAmBE,IAG9BC,GAAa,SAAC3G,GACzB,OAAOwG,GAAexG,IAASA,GAGpB4G,GAAsB,SAACC,EAAiBT,GACnD,IAAMU,EAA0B,GAOhC,OALAC,OAAOC,QAAQH,GAAOI,SAAQ,YAAoB,IAAD,mBAAjBC,EAAiB,KAAX3I,EAAW,KAC1B,kBAAVA,IAAoBA,EAAQ4I,GAAmBD,EAAM3I,EAAO6H,IACvEU,EAAcI,GAAQ3I,KAGjBuI,GAGIK,GAAqB,SAACD,EAAc3I,EAAe6H,GAC9D,IAAME,EAAUH,GAAmBC,GAE7BgB,EAAYd,EACfD,OAAOf,IACPe,QAAO,SAAAjB,GAAM,OAAIA,EAAO8B,OAASA,KACjCG,KAAI,SAAAjC,GAAM,OAAIA,EAAO7G,SAExB,OAAI6I,EAAUpG,QAAU,EAAUsG,KAAKC,IAAL,MAAAD,KAAI,aAAQF,IAEvCd,EACJD,OAAOlB,IACPkB,QAAO,SAAAjB,GAAM,OAAIA,EAAO8B,OAASA,KACjCM,QAAO,SAACC,EAAKrC,GAAN,OAAiBqC,EAAMrC,EAAOsC,QAAOnJ,ID1B1C,SAASoJ,GAAWvB,GACzB,OAAOA,EAAKwB,WAAa7B,GAAS8B,S,SFfxB/B,K,sBAAAA,E,wBAAAA,E,oBAAAA,E,kCAAAA,E,4BAAAA,E,qCAAAA,Q,KASZW,IAAiB,qBACdX,GAAYgC,MAAQ,SADN,eAEdhC,GAAYiC,OAAS,UAFP,eAGdjC,GAAYkC,KAAO,QAHL,eAIdlC,GAAYmC,YAAc,WAJZ,eAKdnC,GAAYoC,SAAW,YALT,eAMdpC,GAAYqC,aAAe,iBANb,K,SCSLpC,K,cAAAA,E,oBAAAA,E,kBAAAA,E,oBAAAA,E,kBAAAA,E,UAAAA,E,UAAAA,E,kBAAAA,E,wBAAAA,E,gBAAAA,E,sBAAAA,E,eAAAA,Q,cCAAC,K,yBAAAA,Q,cAIAC,K,oBAAAA,E,kBAAAA,E,kBAAAA,E,oBAAAA,E,sBAAAA,E,mBAAAA,Q,cASAC,K,YAAAA,E,kBAAAA,E,gBAAAA,E,mBAAAA,Q,KE5BZ,IAAMkC,GAAc7K,wBAA0B,IAMjC8K,GAAsC,SAAC,GAG7C,IAFLjC,EAEI,EAFJA,KACA5K,EACI,EADJA,SAEA,OACE,cAAC4M,GAAY9J,SAAb,CAAsBC,MAAO6H,EAA7B,SAAoC5K,KAIjC,SAAS8M,KACd,OAAO7J,qBAAW2J,IAGb,SAASG,GAAwCC,GACtD,IAAMC,EAAUH,KAChB,GAAKE,EAAL,CAEA,IAAMpC,EAAOqC,EAAQC,MAAK,SAAAtC,GAAI,OAAIA,EAAKnC,KAAOuE,KAC9C,OAAOpC,QAAmBxJ,GAKrB,SAAS+L,GAA4CtC,GAC1D,IAAMuC,EAAYN,KAAaI,KAAKrC,GACpC,OAAOuC,QAA6BhM,EAG/B,SAASiM,GAA8CxC,GAC5D,OAAOiC,KAAajC,OAAOA,GAAQgB,KAAI,SAAAjB,GAAI,OAAIA,KAG1C,SAAS0C,GAAiBN,GAC/B,OAAOK,IAAc,SAAAzC,GAAI,OAAIA,EAAK2C,aAAeP,KAG5C,SAASQ,GAAmCpB,GACjD,OAAOiB,IAAiB,SAAAzC,GAAI,OAAIA,EAAKwB,WAAaA,KC5CpD,IAAMqB,GAAmB1L,wBAAwB,IAMpC2L,GAAgD,SAAC,GAGvD,IAFLC,EAEI,EAFJA,WACA3N,EACI,EADJA,SAEM4N,EAAcC,KAEpB,OACE,cAACJ,GAAiB3K,SAAlB,CAA2BC,MAAK,2BAAO6K,GAAgBD,GAAvD,SACG3N,KAKM6N,GAAgB,SAACC,GAC5B,IAAMC,EAAgB9K,qBAAWwK,IACjC,IAAKK,EAAM,OAAOC,EAElB,IAAMC,EAAqB,GAE3B,OADAF,EAAKrC,SAAQ,SAAAwC,GAAG,OAAID,EAASC,GAAOF,EAAcE,MAC3CD,GAGF,SAASE,GAAmC1J,GACjD,OAAQqJ,KAAgBrJ,GClB1B,ICfY2J,GCIAC,GFWNC,GAAgBtM,wBAAiC,IAO1CuM,GAA0C,SAAC,GAIjD,IAHL9J,EAGI,EAHJA,KACAiE,EAEI,EAFJA,GACAzI,EACI,EADJA,SAEMuO,EAAa,cAAU9F,EAAV,YAAgBjE,GACnC,EAA6BjC,mBAAiB,GAA9C,mBAAOQ,EAAP,KAAcyL,EAAd,KAEA5L,qBAAU,WACR,IAAMG,EAAQ0L,SAASC,aAAaC,QAAQJ,IAAkB,KAC9DC,EAAYzL,KACX,CAACwL,IAEJ,IAKMK,EAA0B,2BAC3B3L,qBAAWoL,KADgB,kBAE7B7J,EAAO,CAAEzB,QAAO8L,SAPC,SAAC9L,GACnByL,EAAYzL,GACZ2L,aAAaI,QAAQP,EAAexL,EAAMgM,gBAQ5C,OACE,cAACV,GAAcvL,SAAf,CAAwBC,MAAO6L,EAA/B,SACG5O,KGhCA,SAASgP,GAAeC,GAC7B,OAAOA,EAAMzK,OAAS4J,GAAUc,Q,SFhBtBf,O,+BAAAA,I,uBAAAA,I,sCAAAA,Q,cCIAC,K,gBAAAA,E,oBAAAA,E,uBAAAA,Q,KCeL,I,GCjBKe,GDiBCC,GAAe,SAACH,EAAyBI,GACpD,SAAKA,GAAcJ,GAAUA,EAAMK,aAC5BL,EAAMK,WAAWC,gBAAkBF,EAAUE,eAGzCC,GAAe,SAACP,EAAyBI,GACpD,SAAKA,GAAcJ,GAAUA,EAAMQ,YAC5BR,EAAMQ,UAAUF,gBAAkBF,EAAUE,gB,SCxBzCJ,K,iBAAAA,E,uBAAAA,E,yBAAAA,E,yBAAAA,E,2BAAAA,E,mBAAAA,E,2BAAAA,E,yBAAAA,E,iBAAAA,E,uBAAAA,E,mBAAAA,E,4BAAAA,Q,KAeZlE,IAAiB,kBAAC,GACfkE,GAAcO,KAAO,QADP,YAAC,GAEfP,GAAcQ,QAAU,WAFV,YAAC,GAGfR,GAAcS,SAAW,YAHX,YAAC,GAIfT,GAAcU,SAAW,YAJX,YAAC,GAKfV,GAAcW,UAAY,aALZ,YAAC,GAMfX,GAAcY,MAAQ,SANR,YAAC,GAOfZ,GAAca,UAAY,aAPZ,YAAC,GAQfb,GAAcc,SAAW,YARX,YAAC,GASfd,GAActH,KAAO,QATP,YAAC,GAUfsH,GAAce,QAAU,WAVV,YAAC,GAWff,GAAcgB,MAAQ,SAXR,YAAC,GAYfhB,GAAciB,UAAY,aAZZ,KCDjB,IAAMC,GAAmBtO,wBAAgC,MAM5CuO,GAAgD,SAAC,GAGvD,IAFLC,EAEI,EAFJA,UACAvQ,EACI,EADJA,SAEMwQ,EAAgBD,EAAU3P,KAE1B+M,EAAavC,GAAoBoF,EAAc7C,WAAY6C,EAAc5F,MAO/E,OALA+C,EAAWwB,GAAce,SAAWM,EAAc5F,KAC/CC,OAAOsB,IACPN,KAAI,SAAAQ,GAAO,OAAIA,EAAQsB,WAAWrD,GAAYmC,gBAC9CT,QAAO,SAACkE,EAASzD,GAAV,OAA0ByD,EAAUzD,IAAa,GAGzD,cAAC4D,GAAiBvN,SAAlB,CAA2BC,MAAOwN,EAAlC,SACE,cAAC,GAAD,CAAmB5C,WAAYA,EAA/B,SACE,cAAC,GAAD,CAAc/C,KAAM4F,EAAc5F,KAAlC,SACE,cAAC,GAAD,CAAgBpG,KAAM2J,GAAWsC,aAAchI,GAAI8H,EAAU9H,GAA7D,SACE,cAAC,GAAD,CAAgBjE,KAAM2J,GAAWuC,SAAUjI,GAAI8H,EAAU9H,GAAzD,SACGzI,aASF2Q,GAAe,WAC1B,OAAO1N,qBAAWoN,KAGPO,GAAmB,WAA6B,IAAD,EAC1D,OAAmB,QAAZ,EAAAD,YAAA,eAAgB/P,OAAQ,MAiB1B,SAASiQ,GAAgBC,GAC9B,IAAMP,EAAYK,KACZhG,EAAOkC,KACb,GAAKyD,EAAL,CAEA,IAAMtB,EAAQsB,EAAUQ,OACrBlG,OAAOmE,IACP9B,MAAK,SAAA+B,GAAK,OAAIA,EAAM6B,UAAYA,KAEnC,GAAK7B,EAAL,CAEA,IAAM+B,EAAOrG,GAAmBC,GAC7BC,OAAOX,IACPW,QAAO,SAAAjB,GAAM,OAAIA,EAAOqF,QAAU6B,KAClC9E,QAAO,SAACC,EAAKrC,GAAN,OAAiBqC,EAAMrC,EAAOsC,QAAO+C,EAAM+B,MAErD,OAAO,2BAAK/B,GAAZ,IAAmB+B,WCtFd,ICFKC,GCAAC,GFECC,GAAgB,WAC3B,OACE,qBAAKC,QAAQ,MAAMC,MAAM,6BAA6BC,QAAQ,sBAAsBC,iBAAiB,0BAArG,SACE,8BACE,sBAAMC,EAAE,4TACR,sBAAMA,EAAE,gtB,kDGaHC,GAAgC,SAAC,GAKvC,IAJLC,EAII,EAJJA,KACA3N,EAGI,EAHJA,MACA4N,EAEI,EAFJA,QACAnI,EACI,EADJA,YAEMoI,EAAUC,cAOhB,OACE,eAACC,GAAA,EAAD,CAAUC,QAAM,EAACnN,QANA,WACjBgN,EAAQI,KAAKL,GACbnI,KAIA,UACE,cAACyI,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UAAUR,MAEZ,cAACS,GAAA,EAAD,CAAclT,QAAS8E,QChChBqO,GAA8B,SAAC,GAIrC,IAHLpM,EAGI,EAHJA,KACAwD,EAEI,EAFJA,YACAxJ,EACI,EADJA,SAEA,OACE,eAACqS,GAAA,EAAD,CAAQC,OAAO,OAAOtM,KAAMA,EAAMC,QAASuD,EAA3C,UACGxJ,EAED,cAACwG,EAAA,EAAD,CAAKvC,GAAI,CAAE8C,SAAU,KAErB,cAACwL,GAAA,EAAD,UACE,cAAC,GAAD,CACEb,KAAM,cAAC,KAAD,CAAiBA,KAAMc,OAC7BzO,MAAM,aACN4N,QAAS,cACTnI,YAAaA,UCZViJ,GAAgC,SAAC,GAGvC,IAFLzM,EAEI,EAFJA,KACAwD,EACI,EADJA,YAEM+G,EAAYI,KAElB,OAAKJ,EAGH,cAAC,GAAD,CAAkBvK,KAAMA,EAAMwD,YAAaA,EAA3C,SACE,eAAC+I,GAAA,EAAD,WACE,cAAC,GAAD,CACEb,KAAM,cAAC,KAAD,CAAiBA,KAAMgB,OAC7B3O,MAAOwM,EAAUoC,KACjBhB,QAAO,WAAMpB,EAAU9H,IACvBe,YAAaA,IAEf,cAAC,GAAD,CACEkI,KAAM,cAAC,GAAD,IACN3N,MAAM,UACN4N,QAAO,WAAMpB,EAAU9H,GAAhB,YACPe,YAAaA,IAEf,cAAC,GAAD,CACEkI,KAAM,cAAC,KAAD,CAAiBA,KAAMkB,OAC7B7O,MAAM,WACN4N,QAAO,WAAMpB,EAAU9H,GAAhB,aACPe,YAAaA,IAEf,cAAC,GAAD,CACEkI,KAAM,cAAC,KAAD,CAAiBA,KAAMmB,OAC7B9O,MAAM,WACN4N,QAAO,WAAMpB,EAAU9H,GAAhB,aACPe,YAAaA,IAEf,cAAC,GAAD,CACEkI,KAAM,cAAC,KAAD,CAAiBA,KAAMoB,OAC7B/O,MAAM,QACN4N,QAAO,WAAMpB,EAAU9H,GAAhB,SACPe,YAAaA,IAEf,cAACuJ,GAAA,EAAD,IACA,cAAC,GAAD,CACErB,KAAM,cAAC,KAAD,CAAiBA,KAAMsB,OAC7BjP,MAAM,QACN4N,QAAO,WAAMpB,EAAU9H,GAAhB,UACPe,YAAaA,IAEf,cAAC,GAAD,CACEkI,KAAM,cAAC,KAAD,CAAiBA,KAAMuB,OAC7BlP,MAAM,QACN4N,QAAO,WAAMpB,EAAU9H,GAAhB,UACPe,YAAaA,SA9CE,O,SJhBbyH,K,kBAAAA,E,YAAAA,E,oBAAAA,E,gBAAAA,E,cAAAA,E,6BAAAA,Q,cCAAC,K,cAAAA,E,UAAAA,E,cAAAA,E,UAAAA,E,eAAAA,Q,oHIYCgC,GAAoC,SAAC,GAK3C,IAAD,IAJJC,WAII,OAJGC,IAIH,MAHJrH,WAGI,MAHEqH,IAGF,EAFJrQ,EAEI,EAFJA,MACAqB,EACI,EADJA,SAEA,OACE,eAACoC,EAAA,EAAD,WACE,cAACmB,EAAA,EAAD,CAAY,aAAW,SAASC,KAAK,QAAQhD,QAAS,kBAAMR,EAAS0H,KAAKC,IAAIhJ,EAAQ,EAAGoQ,KAAzF,SACE,cAACE,GAAA,EAAD,CAAQC,SAAS,cAElBvQ,EACD,cAAC4E,EAAA,EAAD,CAAY,aAAW,SAASC,KAAK,QAAQhD,QAAS,kBAAMR,EAAS0H,KAAKqH,IAAIpQ,EAAQ,EAAGgJ,KAAzF,SACE,cAACwH,GAAA,EAAD,CAAKD,SAAS,kBCrBTE,GAAqD,CAChEC,OAAK,qBACFtE,GAAcO,KAAO,GADnB,eAEFP,GAAcQ,QAAU,GAFtB,eAGFR,GAAcS,SAAW,GAHvB,eAIFT,GAAcU,SAAW,GAJvB,eAKFV,GAAcW,UAAY,GALxB,eAMFX,GAAcY,MAAQ,GANpB,eAOFZ,GAAca,UAAY,GAPxB,eAQFb,GAAcc,SAAW,GARvB,eASFd,GAActH,KAAO,GATnB,eAUFsH,GAAcgB,MAAQ,GAVpB,eAWFhB,GAAciB,UAAY,GAXxB,eAYFjB,GAAce,QAAU,GAZtB,IAcLwD,KAAG,qBACAvE,GAAcO,KAAO,GADrB,eAEAP,GAAcQ,QAAU,GAFxB,eAGAR,GAAcS,SAAW,GAHzB,eAIAT,GAAcU,SAAW,GAJzB,eAKAV,GAAcW,UAAY,GAL1B,eAMAX,GAAcY,MAAQ,GANtB,eAOAZ,GAAca,UAAY,GAP1B,eAQAb,GAAcc,SAAW,GARzB,eASAd,GAActH,KAAO,GATrB,eAUAsH,GAAcgB,MAAQ,GAVtB,eAWAhB,GAAciB,UAAY,GAX1B,eAYAjB,GAAce,QAAU,GAZxB,IAcHyD,OAAK,qBACFxE,GAAcO,KAAO,GADnB,eAEFP,GAAcQ,QAAU,GAFtB,eAGFR,GAAcS,SAAW,GAHvB,eAIFT,GAAcU,SAAW,GAJvB,eAKFV,GAAcW,UAAY,GALxB,eAMFX,GAAcY,MAAQ,GANpB,eAOFZ,GAAca,UAAY,GAPxB,eAQFb,GAAcc,SAAW,GARvB,eASFd,GAActH,KAAO,GATnB,eAUFsH,GAAcgB,MAAQ,GAVpB,eAWFhB,GAAciB,UAAY,GAXxB,eAYFjB,GAAce,QAAU,GAZtB,IAcL0D,KAAG,qBACAzE,GAAcO,KAAO,GADrB,eAEAP,GAAcQ,QAAU,GAFxB,eAGAR,GAAcS,SAAW,GAHzB,eAIAT,GAAcU,SAAW,GAJzB,eAKAV,GAAcW,UAAY,GAL1B,eAMAX,GAAcY,MAAQ,GANtB,eAOAZ,GAAca,UAAY,GAP1B,eAQAb,GAAcc,SAAW,GARzB,eASAd,GAActH,KAAO,GATrB,eAUAsH,GAAcgB,MAAQ,GAVtB,eAWAhB,GAAciB,UAAY,GAX1B,eAYAjB,GAAce,QAAU,GAZxB,IAcH2D,OAAK,qBACF1E,GAAcO,KAAO,GADnB,eAEFP,GAAcQ,QAAU,GAFtB,eAGFR,GAAcS,SAAW,GAHvB,eAIFT,GAAcU,SAAW,GAJvB,eAKFV,GAAcW,UAAY,GALxB,eAMFX,GAAcY,MAAQ,GANpB,eAOFZ,GAAca,UAAY,GAPxB,eAQFb,GAAcc,SAAW,GARvB,eASFd,GAActH,KAAO,GATnB,eAUFsH,GAAcgB,MAAQ,GAVpB,eAWFhB,GAAciB,UAAY,GAXxB,eAYFjB,GAAce,QAAU,GAZtB,KClDD4D,IAAiC,qBACpC3E,GAAcO,KAAO,GADe,eAEpCP,GAAcQ,QAAU,GAFY,eAGpCR,GAAcS,SAAW,GAHW,eAIpCT,GAAcU,SAAW,GAJW,eAKpCV,GAAcW,UAAY,GALU,eAMpCX,GAAcY,MAAQ,GANc,eAOpCZ,GAAca,UAAY,GAPU,eAQpCb,GAAcc,SAAW,GARW,eASpCd,GAActH,KAAO,GATe,eAUpCsH,GAAcgB,MAAQ,GAVc,eAWpChB,GAAciB,UAAY,GAXU,eAYpCjB,GAAce,QAAU,GAZY,IAyB1B6D,GAA4C,SAAC,GAOnD,IAAD,EANJC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,iBACAhE,EAEI,EAFJA,MAGMiE,GADF,EADJhQ,SAE0BoP,GAAiBQ,IAC3C,EAA4CzR,mBAAyBuR,IAArE,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAAsC/R,mBAAyBuR,IAA/D,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAsCjS,mBAAyBuR,IAA/D,mBAAOW,EAAP,KAAoBC,EAApB,KAEMC,EAAuBpJ,OAAOqJ,OAAOP,GACxCrI,QAAO,SAACC,EAAa4I,GAAd,OAAiC5I,EAAM4I,KAE3CC,EAAoBvJ,OAAOqJ,OAAOL,GACrCvI,QAAO,SAACC,EAAa4I,GAAd,OAAiC5I,EAAM4I,KAE3CE,GAAoB,mBACvB5F,GAAcO,KAAO,GADE,cAEvBP,GAAcQ,QAAU,GAFD,cAGvBR,GAAcS,SAAW,GAHF,cAIvBT,GAAcU,SAAW,GAJF,cAKvBV,GAAcW,UAAY,GALH,cAMvBX,GAAcY,MAAQ,GANC,cAOvBZ,GAAca,UAAY,GAPH,cAQvBb,GAAcc,SAAW,GARF,cASvBd,GAActH,KAAO,GATE,cAUvBsH,GAAcgB,MAAQ,GAVC,cAWvBhB,GAAciB,UAAY,GAXH,cAYvBjB,GAAce,QAAU,GAZD,GAe1B,OAAQ+D,GACN,KAAKhD,GAAa+D,aAChBD,EAAK5F,GAAciB,WAAaD,EAChC,MACF,KAAKc,GAAagE,SAChBF,EAAK5F,GAAcgB,OAASA,EAAQ,EACpC,MACF,KAAKc,GAAaiE,QAChB,MACF,QACEH,EAAK5F,GAAcgB,OAASA,EAGhC,IAAMgF,EAAgBC,GAAgB,CAACL,EAAMR,EAAaF,IACpDgB,EAAiB9J,OAAOC,QAAQ2J,GACnCtJ,KAAI,YAA2B,IAAD,mBAAxBH,EAAwB,KAAlBsF,EAAkB,KAC7B,IAAKA,EAAM,OAAO,EAKlB,IAHA,IAAIsE,EAAO,EACPT,EAASJ,EAAY/I,IAA0B,EAE5CmJ,GAAU,GACfS,GAAqB,GAAZtE,EAAO,GAChBA,GAAQ,EACR6D,GAAU,EAGZ,OAAOS,KAERtJ,QAAO,SAACC,EAAKqJ,GAAN,OAAerJ,EAAMqJ,KAEzBC,EAAQH,GAAgB,CAACD,EAAeV,IAE9C,OACE,cAACe,GAAA,EAAD,CAAgBxN,UAAWkB,IAA3B,SACE,eAACuM,GAAA,EAAD,CAAO7N,KAAK,QAAZ,UACE,cAAC8N,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,0BAAwBjB,EAAxB,MAAgDR,EAAhD,OACA,eAACyB,GAAA,EAAD,sBAAoBd,EAApB,MAAyCZ,EAAzC,OACA,eAAC0B,GAAA,EAAD,qBAAmBP,EAAnB,aACA,cAACO,GAAA,EAAD,yBAGJ,cAACC,GAAA,EAAD,UACItK,OAAOuC,KAAKiH,GAA0BlJ,KAAI,SAAAiK,GAAS,OACnD,eAACH,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACGzK,GAAW2K,KAEd,cAACF,GAAA,EAAD,UACGb,EAAKe,KAER,cAACF,GAAA,EAAD,UAC6C,kBAAjCxB,EAAkB0B,IAA2B1B,EAAkB0B,IAAwB,GAC5F,CAAC3G,GAActH,KAAMsH,GAAcgB,MAAOhB,GAAciB,WAAW2F,SAASD,GAC7E,cAAC,GAAD,CACE3C,IAAK,EACLpQ,MAAOsR,EAAeyB,GACtB1R,SAAU,SAAArB,GAAK,OAAIuR,EAAkB,2BAAKD,GAAN,kBAAuByB,EAAY/S,QAGzE,MAGN,cAAC6S,GAAA,EAAD,UACE,cAAC,GAAD,CACEzC,IAAK,EACLpQ,MAAOwR,EAAYuB,GACnB1R,SAAU,SAAArB,GAAK,OAAIyR,EAAe,2BAAKD,GAAN,kBAAoBuB,EAAY/S,UAGrE,cAAC6S,GAAA,EAAD,UACE,cAAC,GAAD,CACEzC,IAAK,EACLpQ,MAAO0R,EAAYqB,GACnB1R,SAAU,SAAArB,GAAK,OAAI2R,EAAe,2BAAKD,GAAN,kBAAoBqB,EAAY/S,UAGrE,eAAC6S,GAAA,EAAD,WACGL,EAAMO,GADT,MACwB1B,EAAkB0B,QAlC7BA,cA4C3B,SAASV,GAAiBY,GACxB,OAAOA,EAAMhK,QAAO,SAACuJ,EAAOV,GAAY,IAAD,iBACbtJ,OAAOqJ,OAAOzF,KADD,IACrC,2BAAyE,CAAC,IAA/D2G,EAA8D,QACvEP,EAAK,2BAAQA,GAAR,kBAAgBO,EAAaP,EAAMO,GAAyBjB,EAAOiB,MAFrC,8BAKrC,OAAOP,KCzJJ,ICbKU,GDaCC,GAAkC,SAAC,GAKzC,IAJLC,EAII,EAJJA,IACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAjS,EACI,EADJA,SAEMkS,EAAsBH,EAAInC,UAC3BoC,EAAU5Q,QAAU,IACnB4Q,EAAUL,SAASI,EAAInC,UAE7BnR,QAAQ0T,IAAIJ,EAAIlC,SAAUoC,GAC1B,IAAMG,EACHL,EAAIlC,WAAahD,GAAaiE,SAAWmB,GAAiB,GACvDF,EAAIlC,WAAahD,GAAaiE,SAA6B,IAAlBmB,EAE/C,OACE,eAACI,EAAA,EAAD,CAAO/P,IAAK,EAAZ,UACE,eAAC+P,EAAA,EAAD,CAAOC,UAAU,MAAMhQ,IAAK,EAAGzC,GAAI,CAAE0S,SAAU,QAA/C,UACE,cAAC9S,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,QACNhB,MAAOoT,EAAIS,MACXxS,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWS,MAAOrO,EAAMjE,OAAOvB,cAG5D,cAACc,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,OACNhB,MAAOoT,EAAIxD,KACXvO,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWxD,KAAMpK,EAAMjE,OAAOvB,cAG3D,cAACc,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,WACN8S,QAAM,EACN9T,MAAOoT,EAAInC,SACX5P,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWnC,SAAUzL,EAAMjE,OAAOvB,YAC7D+T,QAASR,EACTxO,MAAOwO,EAAsB,eAAYlV,EACzC2V,WAAYT,EAAsB,gDAA6ClV,EATjF,SAWGmK,OAAOqJ,OAAO1D,IAAUrF,KAAI,SAAAmI,GAAQ,OACnC,cAACtL,EAAA,EAAD,CAAyB3F,MAAOiR,EAAhC,SAA2CA,GAA5BA,QAInB,cAACnQ,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,OACNhB,MAAOoT,EAAIa,KACX5S,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWa,KAAMzO,EAAMjE,OAAOvB,cAG3D,cAACc,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,WACN8S,QAAM,EACN9T,MAAOoT,EAAIlC,SACX7P,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWlC,SAAU1L,EAAMjE,OAAOvB,YAC7D+T,QAASN,EACT1O,MAAO0O,EAAsB,eAAYpV,EACzC2V,WAAYP,EAAsB,yBAAsBpV,EAT1D,SAWGmK,OAAOqJ,OAAO3D,IAAcpF,KAAI,SAAAoI,GAAQ,OACvC,cAACvL,EAAA,EAAD,CAAyB3F,MAAOkR,EAAhC,SAA2CA,GAA5BA,WAKrB,eAACwC,EAAA,EAAD,CAAOC,UAAU,MAAMhQ,IAAK,EAAGzC,GAAI,CAAE0S,SAAU,QAA/C,UACE,cAAC9S,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,YACNhB,MAAOoT,EAAIc,UACX7S,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWc,UAAW1O,EAAMjE,OAAOvB,cAGhE,cAACc,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,MACNhB,MAAOoT,EAAIe,IACX9S,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWe,IAAK3O,EAAMjE,OAAOvB,cAG1D,cAACc,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,SACNhB,MAAOoT,EAAIgB,OACX/S,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWgB,OAAQ5O,EAAMjE,OAAOvB,cAG7D,cAACc,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,SACNhB,MAAOoT,EAAI9M,OACXjF,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAW9M,OAAQd,EAAMjE,OAAOvB,cAG7D,cAACc,EAAA,EAAD,CACEI,GAAI,CAAE8C,SAAU,GAChB5C,QAAQ,WACRJ,MAAM,SACNhB,MAAOoT,EAAIiB,OACXhT,SAAQ,+GAAE,SAAAmE,GAAK,OAAInE,EAAS,2BAAK+R,GAAN,IAAWiB,OAAQ7O,EAAMjE,OAAOvB,sB,SC9HzDkT,K,oBAAAA,E,wBAAAA,E,gBAAAA,E,cAAAA,E,eAAAA,Q,KAiBL,I,GAAMoB,GAAiD,CAC5D,EAAK,CACHjB,UAAW,CACTlF,GAASuC,MACTvC,GAAS0C,IACT1C,GAAS2C,OAEXM,iBAAkB,GAClBD,gBAAiB,GACjBoD,YAAa,GACbnH,MAAO,EACPoH,MAAO,MAET,EAAK,CACHnB,UAAW,CACTlF,GAASuC,MACTvC,GAASwC,IACTxC,GAAS0C,IACT1C,GAAS2C,OAEXM,iBAAkB,GAClBD,gBAAiB,GACjBoD,YAAa,GACbnH,MAAO,EACPoH,MAAO,OAET,EAAK,CACHnB,UAAW,CACTlF,GAASuC,MACTvC,GAASwC,IACTxC,GAASyC,MACTzC,GAAS0C,IACT1C,GAAS2C,OAEXM,iBAAkB,EAClBD,gBAAiB,GACjBoD,YAAa,GACbnH,MAAO,EACPoH,MAAO,MAET,EAAK,CACHnB,UAAW,CACTlF,GAASuC,MACTvC,GAASwC,IACTxC,GAASyC,MACTzC,GAAS0C,IACT1C,GAAS2C,OAEXM,iBAAkB,EAClBD,gBAAiB,EACjBoD,YAAa,GACbnH,MAAO,EACPoH,MAAO,KAET,EAAK,CACHnB,UAAW,CACTlF,GAASuC,MACTvC,GAASwC,IACTxC,GAASyC,MACTzC,GAAS0C,IACT1C,GAAS2C,OAEXM,iBAAkB,EAClBD,gBAAiB,EACjBoD,YAAa,GACbnH,MAAO,EACPoH,MAAO,MCjFLC,GAAiB,IAAIC,KAAKC,aAAa,MAChCC,GAAc,SAACrC,GAC1B,OAAOkC,GAAeI,OAAOtC,GAAQ,SAG1BuC,GAAkB,WAC7B,IAAMtH,EAAYK,KAClB,OAAKL,EAEEA,EAAUgH,MACdO,MAAK,SAACC,EAAGC,GAAJ,OAAUC,aAASF,EAAEG,MAAMC,UAAYF,aAASD,EAAEE,MAAMC,aAC7DnM,QAAO,SAACC,EAAKmM,GAAN,OAAgBnM,EAAMmM,EAAMrV,QAAO,GAJtB,GCOZsV,GAAoC,SAAC,GAO3C,IANLC,EAMI,EANJA,MACA1D,EAKI,EALJA,OACA2D,EAII,EAJJA,aACAvE,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAuE,EACI,EADJA,SAEA,OACE,eAAC7C,GAAA,EAAD,CACE1R,GAAI,CACF,4DAA6D,CAC3DwU,gBAAiB,iBAHvB,UAOE,cAAC7C,GAAA,EAAD,UAAY0C,IACZ,cAAC,GAAD,CACE1T,QAAS,kBAAM4T,EAASF,EAAOrC,GAAajC,WAC5C0E,SAAUH,IAAiBtC,GAAajC,SAF1C,SAIGY,EAAOwB,UAAUL,SAAS/B,GACzB,qCAAGA,EAAH,KAAeY,EAAOT,iBAAtB,OAEA,MAGJ,cAAC,GAAD,CACEvP,QAAS,kBAAM4T,EAASF,EAAOrC,GAAatI,aAC5C+K,SAAUH,IAAiBtC,GAAatI,WAF1C,SAIGiH,EAAOV,kBAEV,cAAC,GAAD,CACEtP,QAAS,kBAAM4T,EAASF,EAAOrC,GAAalF,SAC5C2H,SAAUH,IAAiBtC,GAAalF,OAF1C,SAIG6D,EAAO0C,cAEV,cAAC,GAAD,CACE1S,QAAS,kBAAM4T,EAASF,EAAOrC,GAAa9F,QAC5CuI,SAAUH,IAAiBtC,GAAa9F,MAF1C,SAIoB,IAAjByE,EAAOzE,MACN,UAEA,qCACG8D,IAAahD,GAAaiE,SAAW,IACrCjB,IAAahD,GAAa0H,MAAQ/D,EAAOzE,MAAQ,SACjD8D,IAAahD,GAAagE,UAAaL,EAAOzE,MAAQ,EAAK,SAC3D8D,IAAahD,GAAa2H,QAAUhE,EAAOzE,MAAQ,SACnD8D,IAAahD,GAAa4H,OAASjE,EAAOzE,MAAQ,SAClD8D,IAAahD,GAAa+D,cAAgBJ,EAAOzE,MAAQ,kBAIhE,cAAC,GAAD,CACEvL,QAAS,kBAAM4T,EAASF,EAAOrC,GAAasB,QAC5CmB,SAAUH,IAAiBtC,GAAasB,MAF1C,SAIGI,GAAY/C,EAAO2C,aAYfuB,GAAsC,SAAC,GAI7C,IAHLJ,EAGI,EAHJA,SACA9T,EAEI,EAFJA,QACA5E,EACI,EADJA,SAEA,OACE,cAAC4V,GAAA,EAAD,CAAWhR,QAASA,EAASmU,UAAWL,EAAW,WAAa,GAAhE,SAAqE1Y,KC/E5DgZ,GAA4C,SAAC,GAInD,IAHLhF,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACA7P,EACI,EADJA,SAEA,EAAoD7B,mBAA6B,IAAjF,mBAAO0W,EAAP,KAA2BC,EAA3B,KAEMC,EAAmB,SAACb,EAAec,GACvC,IAAMC,EAAU,eAAQJ,GAExB1N,OAAOC,QAAQ6N,GACZxO,QAAO,SAAAyO,GAAQ,OAAIA,EAAS,KAAOF,KACnCvN,KAAI,SAAAyN,GAAQ,OAAIA,EAAS,MACzB7N,SAAQ,SAAA8N,GAAQ,OAAIF,EAAWE,GAAYF,EAAWf,MAEzDe,EAAWf,GAASc,EAEpBF,EAAsBG,GACtBjV,EAiCG,SAA2B6U,GAUhC,IATA,IAAMrE,EAAyB,CAC7BwB,UAAW,GACXjC,iBAAkB,EAClBD,gBAAiB,EACjBoD,YAAa,EACbnH,MAAO,EACPoH,MAAO,GAGT,MAA4BhM,OAAOC,QAAQyN,GAA3C,eAAgE,CAA3D,0BAAOX,EAAP,KAAcc,EAAd,KACGI,EAAcnC,GAAeiB,GAEnC,OAAQc,GACN,KAAKnD,GAAajC,SAChBY,EAAOwB,UAAYoD,EAAYpD,UAC/BxB,EAAOT,iBAAmBqF,EAAYrF,iBACtC,MACF,KAAK8B,GAAatI,WAChBiH,EAAOV,gBAAkBsF,EAAYtF,gBACrC,MACF,KAAK+B,GAAalF,OAChB6D,EAAO0C,YAAckC,EAAYlC,YACjC,MACF,KAAKrB,GAAa9F,MAChByE,EAAOzE,MAAQqJ,EAAYrJ,MAC3B,MACF,KAAK8F,GAAasB,MAChB3C,EAAO2C,MAAQiC,EAAYjC,OAKjC,OAAO3C,EAlEI6E,CAAiBJ,KAG5B,OACE,eAAC5D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWzR,QAAQ,OAAnB,sBACA,cAACyR,GAAA,EAAD,CAAWzR,QAAQ,OAAnB,sBACA,cAACyR,GAAA,EAAD,CAAWzR,QAAQ,OAAnB,wBACA,cAACyR,GAAA,EAAD,CAAWzR,QAAQ,OAAnB,oBACA,cAACyR,GAAA,EAAD,CAAWzR,QAAQ,OAAnB,gCACA,cAACyR,GAAA,EAAD,CAAWzR,QAAQ,OAAnB,4BAIJ,cAAC0R,GAAA,EAAD,UACGtK,OAAOC,QAAQ6L,IAAgBxL,KAAI,mCAAEyM,EAAF,KAAS1D,EAAT,YAClC,cAAC,GAAD,CAEE0D,MAAOA,EACP1D,OAAQA,EACR2D,aAAcU,EAAmBX,GACjCE,SAAUW,EACVnF,SAAUA,EACVC,SAAUA,GANLqE,YCxCjB,IAAMoB,GAAkC,CACtCC,YAAa,EAEbxD,IAAK,CACHxD,KAAM,GACNqB,SAAU9C,GAASyC,MACnBM,SAAUhD,GAAaiE,QACvB8B,KAAM,GACNJ,MAAO,GACPK,UAAW,GACXC,IAAK,GACLC,OAAQ,GACR9N,OAAQ,GACR+N,OAAQ,IAGVwC,MAAO,GACPrC,MAAO,GAEP5J,YAAU,qBACPwB,GAAcO,KAAO,GADd,eAEPP,GAAcQ,QAAU,GAFjB,eAGPR,GAAcS,SAAW,GAHlB,eAIPT,GAAcU,SAAW,GAJlB,eAKPV,GAAcW,UAAY,GALnB,eAMPX,GAAcY,MAAQ,GANf,eAOPZ,GAAca,UAAY,GAPnB,eAQPb,GAAcc,SAAW,GARlB,eASPd,GAActH,KAAO,GATd,eAUPsH,GAAcgB,MAAQ,GAVf,eAWPhB,GAAciB,UAAY,GAXnB,eAYPjB,GAAce,QAAU,GAZjB,IAeV2J,KAAM,GACNC,WAAY,GACZC,UAAW,CAAEzN,MAAO,GAAI0N,QAAS,EAAGC,OAAQ,GAE5CC,UAAW,GACXnJ,OAAQ,GACRoJ,SAAU,GAEVvP,KAAM,IAGKwP,GAAkB,WAC7B,MAAoC7X,mBAAyB,CAC3D4R,iBAAkB,EAClBD,gBAAiB,EACjB/D,MAAO,EACPiG,UAAW,GACXmB,MAAO,EACPD,YAAa,IANf,mBAAO+B,EAAP,KAAmBgB,EAAnB,KAQA,EAA0C9X,mBAAwBmX,IAAlE,mBAAOlJ,EAAP,KAAsB8J,EAAtB,KAEA,OACE,cAAC,GAAD,CAAYvR,UAAW0J,GAAvB,SACE,eAACgE,EAAA,EAAD,CAAO/P,IAAK,EAAZ,UACE,eAACwC,EAAA,EAAD,CAAO/E,QAAQ,WAAWF,GAAI,CAAEqC,QAAS,GAAzC,UACE,cAAC7B,EAAA,EAAD,CAAYN,QAAQ,KAApB,iBACA,cAAC,GAAD,CACEgS,IAAK3F,EAAc2F,IACnB/R,SAAU,SAAA+R,GAAG,OAAImE,EAAiB,2BAAK9J,GAAN,IAAqB2F,UACtDC,UAAWiD,EAAWjD,UACtBC,cAAegD,EAAWlJ,WAI9B,eAACjH,EAAA,EAAD,CAAO/E,QAAQ,WAAWF,GAAI,CAAEqC,QAAS,GAAzC,UACE,cAAC7B,EAAA,EAAD,CAAYN,QAAQ,KAApB,wBACA,cAAC,GAAD,CACE6P,SAAUxD,EAAc2F,IAAInC,SAC5BC,SAAUzD,EAAc2F,IAAIlC,SAC5B7P,SAAUiW,OAId,eAACnR,EAAA,EAAD,CAAO/E,QAAQ,WAAWF,GAAI,CAAEqC,QAAS,GAAzC,UACE,cAAC7B,EAAA,EAAD,CAAYN,QAAQ,KAApB,wBACA,cAAC,GAAD,CACE6P,SAAUxD,EAAc2F,IAAInC,SAC5BC,SAAUzD,EAAc2F,IAAIlC,SAC5BC,gBAAiBmF,EAAWnF,gBAC5BC,iBAAkBkF,EAAWlF,iBAC7BhE,MAAOkJ,EAAWlJ,MAClB/L,SAAU,SAAAuJ,GAAU,OAAI2M,EAAiB,2BAAK9J,GAAN,IAAqB7C,4B,UC/FlE,SAAS4M,KACd,OAAOC,OCJF,ICAKC,GCAAC,G,GCSAC,G,GCTAC,G,GCAAC,G,GCAAC,GCAAC,G,GCAAC,GCAAC,GAUAC,G,GCVAC,GCkBCC,GAAmB,SAAC7K,GAAsD,IAAD,iBAC5D8K,IAD4D,IACpF,2BAAoC,CAAC,IAA1BC,EAAyB,QAC9B/K,EAAU3P,KAAK+Y,aAAe2B,EAAUlK,WAC5Cb,EAAY+K,EAAUC,IAAIhL,IAChB3P,KAAK+Y,YAAc2B,EAAUlK,UAJ2C,8BAOpF,OAAOb,GAGH8K,GAA0B,CX5BW,CACzCjK,QAAS,EACTmK,IAAK,SAAChL,GAAD,OAAeA,KW4BpBuH,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE3G,QAAU4G,EAAE5G,Y,SV9BnBqJ,K,yBAAAA,Q,KAIZxP,GAAkB,eACfwP,GAAYlO,OAAS,W,SCLZmO,K,qBAAAA,Q,KAIZzP,GAAkB,eACfyP,GAAQnO,OAAS,W,SCIRoO,K,0BAAAA,E,kCAAAA,E,uBAAAA,Q,KAMZ1P,IAAiB,kBAAC,GACf0P,GAAcjO,SAAW,YADX,YAAC,GAEfiO,GAAchO,aAAe,iBAFf,YAAC,GAGfgO,GAAcpO,OAAS,UAHT,K,SCfLqO,K,gCAAAA,E,oCAAAA,E,yBAAAA,Q,KAMZ3P,IAAiB,kBAAC,GACf2P,GAAQY,aAAe,iBADT,YAAC,GAEfZ,GAAQa,eAAiB,mBAFX,YAAC,GAGfb,GAAQc,SAAW,YAHL,K,SCNLb,K,yBAAAA,E,qBAAAA,E,uBAAAA,E,0BAAAA,Q,KAOZ5P,IAAiB,kBAAC,GACf4P,GAAatO,OAAS,UADR,YAAC,GAEfsO,GAAanP,KAAO,QAFN,YAAC,GAGfmP,GAAa5L,MAAQ,SAHP,YAAC,GAIf4L,GAAac,OAAS,UAJR,K,SCPLb,K,4BAAAA,E,sBAAAA,E,sCAAAA,E,4BAAAA,E,oBAAAA,E,sBAAAA,E,sBAAAA,E,wBAAAA,E,qBAAAA,Q,KAYZ7P,IAAiB,kBAAC,GACf6P,GAAYc,SAAW,YADT,YAAC,GAEfd,GAAYe,MAAQ,SAFN,YAAC,GAGff,GAAYgB,cAAgB,kBAHd,YAAC,GAIfhB,GAAYiB,SAAW,aAJT,YAAC,GAKfjB,GAAYpL,KAAO,QALL,YAAC,GAMfoL,GAAYkB,MAAQ,SANN,YAAC,GAOflB,GAAYmB,MAAQ,SAPN,YAAC,GAQfnB,GAAYoB,OAAS,UARP,YAAC,GASfpB,GAAYqB,KAAO,QATL,K,SCZLpB,K,yBAAAA,E,6CAAAA,E,2CAAAA,E,+CAAAA,E,0CAAAA,Q,cCAAC,K,mBAAAA,E,eAAAA,E,qCAAAA,E,qBAAAA,E,mBAAAA,E,4BAAAA,Q,KASZ/P,IAAiB,kBAAC,GACf+P,GAAWxW,KAAO,QADJ,YAAC,GAEfwW,GAAWoB,GAAK,MAFF,YAAC,GAGfpB,GAAWqB,cAAgB,gBAHb,YAAC,GAIfrB,GAAWsB,MAAQ,SAJL,YAAC,GAKftB,GAAWuB,KAAO,QALJ,YAAC,GAMfvB,GAAWwB,SAAW,aANR,KCTLvB,Q,aAUAC,K,UAAAA,E,gBAAAA,E,cAAAA,E,2BAAAA,Q,cCVAC,K,sBAAAA,E,kBAAAA,E,0BAAAA,E,oBAAAA,E,0BAAAA,E,0BAAAA,E,oBAAAA,E,wBAAAA,E,oBAAAA,E,mBAAAA,Q,KAaZ,IAqBYsB,G,iFArBRC,IAAsB,qBACvBvB,GAAcwB,UAAY,aADH,eAEvBxB,GAAcyB,QAAU,WAFD,eAGvBzB,GAAc0B,YAAc,gBAHL,eAIvB1B,GAAc2B,SAAW,YAJF,eAKvB3B,GAAc4B,YAAc,eALL,eAMvB5B,GAAc6B,YAAc,eANL,eAOvB7B,GAAc8B,SAAW,YAPF,eAQvB9B,GAAc+B,WAAa,cARJ,eASvB/B,GAAcgC,SAAW,YATF,eAUvBhC,GAAciC,QAAU,WAVD,IAiBbC,GAAc,SAACvM,GAC1B,OAAO4L,GAAW5L,IAAYA,I,SAGpB2L,K,iBAAAA,E,qBAAAA,E,6BAAAA,E,iCAAAA,E,6BAAAA,E,iCAAAA,E,oBAAAA,E,gBAAAA,E,2BAAAA,E,gCAAAA,Q,KETL,IAAMa,GAAqB,CAChC3K,KAAM,UACNlK,GAAI,uCACJ8U,OAAQ,uCACRC,WAAW,IAAIC,MAAOC,cACtBC,WAAW,IAAIF,MAAOC,cACtB9c,KAAM,CACJ+Y,YAAa,EAEbxD,IAAK,CACHxD,KAAM,iBACNiE,MAAO,UACPI,KAAM,SACNG,OAAQ,SACRnD,SAAU9C,GAASwC,IACnBO,SAAUhD,GAAaiE,SAGzB0E,MAAO,CACL,CACEnR,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,EACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,EACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,GACR6a,KAAM,eAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,EACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,aACNnV,MAAO,EACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,aACNnV,MAAO,GACP6a,KAAM,mBAIVrG,MAAO,CACL,CACE9O,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,MACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,IACP6a,KAAM,uBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,IACP6a,KAAM,yBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,IACP6a,KAAM,iCAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,KACR6a,KAAM,qCAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,MACR6a,KAAM,0BAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,KACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,MACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,OACR6a,KAAM,iBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,KACP6a,KAAM,uBAIV7D,UAAW,CACTzN,MAAO,SACP2N,OAAQ,IACRD,QAAS,GAGXrM,YAAU,qBACPwB,GAAcO,KAAO,GADd,eAEPP,GAAcQ,QAAU,GAFjB,eAGPR,GAAcS,SAAW,GAHlB,eAIPT,GAAcU,SAAW,GAJlB,eAKPV,GAAcW,UAAY,GALnB,eAMPX,GAAcY,MAAQ,GANf,eAOPZ,GAAca,UAAY,GAPnB,eAQPb,GAAcc,SAAW,GARlB,eASPd,GAActH,KAAO,GATd,eAUPsH,GAAcgB,MAAQ,GAVf,eAWPhB,GAAciB,UAAY,GAXnB,eAYPjB,GAAce,QAAU,GAZjB,IAeViK,SAAU,CACR,CACExH,KAAM,cACNkL,WAAY,EACZC,QAAS,EACTC,YAAa,sBAEf,CACEpL,KAAM,QACNkL,WAAY,EACZC,QAAS,EACTC,YAAa,oBAEf,CACEpL,KAAM,kBACNkL,WAAY,EACZC,QAAS,EACTC,YAAa,sBAIjBhN,OAAQ,CACN,CACEvM,KAAM4J,GAAUc,OAChB4B,QAASqK,GAAc4B,YACvB/L,KAAM,EACNtF,KAAM,SAER,CACElH,KAAM4J,GAAUc,OAChB4B,QAASqK,GAAc8B,SACvBjM,KAAM,EACNtF,KAAM,WAER,CACElH,KAAM4J,GAAUc,OAChB4B,QAASqK,GAAcgC,SACvBnM,KAAM,EACNtF,KAAM,WACN4D,WAAY,gBAEd,CACE9K,KAAM4J,GAAUc,OAChB4B,QAASqK,GAAc6B,YACvBhM,KAAM,EACNtF,KAAM,QACNsS,QAAS,aAEX,CACExZ,KAAM4J,GAAU6P,SAChBtL,KAAM,UACN3B,KAAM,UAER,CACExM,KAAM4J,GAAU6P,SAChBtL,KAAM,QACN3B,KAAM,cAER,CACExM,KAAM4J,GAAU8P,UAChBvL,KAAM,gBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,sBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,iBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,oBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,sBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,mBAIV/H,KAAM,GAENsP,UAAW,CACT,CACEvH,KAAM,sBACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,GAC7B/I,KAAM,IAER,CACE3C,KAAM,+BACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,GAC7BnS,MAAO,GAET,CACEyG,KAAM,aACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,GAC7B/I,KAAM,IAER,CACE3C,KAAM,sBACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,GAC7B/I,KAAM,IAER,CACE3C,KAAM,kBACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,GAC7BC,WAAY,qCACZhJ,KAAM,GAER,CACE3C,KAAM,eACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,GAC7B/I,KAAM,MAMRiJ,GAAU,IAAIC,IAEb,SAASC,GAA6C7T,GAA4C,IAAnC8T,EAAkC,uDAAP,GAG/F,GAAgB,QAFhB9T,EAAI,eAAQA,IAEHnC,GAAe,MAAM,IAAIvG,MAAJ,2BAA8B0I,EAAK+H,OACjE,GAAI4L,GAAQI,IAAI/T,EAAKnC,IAAO,MAAM,IAAIvG,MAAJ,gCAAmC0I,EAAK+H,OAM1E,OAJA2K,GAAQ1c,KAAKgK,KAAKoH,KAAKpH,GACvB8T,EAAajT,SAAQ,SAAAmT,GAAI,OAAIA,EAAKrR,WAAa3C,EAAKnC,MACpD8V,GAAQM,IAAIjU,EAAKnC,IAEVmC,EAGT,IAAMkU,GAAgC,CACpCrW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,iBACNnO,KAAM,aACN8Q,KAAM,IAEN9I,KAAM,KACNwS,WAAW,EACXC,cAAe,CACbC,SAAS,EACTnB,YACE,2KAMNU,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,cACNnO,KAAM,mBACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,KAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAY8U,UAHxB,eAIPjV,GAAYiC,OAAS,GAJd,IAOViT,YAAahV,GAAYiV,aAG3BhB,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,mBACNnO,KAAM,2BACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,MAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYiV,SAHxB,eAIPpV,GAAYiC,OAAS,GAJd,IAOVzB,QAAS,CACP,CAAEtG,KAAM0C,GAAW2C,UAAW6B,KAAMyD,GAAcY,MAAO7D,MAAO,MAIpEuS,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,kBACNnO,KAAM,2BACN2a,MAAO,CAAEC,OAAQ,GACjBjB,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7B/I,KAAM,IAENyI,YAAY,0VAOZpQ,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYiV,SAHxB,MAOZjB,GAAoB,CAClBhW,GAAI,uCACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASoR,OACnBhJ,KAAM,kBACNnO,KAAM,iBACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,IAEN3H,YAAU,qBACPqN,GAAWoB,GAAK,MADT,eAEPpB,GAAWsB,MAAQ,YAFZ,eAGPtB,GAAWqB,cAAgB,cAHpB,eAIPrB,GAAWuB,KAAO,SAJX,IAOVtN,MAAOkM,GAAc8B,SACrB0C,cAAelD,GAAmBmD,gBACjC,CACDnB,GAAuB,CACrBhW,GAAI,uCACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,cACNnO,KAAM,aAENgI,KAAM,KACNwS,WAAW,IAEbP,GAAuB,CACrBhW,GAAI,uCACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,cACNnO,KAAM,aAENgI,KAAM0O,GAAc2E,aAEtBpB,GAAuB,CACrBhW,GAAI,uCACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,aACNnO,KAAM,aAENgI,KAAM0O,GAAc2E,aAEtBpB,GAAQ,2BAAKK,IAAN,IAAsBrW,GAAI,4CAGnCgW,GAAoB,CAClBhW,GAAI,uCACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASoR,OACnBhJ,KAAM,mBACNnO,KAAM,eACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,IAEN3H,YAAU,qBACPqN,GAAWoB,GAAK,MADT,eAEPpB,GAAWsB,MAAQ,MAFZ,eAGPtB,GAAWqB,cAAgB,aAHpB,eAIPrB,GAAWuB,KAAO,SAJX,IAMV0C,cAAe,CACbC,SAAS,EACTnB,YACE,oDAGJ9O,MAAOkM,GAAc8B,SACrB0C,cAAelD,GAAmBqD,cACjC,CACDrB,GAAQ,2BAAKK,IAAN,IAAsBrW,GAAI,4CAGnC,IAAMsX,GAA4B,CAChCtB,GAAsB,CACpBhW,GAAI,uCACJ2D,SAAU7B,GAASyV,SACnBrN,KAAM,mBACNnO,KAAM,qBACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPkN,GAAatO,OAAS,GADf,eAEPsO,GAAac,OAAS,UAFf,eAGPd,GAAanP,KAAO,UAHb,MAMZ+S,GAAsB,CACpBhW,GAAI,uCACJ2D,SAAU7B,GAASyV,SACnBrN,KAAM,aACNnO,KAAM,WACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPkN,GAAatO,OAAS,GADf,eAEPsO,GAAa5L,MAAQ,cAFd,eAGP4L,GAAanP,KAAO,UAHb,MAMZ+S,GAAsB,CACpBhW,GAAI,uCACJ2D,SAAU7B,GAASyV,SACnBrN,KAAM,UACNnO,KAAM,WACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPkN,GAAatO,OAAS,GADf,eAEPsO,GAAa5L,MAAQ,WAFd,eAGP4L,GAAanP,KAAO,SAHb,MAMZ+S,GAAsB,CACpBhW,GAAI,uCACJ2D,SAAU7B,GAASyV,SACnBrN,KAAM,cACNnO,KAAM,WACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPkN,GAAatO,OAAS,GADf,eAEPsO,GAAa5L,MAAQ,YAFd,eAGP4L,GAAanP,KAAO,SAHb,MAMZ+S,GAAsB,CACpBhW,GAAI,uCACJ2D,SAAU7B,GAASyV,SACnBrN,KAAM,qBACNnO,KAAM,WACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPkN,GAAatO,OAAS,GADf,eAEPsO,GAAa5L,MAAQ,YAFd,eAGP4L,GAAanP,KAAO,UAHb,OAQRuU,GAAcxB,GAAqB,CACvChW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,eACNnO,KAAM,mBACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7BlB,OAAQ,CAAEC,KAAM,KAAMC,KAAM,KAC5B/I,KAAM,IAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAY8U,UAHxB,eAIPjV,GAAYqC,aAAe,GAJpB,MAQNuT,GAAMzB,GAAiB,CAC3BhW,GAAI,wCACJ2D,SAAU7B,GAAS2V,IACnBvN,KAAM,mBACNnO,KAAM,MACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,KAEN3H,YAAU,qBACPiN,GAAQY,aAAe,GADhB,eAEPZ,GAAQa,eAAiB,GAFlB,eAGPb,GAAQc,SAAW,GAHZ,IAMVyE,gBAAiB,GAEjB5S,WAAY0S,GAAYxX,KAG1BsX,GAAUtU,SAAQ,SAAA2U,GAAI,OAAIA,EAAK7S,WAAa2S,GAAIzX,MAChDyX,GAAIC,gBAAkBJ,GAAUlU,KAAI,SAAAuU,GAAI,OAAIA,EAAK3X,MAEjD,IAAM4X,GAAoB,CACxB5X,GAAI,KACJ2D,SAAU7B,GAASoR,OACnBhJ,KAAM,SACNnO,KAAM,QACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,KACN3H,YAAU,qBACPqN,GAAWoB,GAAK,MADT,eAEPpB,GAAWsB,MAAQ,YAFZ,eAGPtB,GAAWqB,cAAgB,eAHpB,eAIPrB,GAAWuB,KAAO,SAJX,IAOVtN,MAAOkM,GAAc8B,SACrB0C,cAAelD,GAAmB6D,QAG9BC,GAAiC,CACrC9X,GAAI,KACJ2D,SAAU7B,GAASiW,WACnBC,QAAS1F,GAAQwF,eACjB5N,KAAM,wBACNnO,KAAM,cACN2a,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,MAGFqL,GAAkC,CACtClY,GAAI,KACJ2D,SAAU7B,GAASiW,WACnBC,QAAS1F,GAAQ4F,gBACjBhO,KAAM,mBACNnO,KAAM,cACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,KAGFsL,GAA8B,CAClCnY,GAAI,KACJ2D,SAAU7B,GAASiW,WACnB7N,KAAM,eACNnO,KAAM,cACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,WAAW,eACRgN,GAAcpO,OAAS,GAG1BzB,QAAS,CACP,CAAEtG,KAAM0C,GAAW6C,aAAc2B,KAAMoP,GAAYoB,OAAQnZ,MAAO,KAItE0b,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAASsW,QACnBlO,KAAM,yBACNnO,KAAM,MACN8Q,KAAM,KACN6J,MAAO,CAAEC,OAAQ,GAEjBzR,YAAU,qBACPmN,GAAYc,SAAW,OADhB,eAEPd,GAAYe,MAAQ,IAFb,eAGPf,GAAYgB,cAAgB,IAHrB,eAIPhB,GAAYiB,SAAW,KAJhB,eAKPjB,GAAYpL,KAAO,IALZ,eAMPoL,GAAYkB,MAAQ,IANb,eAOPlB,GAAYmB,MAAQ,GAPb,eAQPnB,GAAYoB,OAAS,GARd,eASPpB,GAAYqB,KAAO,GATZ,IAYV2E,SAAUZ,GAAIzX,GACdsY,mBAAoB,gBACnB,CACDtC,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,4CAGpC,IAAMuY,GAAyB,CAC7BvY,GAAI,uCACJ2D,SAAU7B,GAASsW,QACnBrc,KAAM,qBACNmO,KAAM,wBACN2C,KAAM,IACN6J,MAAO,CAAEC,OAAQ,GAEjBzR,YAAU,qBACPmN,GAAYc,SAAW,GADhB,eAEPd,GAAYe,MAAQ,IAFb,eAGPf,GAAYgB,cAAgB,IAHrB,eAIPhB,GAAYiB,SAAW,KAJhB,eAKPjB,GAAYpL,KAAO,GALZ,eAMPoL,GAAYkB,MAAQ,GANb,eAOPlB,GAAYmB,MAAQ,GAPb,eAQPnB,GAAYoB,OAAS,GARd,eASPpB,GAAYqB,KAAO,MATZ,IAYV2E,SAAUZ,GAAIzX,GACdsY,mBAAoB,YAGtBtC,GAAO,2BACFuC,IADE,IAELvY,GAAI,uCACJkK,KAAM,4BACL,CACD8L,GAAQ,2BAAK8B,IAAN,IAAsB9X,GAAI,yCAA0C,CACzEgW,GAAQ,2BAAK4B,IAAN,IAAa5X,GAAI,4CAE1BgW,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,4CAIpCgW,GAAO,2BACFuC,IADE,IAELvY,GAAI,uCACJkK,KAAM,4BACL,CACD8L,GAAQ,2BAAK8B,IAAN,IAAsB9X,GAAI,yCAA0C,CACzEgW,GAAQ,2BAAK4B,IAAN,IAAa5X,GAAI,4CAE1BgW,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,4CAIpC,IC/rBYwY,GCAAC,G,GCEAC,GCAAC,GCFAC,G,sDL+rBNC,GAA4B,CAChC7Y,GAAI,KACJ2D,SAAU7B,GAASsW,QACnBlO,KAAM,iBACNnO,KAAM,qBACN8Q,KAAM,KACN6J,MAAO,CAAEC,OAAQ,GAEjBzR,YAAU,qBACPmN,GAAYc,SAAW,OADhB,eAEPd,GAAYe,MAAQ,GAFb,eAGPf,GAAYgB,cAAgB,IAHrB,eAIPhB,GAAYiB,SAAW,IAJhB,eAKPjB,GAAYpL,KAAO,GALZ,eAMPoL,GAAYkB,MAAQ,GANb,eAOPlB,GAAYmB,MAAQ,GAPb,eAQPnB,GAAYoB,OAAS,GARd,eASPpB,GAAYqB,KAAO,MATZ,IAYV2E,SAAUZ,GAAIzX,GACdsY,mBAAoB,gBAGtBtC,GAAO,2BACF6C,IADE,IAEL7Y,GAAI,uCACJkK,KAAM,qBACL,CACD8L,GAAQ,2BAAK8B,IAAN,IAAsB9X,GAAI,yCAA0C,CACzEgW,GAAQ,2BAAK4B,IAAN,IAAa5X,GAAI,4CAE1BgW,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,0CAClCgW,GAAQ,2BAAKmC,IAAN,IAAmBnY,GAAI,4CAGhCgW,GAAO,2BACF6C,IADE,IAEL7Y,GAAI,uCACJkK,KAAM,qBACL,CACD8L,GAAQ,2BAAK8B,IAAN,IAAsB9X,GAAI,yCAA0C,CACzEgW,GAAQ,2BAAK4B,IAAN,IAAa5X,GAAI,4CAE1BgW,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,0CAClCgW,GAAQ,2BAAKmC,IAAN,IAAmBnY,GAAI,4CAGhCgW,GAAO,2BACF6C,IADE,IAEL7Y,GAAI,uCACJkK,KAAM,qBACL,CACD8L,GAAQ,2BAAK8B,IAAN,IAAsB9X,GAAI,yCAA0C,CACzEgW,GAAQ,2BAAK4B,IAAN,IAAa5X,GAAI,4CAE1BgW,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,0CAClCgW,GAAQ,2BAAKmC,IAAN,IAAmBnY,GAAI,4CAGhCgW,GAAO,2BACF6C,IADE,IAEL7Y,GAAI,uCACJkK,KAAM,qBACL,CACD8L,GAAQ,2BAAK8B,IAAN,IAAsB9X,GAAI,yCAA0C,CACzEgW,GAAQ,2BAAK4B,IAAN,IAAa5X,GAAI,4CAE1BgW,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,0CAClCgW,GAAQ,2BAAKmC,IAAN,IAAmBnY,GAAI,4CAGhCgW,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAASsW,QACnBrc,KAAM,oBACNmO,KAAM,+BACN2C,KAAM,IACN6J,MAAO,CAAEC,OAAQ,GAEjBzR,YAAU,qBACPmN,GAAYc,SAAW,GADhB,eAEPd,GAAYe,MAAQ,IAFb,eAGPf,GAAYgB,cAAgB,IAHrB,eAIPhB,GAAYiB,SAAW,KAJhB,eAKPjB,GAAYpL,KAAO,GALZ,eAMPoL,GAAYkB,MAAQ,GANb,eAOPlB,GAAYmB,MAAQ,GAPb,eAQPnB,GAAYoB,OAAS,GARd,eASPpB,GAAYqB,KAAO,MATZ,IAYV2E,SAAUZ,GAAIzX,GACdsY,mBAAoB,YACnB,CACDtC,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,4CAGpCgW,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAASsW,QACnBrc,KAAM,oBACNmO,KAAM,WACN2C,KAAM,IACNiM,SAAU,EACVpC,MAAO,CAAEC,OAAQ,GAEjBzR,YAAU,qBACPmN,GAAYc,SAAW,GADhB,eAEPd,GAAYe,MAAQ,GAFb,eAGPf,GAAYgB,cAAgB,IAHrB,eAIPhB,GAAYiB,SAAW,IAJhB,eAKPjB,GAAYpL,KAAO,GALZ,eAMPoL,GAAYkB,MAAQ,GANb,eAOPlB,GAAYmB,MAAQ,GAPb,eAQPnB,GAAYoB,OAAS,GARd,eASPpB,GAAYqB,KAAO,MATZ,IAYV2E,SAAUZ,GAAIzX,GACdsY,mBAAoB,YACnB,CACDtC,GAAQ,2BAAKkC,IAAN,IAAuBlY,GAAI,4CAGpCgW,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,YACNnO,KAAM,UACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,KAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa8W,OAD1B,eAEPlX,GAAYiC,OAAS,GAFd,eAGPjC,GAAYoC,SAAW,IAHhB,eAIPpC,GAAYmC,YAAc,KAJnB,eAKPnC,GAAYkC,KAAO/B,GAAYgX,SALxB,KAOT,CACDhD,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,YACNnO,KAAM,mBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,KAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa8W,OAD1B,eAEPlX,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYgX,SAHxB,eAIPnX,GAAYqC,aAAe,GAJpB,MAOZ8R,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,YACNnO,KAAM,mBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa8W,OAD1B,eAEPlX,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYgX,SAHxB,eAIPnX,GAAYqC,aAAe,GAJpB,MAOZ8R,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,mBACNnO,KAAM,mBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa8W,OAD1B,eAEPlX,GAAYqC,aAAe,GAFpB,eAGPrC,GAAYmC,YAAc,KAHnB,eAIPnC,GAAYkC,KAAO/B,GAAYgX,SAJxB,MAOZhD,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,qBACNnO,KAAM,mBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,KAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa8W,OAD1B,eAEPlX,GAAYqC,aAAe,GAFpB,eAGPrC,GAAYmC,YAAc,KAHnB,eAIPnC,GAAYkC,KAAO/B,GAAYgX,SAJxB,MAOZhD,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,uBACNnO,KAAM,mBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,KAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa8W,OAD1B,eAEPlX,GAAYqC,aAAe,GAFpB,eAGPrC,GAAYmC,YAAc,KAHnB,eAIPnC,GAAYkC,KAAO/B,GAAYgX,SAJxB,QASdhD,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,WACNnO,KAAM,mBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAY8U,UAHxB,KAKT,CACDd,GAAQ,CACNhW,GAAI,uCACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,cACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,WAAY,CACV,wBAAyB,EACzB,sBAAuB,MACvB,wBAAyB,OAK/B8Q,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,qBACNnO,KAAM,mBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,MAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYiC,OAAS,GAFd,eAGPjC,GAAYmC,YAAc,KAHnB,eAIPnC,GAAYkC,KAAO/B,GAAYkX,UAJxB,IAOV7W,QAAS,CACP,CAAEtG,KAAM0C,GAAW2C,UAAW6B,KAAMyD,GAAcS,SAAU1D,MAAO,MAIvEuS,GAAiB,CACfhW,GAAI,uCACJ2D,SAAU7B,GAASqX,IACnBjP,KAAM,oBACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,KAENyI,YAAa,kBAEbpQ,WAAW,eACR+M,GAAQnO,OAAS,KAItBkS,GAAiB,CACfhW,GAAI,uCACJ2D,SAAU7B,GAASqX,IACnBjP,KAAM,cACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,IAENyI,YAAa,aAEbpQ,WAAW,eACR+M,GAAQnO,OAAS,IAEnB,CACDkS,GAAqB,CACnBhW,GAAI,uCACJ2D,SAAU7B,GAAS8U,QACnB1M,KAAM,8BACNnO,KAAM,eACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,IAEN3H,WAAW,eACR8M,GAAYlO,OAAS,OAK5BkS,GAAiB,CACfhW,GAAI,uCACJ2D,SAAU7B,GAASqX,IACnBjP,KAAM,aACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,IAENyI,YAAa,aAEbpQ,WAAW,eACR+M,GAAQnO,OAAS,KAItBkS,GAAQ,CACNhW,GAAI,uCACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,mBACNnO,KAAM,OACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,M,SCzhCI2L,K,wBAAAA,E,gCAAAA,E,gCAAAA,E,oCAAAA,E,0BAAAA,E,gCAAAA,E,+BAAAA,Q,cCAAC,K,kCAAAA,E,2BAAAA,Q,cCEAC,K,qCAAAA,E,iCAAAA,E,sCAAAA,Q,KAMZlW,IAAiB,kBAAC,GACfkW,GAAa3F,aAAe,iBADd,YAAC,GAEf2F,GAAaxT,WAAa,cAFZ,YAAC,GAGfwT,GAAaU,aAAe,iBAHd,K,SCNLT,K,8BAAAA,Q,KAIZnW,GAAkB,eACfmW,GAAQU,aAAe,W,SCPdT,K,wBAAAA,E,qBAAAA,Q,KC4BL,IAAMU,GAAqB,CAChCpP,KAAM,UACNlK,GAAI,uCACJ8U,OAAQ,uCACRC,WAAW,IAAIC,MAAOC,cACtBC,WAAW,IAAIF,MAAOC,cACtB9c,KAAM,CACJ+Y,YAAa,EAEbxD,IAAK,CACHxD,KAAM,UACNqB,SAAU9C,GAASwC,IACnBO,SAAUhD,GAAaiE,QACvBiC,OAAQ,OACRH,KAAM,kBAGR4C,MAAO,CACL,CACEnR,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,EACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,EACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,aACNnV,MAAO,EACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,GACR6a,KAAM,uBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,GACR6a,KAAM,uBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,GACR6a,KAAM,6BAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,EACR6a,KAAM,uBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,GACP6a,KAAM,iBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,GACP6a,KAAM,uBAIVrG,MAAO,CACL,CACE9O,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,IACR6a,KAAM,aAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,MACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,IACP6a,KAAM,oBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,IACP6a,KAAM,gBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,KACP6a,KAAM,kBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,IACR6a,KAAM,+BAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,OAAQ,OACR6a,KAAM,sBAER,CACEnV,GAAI8R,KACJrC,KAAM,mBACNnV,MAAO,KACP6a,KAAM,kBAIV7D,UAAW,CACTzN,MAAO,SACP2N,OAAQ,IACRD,QAAS,GAGXrM,YAAU,qBACPwB,GAAcO,KAAO,GADd,eAEPP,GAAcQ,QAAU,GAFjB,eAGPR,GAAcS,SAAW,GAHlB,eAIPT,GAAcU,SAAW,GAJlB,eAKPV,GAAcW,UAAY,GALnB,eAMPX,GAAcY,MAAQ,GANf,eAOPZ,GAAca,UAAY,GAPnB,eAQPb,GAAcc,SAAW,GARlB,eASPd,GAActH,KAAO,GATd,eAUPsH,GAAcgB,MAAQ,GAVf,eAWPhB,GAAciB,UAAY,GAXnB,eAYPjB,GAAce,QAAU,GAZjB,IAeViK,SAAU,CACR,CACExH,KAAM,gBACNkL,WAAY,EACZC,QAAS,EACTC,YAAa,gCAEf,CACEpL,KAAM,WACNkL,WAAY,EACZC,QAAS,EACTC,YAAa,SAEf,CACEpL,KAAM,YACNkL,WAAY,EACZC,QAAS,EACTC,YAAa,cAIjBhN,OAAQ,CACN,CACEvM,KAAM4J,GAAUc,OAChB4B,QAASqK,GAAcyB,QACvB5L,KAAM,EACNtF,KAAM,QACNsS,QAAS,YACTvO,UAAW,aAEb,CACEjL,KAAM4J,GAAUc,OAChB4B,QAASqK,GAAc8B,SACvBjM,KAAM,EACNtF,KAAM,UACN4D,WAAYmN,GAAmBmD,gBAEjC,CACEpb,KAAM4J,GAAUc,OAChB4B,QAASqK,GAAc+B,WACvBlM,KAAM,EACNtF,KAAM,YACNsS,QAAS,SAEX,CACExZ,KAAM4J,GAAUc,OAChB4B,QAASqK,GAAc0B,YACvB7L,KAAM,EACNtF,KAAM,WAER,CACElH,KAAM4J,GAAU6P,SAChBtL,KAAM,UACN3B,KAAM,UAER,CACExM,KAAM4J,GAAU8P,UAChBvL,KAAM,yBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,oBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,kBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,wBAER,CACEnO,KAAM4J,GAAU8P,UAChBvL,KAAM,gBAIV/H,KAAM,GAENsP,UAAW,CACT,CACEvH,KAAM,kBACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,IAC7BC,WAAY,qCACZhJ,KAAM,GAER,CACE3C,KAAM,wBACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,IAC7BC,WAAY,wDACZhJ,KAAM,IAER,CACE3C,KAAM,WACNwL,OAAQ,CAAEC,KAAM,MAAOC,KAAM,IAC7BC,WAAY,eACZpS,MAAO,OAMf,SAASuS,GAA6C7T,GAA4C,IAAnC8T,EAAkC,uDAAP,GAMxF,OALA9T,EAAI,2BAAQA,GAAR,IAAc+O,YAAa,EAAGlR,GAAI8R,OAErCwH,GAAQnhB,KAAKgK,KAAoBoH,KAAKpH,GACvC8T,EAAajT,SAAQ,SAAAmT,GAAI,OAAIA,EAAKrR,WAAa3C,EAAKnC,MAE7CmC,EAGT,IAAMkU,GAAgC,CACpCrW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,iBACNnO,KAAM,aACN8Q,KAAM,IAEN9I,KAAM,KACNwS,WAAW,EAEXC,cAAe,CACbC,SAAS,EACTnB,YACE,yKAGFjT,QAAS,CACP,CAAEtG,KAAM0C,GAAW8a,cAAeC,SAAU,aAAc/V,MAAO,MAKvEuS,GAAoB,CAClBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASoR,OACnBhJ,KAAM,kBACNnO,KAAM,iBACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,IAEN3H,YAAU,qBACPqN,GAAWoB,GAAK,MADT,eAEPpB,GAAWsB,MAAQ,YAFZ,eAGPtB,GAAWqB,cAAgB,cAHpB,eAIPrB,GAAWuB,KAAO,SAJX,IAOVtN,MAAOkM,GAAc8B,SACrB0C,cAAelD,GAAmBmD,gBACjC,CACDnB,GAAuB,CACrBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,cACNnO,KAAM,aAENgI,KAAM,KACNwS,WAAW,IAEbP,GAAuB,CACrBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,cACNnO,KAAM,aAENgI,KAAM0O,GAAc2E,aAEtBpB,GAAuB,CACrBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,aACNnO,KAAM,aAENgI,KAAM,KACNwS,WAAW,IAEbP,GAAQK,IACRL,GAAuB,CACrBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,WACNnO,KAAM,aACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAENyI,YAAa,gGAEbvR,KAAM0O,GAAcgH,OACpBlD,WAAW,MAIfP,GAAoB,CAClBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASoR,OACnBhJ,KAAM,uBACNnO,KAAM,eACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,IAEN3H,YAAU,qBACPqN,GAAWoB,GAAK,SADT,eAEPpB,GAAWsB,MAAQ,SAFZ,eAGPtB,GAAWqB,cAAgB,cAHpB,eAIPrB,GAAWuB,KAAO,SAJX,IAOVtN,MAAOkM,GAAc8B,SACrB0C,cAAelD,GAAmB0F,cACjC,CACD1D,GAAQK,IACRL,GAAuB,CACrBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASwU,UACnBpM,KAAM,qBACNnO,KAAM,aACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAENyI,YAAa,gGACbvR,KAAM,SAIViS,GAAoB,CAClBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASoR,OACnBhJ,KAAM,wBACNnO,KAAM,QACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPqN,GAAWoB,GAAK,SADT,eAEPpB,GAAWsB,MAAQ,MAFZ,eAGPtB,GAAWqB,cAAgB,cAHpB,eAIPrB,GAAWuB,KAAO,QAJX,eAKPvB,GAAWwB,SAAW,OALf,IAQVvN,MAAOkM,GAAc8B,SACrB0C,cAAelD,GAAmB2F,SACjC,CACD3D,GAAQK,MAGVL,GAAoB,CAClBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASoR,OACnBhJ,KAAM,iBACNnO,KAAM,QACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPqN,GAAWoB,GAAK,MADT,eAEPpB,GAAWsB,MAAQ,YAFZ,eAGPtB,GAAWqB,cAAgB,aAHpB,eAIPrB,GAAWwB,SAAW,OAJf,IAOVvN,MAAOkM,GAAc0B,YACrB8C,cAAe,WAGjBlB,GAAoB,CAClBhW,GAAI,KACJ0V,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7BjS,SAAU7B,GAASoR,OACnBhJ,KAAM,eACNnO,KAAM,cACN2a,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPqN,GAAWxW,KAAO,WADX,eAEPwW,GAAWoB,GAAK,SAFT,eAGPpB,GAAWqB,cAAgB,aAHpB,IAMVpN,MAAOkM,GAAc0B,YACrB8C,cAAe,WAGjBlB,GAAqB,CACnBhW,GAAI,KACJkK,KAAM,mBACNnO,KAAM,2BACN4H,SAAU7B,GAAS8B,QACnB8R,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,OAENyI,YAAY,snBAWZpQ,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYmC,YAAc,MAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYiV,SAHxB,eAIPpV,GAAYiC,OAAS,GAJd,IAOV2S,SAAS,EACTpU,QAAS,CACP,CAAEtG,KAAM0C,GAAW2C,UAAW6B,KAAMyD,GAAcS,SAAU1D,MAAO,GACnE,CAAE1H,KAAM0C,GAAW+C,UAAWoY,KAAM,MAIxC5D,GAAqB,CACnBhW,GAAI,KACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,qBACNnO,KAAM,kBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,KAENyI,YAAY,oIAKZpQ,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYiV,SAHxB,MAOZjB,GAAqB,CACnBhW,GAAI,KACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,eACNnO,KAAM,kBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,KAENyI,YAAY,oOAMZpQ,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYiC,OAAS,GAFd,eAGPjC,GAAYmC,YAAc,KAHnB,eAIPnC,GAAYkC,KAAO/B,GAAYiV,SAJxB,IAOVR,SAAS,EACTpU,QAAS,CACP,CAAEtG,KAAM0C,GAAW2C,UAAW6B,KAAMyD,GAAcQ,QAASzD,MAAO,MAItEuS,GAAqB,CACnBhW,GAAI,KACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,eACNnO,KAAM,kBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,KAEN3H,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa8W,OAD1B,eAEPlX,GAAYiC,OAAS,GAFd,eAGPjC,GAAYmC,YAAc,KAHnB,eAIPnC,GAAYkC,KAAO/B,GAAYiV,SAJxB,IAOV3B,YAAY,gHAKZjT,QAAS,CACP,CAAEtG,KAAM0C,GAAW8a,cAAeC,SAAUhB,GAAmBqB,UAAWpW,MAAO,MAMrFuS,GAAqB,CACnBhW,GAAI,KACJkK,KAAM,cACNnO,KAAM,2BACN4H,SAAU7B,GAAS8B,QACnB8R,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,KAENyI,YAAY,isBAYZpQ,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa6X,MAD1B,eAEPjY,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYiV,SAHxB,IAMVR,SAAS,EACTpU,QAAS,CACP,CAAEtG,KAAM0C,GAAW2C,UAAW6B,KAAMyD,GAAcW,UAAW5D,MAAO,GACpE,CAAE1H,KAAM0C,GAAW2C,UAAW6B,KAAMyD,GAAca,UAAW9D,OAAQ,MAIzEuS,GAAqB,CACnBhW,GAAI,KACJkK,KAAM,YACNnO,KAAM,kBACN4H,SAAU7B,GAAS8B,QACnB8R,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,IAENyI,YAAY,iUASZpQ,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa8X,OAD1B,eAEPlY,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYiV,SAHxB,IAMV5U,QAAS,CACP,CAAEtG,KAAM0C,GAAWmD,eAAgB6B,MAAO,MAI9CuS,GAAqB,CACnBhW,GAAI,KACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,6BACNnO,KAAM,2BACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAENyI,YAAY,uVASZpQ,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYmC,YAAc,KAFnB,eAGPnC,GAAYkC,KAAO/B,GAAYiV,SAHxB,IAMVR,SAAS,EACTpU,QAAS,CACP,CAAEtG,KAAM0C,GAAWiD,WAAY8E,MAAOkM,GAAc8B,SAAU/Q,MAAO,MAIzEuS,GAAqB,CACnBhW,GAAI,KACJ2D,SAAU7B,GAAS8B,QACnBsG,KAAM,mBACNnO,KAAM,2BACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,MAENyI,YAAY,6OAQZpQ,YAAU,qBACPrD,GAAYgC,MAAQ5B,GAAa4U,MAD1B,eAEPhV,GAAYiC,OAAS,GAFd,eAGPjC,GAAYmC,YAAc,KAHnB,eAIPnC,GAAYkC,KAAO/B,GAAYiV,SAJxB,IAOVR,SAAS,EACTpU,QAAS,CACP,CAAEtG,KAAM0C,GAAW2C,UAAW6B,KAAMyD,GAAcY,MAAO7D,MAAO,MAIpEuS,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,eACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPwT,GAAa3F,aAAe,GADrB,eAEP2F,GAAaxT,WAAa,OAFnB,eAGPwT,GAAaU,aAAe,GAHrB,MAOZpD,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,aACNnO,KAAM,UACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,MAGRmJ,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,UACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,WAAW,eACRgN,GAAcjO,SAAW,IAE3B,CACD+R,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,YACNnO,KAAM,qBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,WAAW,eACRgN,GAAchO,aAAe,KAGlC8R,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,YACNnO,KAAM,qBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,GAEN3H,WAAW,eACRgN,GAAchO,aAAe,KAGlC8R,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,uBACNnO,KAAM,qBACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,WAAW,eACRgN,GAAchO,aAAe,OAKpC8R,GAAmB,CACjBhW,GAAI,KACJ2D,SAAU7B,GAASyR,MACnBrJ,KAAM,eACNnO,KAAM,QACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAEN3H,YAAU,qBACPuT,GAAUuB,aAAe,GADlB,eAEPvB,GAAUxU,SAAW,GAFd,MAMZ+R,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASyR,MACnBrJ,KAAM,8BACNnO,KAAM,QACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,KAEN3H,WAAY,CACV,qBAAsB,EACtB,iBAAkB,IAEnB,CACD8Q,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmY,SACnB/P,KAAM,oBACNnO,KAAM,YACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAE7BY,cAAe,CACbC,SAAS,EACTnB,YAAa,+CAKnBU,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,SACNnO,KAAM,UACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,KAEN3H,WAAW,eACRyT,GAAQU,aAAe,GAG1B7C,cAAe,CACbC,SAAS,EACTnB,YAAY,8EAKd4E,IAAKtB,GAAQuB,QACZ,CACDnE,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,kBACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IACNiM,SAAU,MAId9C,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,gBACNnO,KAAM,MACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IAENqN,IAAKtB,GAAQwB,WAGfpE,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASmX,MACnB/O,KAAM,eACNnO,KAAM,aACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,GACjB9J,KAAM,IACNiM,SAAU,GACVxD,YAAY,mMAMdU,GAAqB,CACnBhW,GAAI,KACJ2D,SAAU7B,GAASsW,QACnBlO,KAAM,gBACNnO,KAAM,OACN8Q,KAAM,KACN6J,MAAO,CAAEC,OAAQ,GACjBjB,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAE7B1Q,YAAU,qBACPmN,GAAYc,SAAW,OADhB,eAEPd,GAAYe,MAAQ,IAFb,eAGPf,GAAYgB,cAAgB,IAHrB,eAIPhB,GAAYiB,SAAW,KAJhB,eAKPjB,GAAYpL,KAAO,GALZ,eAMPoL,GAAYkB,MAAQ,GANb,eAOPlB,GAAYmB,MAAQ,GAPb,eAQPnB,GAAYoB,OAAS,GARd,eASPpB,GAAYqB,KAAO,GATZ,IAYV4E,mBAAoB,iBAGtBtC,GAAqB,CACnBhW,GAAI,KACJ2D,SAAU7B,GAASsW,QACnBlO,KAAM,qBACNnO,KAAM,MACN8Q,KAAM,IACN6J,MAAO,CAAEC,OAAQ,GACjBjB,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAE7B1Q,YAAU,qBACPmN,GAAYc,SAAW,OADhB,eAEPd,GAAYe,MAAQ,IAFb,eAGPf,GAAYgB,cAAgB,IAHrB,eAIPhB,GAAYiB,SAAW,KAJhB,eAKPjB,GAAYpL,KAAO,GALZ,eAMPoL,GAAYkB,MAAQ,GANb,eAOPlB,GAAYmB,MAAQ,GAPb,eAQPnB,GAAYoB,OAAS,GARd,eASPpB,GAAYqB,KAAO,GATZ,IAYV4E,mBAAoB,gBACnB,CACDtC,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAASiW,WACnBC,QAAS1F,GAAQ4F,gBACjBhO,KAAM,mBACNnO,KAAM,cACN2a,MAAO,CAAEC,OAAQ,EAAGC,SAAS,GAC7B/J,KAAM,QAIVmJ,GAAiB,CACfhW,GAAI,KACJ2D,SAAU7B,GAASqX,IACnBjP,KAAM,gBACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,KAENyI,YAAa,kBAEbpQ,WAAW,eACR+M,GAAQnO,OAAS,IAEnB,CACDkS,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAAS8U,QACnB1M,KAAM,2BACNnO,KAAM,eACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,IAEN3H,WAAW,eACR8M,GAAYlO,OAAS,KAG1BkS,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAAS8U,QACnB1M,KAAM,yBACNnO,KAAM,eACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,IAEN3H,WAAW,eACR8M,GAAYlO,OAAS,KAG1BkS,GAAQ,CACNhW,GAAI,KACJ2D,SAAU7B,GAAS8U,QACnB1M,KAAM,gCACNnO,KAAM,eACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,IAEN3H,WAAW,eACR8M,GAAYlO,OAAS,OAK5BkS,GAAiB,CACfhW,GAAI,KACJ2D,SAAU7B,GAASqX,IACnBjP,KAAM,iBACNnO,KAAM,WACN2Z,OAAQ,CAAEC,KAAM,MAAOC,KAAM,KAC7Bc,MAAO,CAAEC,OAAQ,EAAGsB,SAAS,GAC7BpL,KAAM,IAENyI,YAAa,iBAEbpQ,WAAW,eACR+M,GAAQnO,OAAS,KC/+BtB,IAAMuW,GAAsB,SAACC,GAAD,0BAAsCA,IAC5DC,GAAuB,aAKtB,SAASC,KAEZ,IAAMC,EAAmC,GAgB3C,MAdqB,CACjB9H,GAAiBkC,IACjBlC,GAAiB2G,KAGRtW,SAAQ,SAAA8E,GACI,OAAjBA,EAAU9H,KAAa8H,EAAU9H,GAAK8R,MAWzC,SAAwBhK,GAC7B,GAAoB,MAAhBA,EAAU9H,GAAY,MAAM,IAAIvG,MAAM,uBAC1CwM,aAAaI,QAAQgU,GAAoBvS,EAAU9H,IAAK0a,KAAKC,UAAU7S,IAZnE8S,CAAc9S,GACd2S,EAAgB3S,EAAU9H,IAAM8H,EAAUoC,QAG5CjE,aAAaI,QAAQkU,GAAsBG,KAAKC,UAAUF,IAGrDC,KAAKG,MAAM5U,aAAaC,QAAQqU,KAAyB,MCvB3D,IAAMO,GAAwB,WACnC,IAAM3R,EAAUC,cAChB,EAAoCtP,mBAA0B,IAA9D,mBAAOihB,EAAP,KAAmBC,EAAnB,KAIA,OAFA7gB,qBAAU,kBAAM6gB,EAAcR,QAAmB,IAG/C,cAAC,GAAD,UACE,cAACxM,EAAA,EAAD,UACGlL,OAAOC,QAAQgY,GAAY3X,KAAI,mCAAEpD,EAAF,KAAMkK,EAAN,YAC9B,cAAChO,EAAA,EAAD,CAEEC,QAAS,kBAAMgN,EAAQI,KAAR,WAAiBvJ,KAChCxE,GAAI,CAAEqC,QAAS,EAAGgN,SAAU,GAAIoQ,eAAgB,cAHlD,SAKG/Q,GAJIlK,WChBJkb,GAAe,SAACxF,GAC3B,MAAsB,kBAAXA,EAA4BA,EACjC,GAAN,OAAUA,EAAOC,KAAjB,cAA2BD,EAAOE,O,UCSvBuF,GAA4C,SAAC,GAOnD,IANLjR,EAMI,EANJA,KAMI,IALJ4O,gBAKI,MALO,EAKP,EAJJ5T,EAII,EAJJA,WACA+B,EAGI,EAHJA,KACAmU,EAEI,EAFJA,OACA7jB,EACI,EADJA,SAEA,OACE,cAACkJ,EAAA,EAAD,CAAO/E,QAAQ,WAAWF,GAAI,CAAEqC,QAAS,EAAGG,QAAS,QAArD,SACE,eAACgQ,EAAA,EAAD,CAAO/P,IAAK,EAAGzC,GAAI,CAAEsC,MAAO,QAA5B,UACE,eAACkQ,EAAA,EAAD,CAAO/P,IAAK,EAAGgQ,UAAW,MAA1B,UACE,eAAClQ,EAAA,EAAD,CAAKvC,GAAI,CAAE8C,SAAU,GAArB,UACE,eAACP,EAAA,EAAD,WACE,cAAC/B,EAAA,EAAD,CACER,GAAI,CACFwC,QAAS,eACThH,WAAYb,EACZkJ,MAAO,gBAJX,SAOG6K,IAGF4O,GAAY,GACX,cAACuC,GAAA,EAAD,CACE7f,GAAI,CAAE8f,WAAY,EAAGC,cAAe,OACpCjgB,MAAK,WAAMwd,GACXpd,QAAQ,WACRyD,KAAK,aAKX,cAACpB,EAAA,EAAD,UACGkJ,GAAQ1P,OAIZ2N,GAAc,cAACnH,EAAA,EAAD,UAAMmH,OAGtBkW,GACC,cAACrd,EAAA,EAAD,UAAMqd,UChDHI,GAAgC,SAAC,GAGvC,IAFLC,EAEI,EAFJA,SACAlkB,EACI,EADJA,SAEA,OACE,cAACkJ,EAAA,EAAD,CACE/E,QAAQ,WACRF,GAAI,CACFwC,QAAS,OACTH,QAAS,EACTI,IAAK,EACLiQ,SAAU,OACVhQ,cAAeud,EAAW,SAAW,MACrCR,eAAgB,gBARpB,SAWG1jB,KAUMmkB,GAAsB,SAAC,GAG7B,IAFLxR,EAEI,EAFJA,KACA5P,EACI,EADJA,MAMA,MAJa,YAAT4P,IACF5P,EAASA,EAAiBqhB,QAAQ,GAAGrV,YAIrC,eAACvI,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQC,IAAK,EAAG2d,WAAY,UAAhD,UACE,cAAC7d,EAAA,EAAD,CAAKvC,GAAI,CAAEqP,SAAU,GAAI7M,QAAS,eAAgBqB,MAAO,eAAgBpD,UAAW,OAAQqC,SAAU,GAAtG,SACG4L,IAEH,cAACnM,EAAA,EAAD,CAAKvC,GAAI,CAAEqP,SAAU,GAAI7M,QAAS,eAAgB/B,UAAW,QAASqC,SAAU,GAAhF,SACGhE,GAAS,UC3CLuhB,GAAc,SAACnF,GAC1B,MAAM,GAAN,OAAUA,EAAMC,QAAhB,OAAyBD,EAAMuB,QAAU,MAAQ,IAAjD,OAAsDvB,EAAME,QAAU,MAAQ,KCInEkF,GAA0C,SAAC,GAGjD,IAFL5W,EAEI,EAFJA,WACAuW,EACI,EADJA,SAEA,OAAKvW,EACkC,IAAnCpC,OAAOuC,KAAKH,GAAYnI,OAAqB,KAG/C,cAAC,GAAD,CAAW0e,SAAUA,EAArB,SACG3Y,OAAOC,QAAQmC,GAAY9B,KAAI,mCAAErH,EAAF,KAAQzB,EAAR,YAC9B,cAAC,GAAD,CAAiB4P,KAAMxH,GAAW3G,GAAOzB,MAAOA,GAArCyB,QANO,M,mBCL1BggB,KAAQ3F,IAAI4F,KAAmBC,MAYxB,ICPKC,GCMAC,GFCCC,GAAgC,SAAC,GASvC,IARLC,EAQI,EARJA,MAQI,IAPJC,qBAOI,MAPY,GAOZ,MANJxD,gBAMI,MANO,EAMP,EALJyD,EAKI,EALJA,SACAC,EAII,EAJJA,WACAjlB,EAGI,EAHJA,SAGI,IAFJklB,SAAUC,OAEN,SADJC,EACI,EADJA,WAEA,EAAgC7iB,mBAAkB4iB,GAAlD,mBAAOD,EAAP,KAAiBG,EAAjB,KAEA,OACE,eAACnc,EAAA,EAAD,CAAOoc,UAAW,EAAlB,UACE,eAAC9e,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQC,IAAK,EAAGJ,QAAS,GAA7C,UACG8e,GACC,cAAC5e,EAAA,EAAD,UACE,cAACmB,EAAA,EAAD,CAAYC,KAAK,QAAQhD,QAAS,kBAAMygB,GAAaH,IAArD,SACE,cAAC,KAAD,CAAiBxT,KAAMwT,EAAW,oBAAsB,CAAC,MAAO,4BAKtE,eAAC1e,EAAA,EAAD,CAAKvC,GAAI,CAAE8C,SAAU,GAArB,UACE,eAACP,EAAA,EAAD,WACE,cAAC/B,EAAA,EAAD,CACER,GAAI,CACFwC,QAAS,eACThH,WAAYb,EACZ0U,SAAUyR,EACVjd,MAAO,gBALX,SAOEgd,IACDvD,GAAY,GACX,cAACuC,GAAA,EAAD,CACE7f,GAAI,CAAE8f,WAAY,EAAGC,cAAe,OACpCjgB,MAAK,WAAMwd,GACXpd,QAAQ,WACRyD,KAAK,aAKVod,KAGFC,KAGFC,GAAYllB,MGnENulB,GAAkB,SAAC,GAEzB,IADLvlB,EACI,EADJA,SAEA,OACE,cAACwG,EAAA,EAAD,CAAKvC,GAAI,CAAEqC,QAAS,GAApB,SAA0BtG,KCUjBwlB,GAAmC,SAAC,GAI1C,IAHL5G,EAGI,EAHJA,KACAsG,EAEI,EAFJA,SACAllB,EACI,EADJA,SAEMylB,EAAkB,eAACjf,EAAA,EAAD,CAAKvC,GAAI,CAAEqP,SAAU,GAAI5O,UAAW,SAApC,UACrBka,EAAKO,OAAS,cAAC,GAAD,CAAMxM,KAAK,QAAQ5P,MAAOuhB,GAAY1F,EAAKO,SACzDP,EAAKtJ,MAAQ,cAAC,GAAD,CAAM3C,KAAK,OAAO5P,MAAO4U,GAAYiH,EAAKtJ,QACvDsJ,EAAKT,QAAU,cAAC,GAAD,CAAMxL,KAAK,SAAS5P,MAAO4gB,GAAa/E,EAAKT,aAGzDO,EAAepR,GAAgBsR,EAAKnW,IAEpC2c,EAAaM,QACjB9G,EAAKb,aACFa,EAAKK,eACLL,EAAKjR,YACL3N,GACA0e,EAAalZ,OAAS,GAGrBmI,EAAavC,GAAoBwT,EAAKjR,YAAc,GAAI+Q,GAE9D,OACE,cAAC,GAAD,CAAmB/Q,WAAYA,EAA/B,SACE,eAAC,GAAD,CACEmX,MAAOlG,EAAKjM,KACZ4O,SAAU3C,EAAK2C,UAAY,EAC3ByD,SAAUpG,EAAKpa,KACfygB,WAAYQ,EACZL,WAAYA,EACZF,SAAUA,EANZ,UAQGtG,EAAKb,aACJ,cAAC,GAAD,UACE,cAACtZ,EAAA,EAAD,CAAYR,GAAI,CAAE0hB,UAAW,UAA7B,SAA0C/G,EAAKb,gBAIlDa,EAAKK,eACJ,cAAC,GAAD,UACE,eAACzY,EAAA,EAAD,CAAKvC,GAAI,CAAE0hB,UAAW,UAAtB,UACE,cAAClhB,EAAA,EAAD,CAAYN,QAAQ,QAAQF,GAAI,CAAE6D,MAAO,eAAgBrB,QAAS,UAAlE,6BAEA,cAAChC,EAAA,EAAD,CACEN,QAAQ,QACRF,GAAI,CAAEwC,QAAS,SAAUsd,WAAY,IAFvC,SAGEnF,EAAKK,cAAclB,mBAK3B,cAAC,GAAD,UACE,cAAC,GAAD,CAAgBpQ,WAAYA,MAG7B3N,EAEA0e,EAAalZ,QAAU,GACtB,cAAC0D,EAAA,EAAD,CAAO/E,QAAQ,WAAWF,GAAI,CAAEqC,QAAS,GAAzC,SACE,cAAC,GAAD,CAAUsE,KAAM8T,YClEfkH,GAA8C,SAAC,GAErD,IADCvG,EACF,EADJT,KAEA,OACE,cAAC,GAAD,CACEjM,KAAM0M,EAAQ1M,KACdhF,WACE,qCACG0R,EAAQ/J,MAAQ,cAAC,GAAD,CAAM3C,KAAK,OAAO5P,MAAO4U,GAAY0H,EAAQ/J,QAC7D+J,EAAQlB,QAAU,cAAC,GAAD,CAAMxL,KAAK,SAAS5P,MAAO4gB,GAAatE,EAAQlB,UACnE,cAAC,GAAD,CAAMxL,KAAK,SAAS5P,MAAOsc,EAAQ1R,WAAW8M,GAAYlO,aANhE,SAUE,cAAC9H,EAAA,EAAD,CAAYN,QAAQ,UAApB,SAA+Bkb,EAAQ7a,UCVhCqhB,GAAsC,SAAC,GAE7C,IADCjE,EACF,EADJhD,KAEMkH,EAAWtY,GAA2BjD,GAAS8U,SAClDxU,QAAO,SAAAwU,GAAO,OAAIA,EAAQ9R,aAAeqU,EAAInZ,MAE5Cob,OAAmCziB,EAWvC,OAVI0kB,EAAStgB,QAAU,IACrBqe,EAAS,mCACNiC,EAAStgB,QAAU,GAClB,cAACiR,EAAA,EAAD,CAAO/P,IAAK,EAAZ,SACGof,EAASja,KAAI,SAAAwT,GAAO,OAAI,cAAC,GAAD,CAA8BT,KAAMS,GAAlBA,EAAQ5W,YAOzD,cAAC,GAAD,CACEkK,KAAMiP,EAAIjP,KACVhF,WACE,qCACGiU,EAAItM,MAAQ,cAAC,GAAD,CAAM3C,KAAK,OAAO5P,MAAO4U,GAAYiK,EAAItM,QACrDsM,EAAIzD,QAAU,cAAC,GAAD,CAAMxL,KAAK,SAAS5P,MAAO4gB,GAAa/B,EAAIzD,UAC3D,cAAC,GAAD,CAAMxL,KAAK,SAAS5P,MAAO6e,EAAIjU,WAAW+M,GAAQnO,aAGtDmD,KACE,cAACjL,EAAA,EAAD,CAAYN,QAAQ,UAApB,SAA+Byd,EAAIpd,OAErCqf,OAAQA,KC/BDkC,GAAsC,SAAC,GAG7C,IAFC7F,EAEF,EAFJtB,KACAsG,EACI,EADJA,SAEMzJ,EAAiByE,EAAIvS,WAAWiN,GAAQa,gBAIxC0E,EAHY7S,GAAgB4S,EAAIzX,IACnCoC,QAAO,SAAAD,GAAI,OAAIA,EAAKwB,WAAa7B,GAASyV,YAC1CnU,KAAI,SAAAjB,GAAI,OAAIA,KAEZC,QAAO,SAAAmV,GAAQ,OAAIE,EAAIC,gBAAgBpK,SAASiK,EAASvX,OAEtDud,EAAgC3Y,IAAc,SAAAzC,GAAI,OAAIA,EAAKkW,WAAaZ,EAAIzX,MAC5Ewd,EAAmD,EAAvC/F,EAAIvS,WAAWiN,GAAQY,cAEzC,OACE,eAAC,GAAD,CAAeoD,KAAMsB,EAAKgF,SAAUA,EAApC,UACE,eAAC,GAAD,WACE,eAACzgB,EAAA,EAAD,CAAYN,QAAS,KAArB,wBAAuC+b,EAAIC,gBAAgB3a,OAA3D,IAAoEiW,EAApE,cACA,cAACjV,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQkQ,SAAU,OAAQjQ,IAAK,GAAnD,SACGyZ,EAAgBtU,KAAI,SAAAmU,GAAQ,OAC3B,cAAC8D,GAAA,EAAD,CAAwB/f,MAAOic,EAASrN,MAA7BqN,EAASvX,YAK1B,eAAC,GAAD,WACE,eAAChE,EAAA,EAAD,CAAYN,QAAS,KAArB,qBAAoC6hB,EAAexgB,OAAnD,MAA8DygB,EAA9D,OACA,cAACzf,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQkQ,SAAU,OAAQjQ,IAAK,GAAnD,SACGsf,EAAena,KAAI,SAAAgV,GAAO,OACzB,cAACiD,GAAA,EAAD,CAAuB/f,MAAO8c,EAAQlO,MAA3BkO,EAAQpY,gB,mBChClByd,GAAgC,SAAC,GAIvC,IAHLlmB,EAGI,EAHJA,SAGI,IAFJ4E,eAEI,MAFMqC,GAEN,MADJkf,cACI,SACJ,EAA8B5jB,oBAAkB,GAAhD,mBAAO6jB,EAAP,KAAgBC,EAAhB,KAEI5N,EAAkB,UAItB,OAHI0N,IAAQ1N,EAAkB,gBAC1B2N,IAAS3N,EAAkB,iBAG7B,cAACvP,EAAA,EAAD,CACEjF,GAAI,CAAEqC,QAAS,EAAGggB,WAAY,OAAQ7N,mBACtC8N,aAAc,kBAAMF,GAAW,IAC/BG,aAAc,kBAAMH,GAAW,IAC/BzhB,QAAO,8GAAE,WACPyhB,GAAW,GACXzhB,OAEFT,QAAS,WARX,SASEnE,K,qBCfOymB,GAAoC,SAAC,GAI3C,IAHLjiB,EAGI,EAHJA,KACAuH,EAEI,EAFJA,IAEI,IADJhI,aACI,MADI,WACJ,EACE2iB,EzD8BiB,SAACliB,GAA8B,IAAD,EACrD,OAAO,UAAAvB,qBAAWoL,IAAe7J,UAA1B,eAAiCzB,QAAS,EyD/BjC4jB,CAAUniB,GACpBJ,EzDiCoB,SAACI,GAAoC,IAAD,EAC9D,OAAO,UAAAvB,qBAAWoL,IAAe7J,UAA1B,eAAiCqK,WAAY5H,GyDlCnC2f,CAAapiB,GAExBqiB,EAAe,SAAC9jB,GAElBqB,EADErB,IAAU2jB,EACH3jB,EAAQ,EAERA,IAIb,OACE,eAACyD,EAAA,EAAD,CAAKvC,GAAI,CAAE6iB,SAAU,IAAKrd,SAAU,KAApC,UACE,cAAChF,EAAA,EAAD,CAAYN,QAAS,KAArB,SAA4BJ,IAC5B,cAACyC,EAAA,EAAD,CAAKvC,GAAI,CAAE8iB,cAAe,GAAKriB,UAAW,SAA1C,SACE,cAAC,GAAD,CAAWE,QAAS,kBAAMR,EAAS,IAAnC,iBAEF,cAACoC,EAAA,EAAD,CAAKuS,UAAWiO,KAAOP,YAAvB,SACG,IAAIQ,MAAMlb,GAAKmb,KAAK,MAAMrb,KAAI,SAAChF,EAAGsgB,GAAJ,OAC7B,cAAC,GAAD,CAAwBpkB,MAAOokB,EAAQ,EAAGhB,OAAQgB,EAAQT,EAASU,WAAYP,GAA9DM,YAcrBE,GAAkC,SAAC,GAIlC,IAHLtkB,EAGI,EAHJA,MAGI,IAFJojB,cAEI,aADJiB,kBACI,MADSngB,GACT,EACEqgB,EAAUxb,KAAKyb,OAAOxkB,EAAQ,GAAK,GAEzC,OACE,cAAC,GAAD,CAAW6B,QAAS,kBAAMwiB,EAAWrkB,IAAQojB,OAAQA,EAArD,SACE,cAAC3f,EAAA,EAAD,CAAKvC,GAAI,CAAES,UAAW,SAAtB,SACG3B,EAAQ,IAAM,GAAe,EAAXukB,EAAe,YCxD7BE,GAA6B,WACxC,IAAM9X,EAAOxB,GAAqBiB,GAAcO,OAAS,EACnDxD,EAAQvB,GAAmBmC,MAC9BjC,OAAOT,IACP4B,QAAO,SAACC,EAAKrC,GAAN,OAAiBqC,EAAMrC,EAAOsC,QAAO,GAE/C,OACE,cAAC,GAAD,CAAMyG,KAAK,cAAc5P,MAAO2M,EAAOxD,KAI9Bub,GAA2B,WACtC,IAAM/X,EAAOxB,GAAqB4M,GAAYpL,OAAS,EACjDsM,EAAQ9N,GAAqB4M,GAAYkB,QAAU,EAEzD,OACE,cAAC,GAAD,CAAMrJ,KAAK,cAAc5P,MAAO2M,EAAOsM,KCT9B0L,GAA0C,SAAC,GAIjD,IAHL/U,EAGI,EAHJA,KACAoC,EAEI,EAFJA,KAEI,IADJsN,YACI,MADG,EACH,EACJ,OACE,cAAC,GAAD,CAAM1P,KAAMA,EAAM5P,MAAK,UAAKgS,EAAL,cAAesN,EAAf,SAIdsF,GAAyB,WACpC,IAAM3X,EAAY9B,GAAqBiB,GAAca,YAAc,EAC7DkQ,EAAM/S,IAAqB,SAAAvC,GAAI,OAAIA,EAAKwB,WAAa7B,GAAS2V,OACpE,IAAKA,EAAK,OAAO,KAEjB,IAAMzE,EAAiByE,EAAIvS,WAAWiN,GAAQa,gBAE9C,OACE,cAAC,GAAD,CAAgB9I,KAAK,eAAeoC,KAAM/E,EAAYyL,EAAgB4G,KAAM,KAInEuF,GAA0B,WACrC,IAAM5X,EAAY9B,GAAqBiB,GAAca,YAAc,EAC7DkQ,EAAM/S,IAAqB,SAAAvC,GAAI,OAAIA,EAAKwB,WAAa7B,GAAS2V,OACpE,IAAKA,EAAK,OAAO,KAEjB,IAAMzE,EAAiByE,EAAIvS,WAAWiN,GAAQa,gBAE9C,OACE,cAAC,GAAD,CAAgB9I,KAAK,cAAcoC,KAAM/E,EAAYyL,EAAgB4G,KAAM,KC7BlEwF,GAAgB,SAAC,GAEvB,IADL7nB,EACI,EADJA,SAEA,OAAO,cAACkJ,EAAA,EAAD,CAAO/E,QAAQ,WAAWF,GAAI,CAAEqC,QAAS,EAAGG,QAAS,OAAQC,IAAK,EAAGiQ,SAAU,QAA/E,SACJ3W,KAaQ8nB,GAAsB,SACjC7Y,EACA0Q,GAEA,OAAK1Q,GAAU0Q,EAGXvQ,GAAaH,EAAO0Q,GACf,CAAEhN,KAAM,YAAa/K,KAAM,GAEhC4H,GAAaP,EAAO0Q,GACf,CAAEhN,KAAM,YAAa/K,KAAM,GAE7B,KARE,MAiBEmgB,GAA8B,SAAC,GAOrC,IANLpV,EAMI,EANJA,KAMI,IALJ5B,cAKI,MALK,GAKL,MAJJ1F,aAII,MAJI,GAIJ,MAHJ2c,eAGI,MAHM,GAGN,MAFJC,cAEI,MAFK,GAEL,MADJC,uBACI,MADc,GACd,EACEC,EvDND,SAAoBC,GACzB,IAAM7X,EAAYK,KACZuX,EAAuB,GAS7B,OAPI5X,GACFA,EAAUQ,OACPlG,OAAOmE,IACPnE,QAAO,SAAAoE,GAAK,OAAImZ,GAAWA,EAASrS,SAAS9G,EAAM6B,YACnDrF,SAAQ,SAAAwD,GAAK,OAAIkZ,EAAUlZ,EAAM6B,SAAW7B,EAAM+B,QAGhDmX,EuDLWE,CAAUtX,GACtBuX,EAAWza,GAAcxC,GACzBkd,E5DNwB,SAACC,GAC/B,IAAMC,EAAaxlB,qBAAWoL,IAE9B,OAAOma,EACJ3c,KAAI,SAAArH,GAAI,aAAI,UAAAikB,EAAWjkB,UAAX,eAAkBzB,QAAS,KACvC8I,KAAI,SAAA9I,GAAK,OAAI+I,KAAKyb,MAAMxkB,EAAQ,MAChCiJ,QAAO,SAAC+L,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,G4DAR0Q,CAAiBR,GAEpCD,EAAM,uBACDA,GADC,aAED1c,OAAOC,QAAQ2c,GACftc,KAAI,mCAAEiF,EAAF,KAAWE,EAAX,WAAsB,CAAE2B,KAAM0K,GAAYvM,GAAUlJ,KAAMoJ,OAH7D,aAIDzF,OAAOC,QAAQ8c,GACfzd,QAAO,8CAAiC,kBAAjC,QACPgB,KAAI,mCAAE8c,EAAF,KAAY5lB,EAAZ,WAAwB,CAAE4P,KAAMxH,GAAWwd,GAAW/gB,KAAM7E,OAN/D,aAODilB,IAGDO,EAAa,IACfN,EAAM,uBAAOA,GAAP,CAAe,CAAEtV,KAAM,eAAgB/K,MAAoB,EAAd2gB,MAGrD,IAAMhT,EAAQzJ,KAAKC,IAAI,EAAGkc,EAAOpc,KAAI,SAAA+c,GAAC,OAAIA,EAAEhhB,MAAQghB,EAAEtpB,SAAW,KAAG0M,QAAO,SAAC+L,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAE5F,OACE,eAACxR,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,cAAeE,cAAe,UAAlD,UACE,cAAC,GAAD,CAAkBgM,KAAMA,EAAM/K,KAAM2N,EAAOA,OAAK,IAC/C0S,EAAOpc,KAAI,SAAAgd,GAAK,OACf,cAAC,GAAD,CAAmClW,KAAMkW,EAAMlW,KAAM/K,KAAMihB,EAAMjhB,MAAQihB,EAAMvpB,SAAW,GAAnEupB,EAAMlW,aAY/BmW,GAA8C,SAAC,GAI9C,IAHLnW,EAGI,EAHJA,KACA/K,EAEI,EAFJA,KACA2N,EACI,EADJA,MAKA,OACE,eAAC/O,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQ6M,SAAUiC,EAAQ,GAAK,GAAIkD,gBAAiBlD,EAAQ,eAAYnU,GAA5F,UACE,cAACoF,EAAA,EAAD,CAAKvC,GALU,CAAEwC,QAAS,eAAgBH,QAAS,GAAKC,MAAO,GAAI7B,UAAW,UAK9E,SAAsBkD,IACtB,cAACpB,EAAA,EAAD,CAAKvC,GALU,CAAEwC,QAAS,eAAgBH,QAAS,GAAKyiB,YAAa,GAKrE,SAAsBpW,QCzGfqW,GAAoB,SAAC,GAE3B,IADLhpB,EACI,EADJA,SAEA,OACE,eAAC,GAAD,WACE,cAACyE,EAAA,EAAD,CAAYN,QAAS,KAArB,wBACA,cAAC,GAAD,UAAYnE,QCPZipB,GAAkBlnB,wBAA8B,IAMzCmnB,GAA8C,SAAC,GAGrD,IAFLnJ,EAEI,EAFJA,UACA/f,EACI,EADJA,SAEA,OACE,cAACipB,GAAgBnmB,SAAjB,CAA0BC,MAAOgd,EAAjC,SAA6C/f,KAIpCmpB,GAAc,SAACxW,GAE1B,OADkB1P,qBAAWgmB,IACZ/b,MAAK,SAAA8S,GAAQ,OAAIA,EAASrN,OAASA,MCNzCyW,GAAwC,SAAC,GAG/C,IAFLrJ,EAEI,EAFJA,UACAsJ,EACI,EADJA,UAEA,OACE,cAAC7iB,EAAA,EAAD,UACGuZ,EAAUlU,KAAI,SAAAmU,GAAQ,OACrB,cAACxZ,EAAA,EAAD,CAAuBvC,GAAI,CAAEqlB,WAAY,GAAzC,SACE,cAAC,GAAD,CAEEtJ,SAAUA,EACVqJ,UAAWA,GAFNrJ,EAASvX,KAFRuX,EAASvX,UAmBrB8gB,GAA8C,SAAC,GAG9C,IAFLvJ,EAEI,EAFJA,SACAqJ,EACI,EADJA,UAEA,OACE,eAAC7iB,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,eAAgBsiB,YAAa,GAAjD,UACY,OAATM,QAAS,IAATA,OAAA,EAAAA,EAAWtT,SAASiK,EAASvX,KAC5B,cAAC,KAAD,CAAiBiJ,KAAM8X,OAEvB,cAAC,KAAD,CAAiB9X,KAAM+X,SAG1BzJ,EAASrN,QAGZ,cAAC,GAAD,CAAgBhF,WAAYqS,EAASrS,kB,Sd7C/BgX,K,6BAAAA,E,wBAAAA,E,wBAAAA,E,kBAAAA,E,0BAAAA,E,wCAAAA,Q,cCMAC,K,8BAAAA,E,gCAAAA,E,mCAAAA,Q,KAUL,IchBK8E,GdgBCC,GAAyC,WACpD,OAAO,cAAC,GAAD,CACLhX,KAAK,cACLiX,QAAShF,GAAgBiF,UACzBxe,MAAO,CAACyP,GAAYpL,SAIXoa,GAAyC,WACpD,IAAMC,EAAkBZ,GAAYxE,GAAaqF,SAC3CC,EAAsBd,GAAYxE,GAAauF,aAK/CC,EAA0B,CAC9B,CAAExX,KAAM,WAAY/K,KAJGqiB,EAAsBA,EAAoBtc,WAAWkN,GAAatO,QAAU,GAKnG,CAAEoG,KAAM,UAAW/K,KAJGmiB,EAAkBA,EAAgBpc,WAAWkN,GAAatO,QAAU,IAO5F,OAAO,cAAC,GAAD,CACLqd,QAAShF,GAAgBwF,WACzBzX,KAAM,oBACNsV,OAAQkC,EACRjC,gBAAiB,CAAC/Z,GAAWkc,oBAIpBC,GAAuC,SAAC,GAE9C,IADLzJ,EACI,EADJA,QAEM0J,EAAgB1Z,GAAesK,GAAcgC,UAC7CvN,EAAW1B,GAAqBiB,GAAcS,WAAa,EAE3DqY,EAAsB,CAC1B,CAAEtV,KAAM,WAAY/K,KAAI,OAAE2iB,QAAF,IAAEA,OAAF,EAAEA,EAAevZ,MACzC,CAAE2B,KAAM,WAAY/K,KAAMgI,IAGxBR,GAAamb,EAAe1J,EAAQE,qBAAqBkH,EAAOjW,KAClE,CAAEW,KAAMkO,EAAQE,mBAAoBnZ,KAAM,IACxC4H,GAAa+a,EAAe1J,EAAQE,qBAAqBkH,EAAOjW,KAClE,CAAEW,KAAMkO,EAAQE,mBAAoBnZ,KAAM,IAE5C,IAAMsgB,EAAkB,CAAC/Z,GAAWsC,aAActC,GAAWuC,SAAUvC,GAAWkc,iBAClF,OAAO,cAAC,GAAD,CACLT,QAAShF,GAAgB4F,YACzB7X,KAAM,WACNsV,OAAQA,EACRC,gBAAiBA,KAIRuC,GAAuC,SAAC,GAE9C,IADL5J,EACI,EADJA,QAEM0J,EAAgB1Z,GAAesK,GAAcgC,UAC7CnN,EAAY9B,GAAqBiB,GAAca,YAAc,EAE7D2Q,EAAkBnT,GAA8BjD,GAASiW,YAC5D3V,QAAO,SAAAD,GAAI,OAAIA,EAAK2C,aAAesT,EAAQpY,MAC3CyE,MAAK,SAAAtC,GAAI,OAAIA,EAAK6V,UAAY1F,GAAQ4F,mBAEnClB,EAAatS,IAAyB,SAAAvC,GAAI,OAAIA,EAAK4U,cAAgBhV,GAAYiV,cACrF,IAAKA,IAAekB,EAAiB,OAAO,KAE5C,IAAMsH,EAAsB,CAC1B,CAAEtV,KAAM,WAAY/K,KAAI,OAAE2iB,QAAF,IAAEA,OAAF,EAAEA,EAAevZ,MACzC,CAAE2B,KAAM,YAAa/K,KAAMoI,GAC3B,CAAE2C,KAAM,cAAe/K,KAAM6X,EAAW9R,WAAWrD,GAAYiC,UAG7D6C,GAAamb,EAAe1J,EAAQE,qBAAqBkH,EAAOjW,KAClE,CAAEW,KAAMkO,EAAQE,mBAAoBnZ,KAAM,IACxC4H,GAAa+a,EAAe1J,EAAQE,qBAAqBkH,EAAOjW,KAClE,CAAEW,KAAMkO,EAAQE,mBAAoBnZ,KAAM,IAE5C,IAAMsgB,EAAkB,CAAC/Z,GAAWsC,aAActC,GAAWuC,SAAUvC,GAAWkc,iBAClF,OAAO,cAAC,GAAD,CACLT,QAAShF,GAAgB4F,YACzB7X,KAAM,kBACNsV,OAAQA,EACRC,gBAAiBA,KevFRwC,GAA6C,SAAC,GAGpD,IAFC7J,EAEF,EAFJjC,KACAsG,EACI,EADJA,SAEMrmB,EAAQ8rB,eACRC,EAAmBC,aAAchsB,EAAMisB,YAAYC,GAAG,OAEtD9O,EAAQ4E,EAAQlT,WAAWmN,GAAYmB,QAAU,EAEjD0E,EAAkBnT,GAA8BjD,GAASiW,YAC5D3V,QAAO,SAAAD,GAAI,OAAIA,EAAK2C,aAAesT,EAAQpY,MAC3CyE,MAAK,SAAAtC,GAAI,OAAIA,EAAK6V,UAAY1F,GAAQ4F,mBAEnCT,EAAMnT,GAAiB8T,EAAQC,UAC/BkK,EAAclf,KAAKmf,KAAKpK,EAAQlT,WAAWmN,GAAYpL,MAAQ,GAAK,EACpEwb,EAAe1d,GAA4BjD,GAASyV,UAEtDD,EAAYmL,EACbrgB,QAAO,SAAAD,GAAI,OAAIA,EAAK2C,aAAesT,EAAQpY,MAW9C,OATIyX,IACFH,EAAS,uBACJA,GADI,aAEJmL,EACArgB,QAAO,SAAAmV,GAAQ,OAAIA,EAASzS,aAAe2S,EAAIzX,MAC/CoC,QAAO,SAAAmV,GAAQ,OAAIE,EAAIC,gBAAgBpK,SAASiK,EAASvX,UAK9D,cAAC,GAAD,CAAgBjE,KAAM2J,GAAWkc,gBAAiB5hB,GAAIoY,EAAQpY,GAA9D,SACE,cAAC,GAAD,CAAkBsX,UAAWA,EAA7B,SACE,cAAC,GAAD,CAAenB,KAAMiC,EAASqE,SAAUA,EAAxC,SACE,eAAC1e,EAAA,EAAD,CAAKvC,GAAI,CAACwC,QAAS,OAAQE,cAAeikB,EAAmB,cAAgB,SAAUjU,SAAU,QAAjG,UACE,eAACnQ,EAAA,EAAD,CAAKvC,GAAI,CAACwC,QAAS,OAAQE,cAAeikB,EAAmB,SAAW,MAAOtkB,QAAS,EAAGI,IAAK,GAAhG,UACE,eAACF,EAAA,EAAD,WACE,cAAC/B,EAAA,EAAD,CAAYN,QAAS,KAArB,oBACA,eAAC,GAAD,CAAW+f,UAAQ,EAAnB,UACE,cAAC,GAAD,CAAgBvR,KAAK,aAAaoC,KAAc,EAARkH,EAAWoG,KAAM,IACxD1B,GACC,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,OAGJ,cAAC,GAAD,UAIJ,cAACna,EAAA,EAAD,UACE,cAAC,GAAD,CAAahC,KAAM2J,GAAWkc,gBAAiBte,IAAKif,EAAajnB,MAAM,kBAI3E,eAACyC,EAAA,EAAD,CAAKvC,GAAI,CAAC8C,SAAU,GAApB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAkB8Z,QAASA,IAC3B,cAAC,GAAD,CAAgBA,QAASA,IACzB,cAAC,GAAD,CAAkBA,QAASA,IAC3B,cAAC,GAAD,CAAgBA,QAASA,OAG1BX,GACC,eAAC,GAAD,WACE,cAACzb,EAAA,EAAD,CAAYN,QAAS,KAArB,uBACA,cAACM,EAAA,EAAD,UAAayb,EAAIvN,OACjB,cAAC,GAAD,CAAgBhF,WAAYuS,EAAIvS,gBAIpC,eAAC,GAAD,WACE,cAAClJ,EAAA,EAAD,CAAYN,QAAS,KAArB,uBACA,cAAC,GAAD,CAAe4b,UAAWA,EAAWsJ,UAAS,OAAEnJ,QAAF,IAAEA,OAAF,EAAEA,EAAKC,mC,SDnFzDuJ,K,iCAAAA,E,iCAAAA,E,qCAAAA,E,oCAAAA,Q,KAWL,IAAMyB,GAAwC,SAAC,GAE/C,IADLxP,EACI,EADJA,OAEM1M,EAAQ4B,GAAe8K,EAAO1M,OAC9Bmc,EAAiBtD,GAAoB7Y,EAAO0M,EAAOgE,eAEnDqI,EAAuB,GAG7B,OAFIoD,GAAgBpD,EAAQhW,KAAKoZ,GAE1B,cAAC,GAAD,CACLxB,QAASF,GAAe2B,YACxB1Y,KAAM,eACNtH,MAAO,CAAC8D,GAAcQ,SACtBoB,OAAQ,CAAC4K,EAAO1M,OAChB+Y,QAASA,EACTE,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aAI7C4a,GAAwC,SAAC,GAE/C,IAGCC,EAA4B,CAAE5Y,KAAM,YAAa/K,KFxBrB,SAAC4jB,GAA4C,IAAD,EAC9E,iBAAOvoB,qBAAWgmB,IACf/b,MAAK,SAAA8S,GAAQ,OAAIA,EAASrS,WAAWkN,GAAac,UAAY6P,YADjE,aAAO,EAEH7d,WAAWkN,GAAatO,QEmBFkf,CADtB,EADJ9P,OAEsDhJ,QAAU,GAIhE,OAAO,cAAC,GAAD,CACLiX,QAASF,GAAegC,YACxB/Y,KAAM,eACNtH,MAAO,CAACyP,GAAYoB,QACpB+L,OAAQ,CAACsD,GACTrD,gBAAiB,CAAC/Z,GAAWkc,oBAIpBsB,GAA0C,kBAAM,cAAC,GAAD,CAC3D/B,QAASF,GAAekC,cACxBjZ,KAAM,iBACNtH,MAAO,CAAC8D,GAAcY,OACtBgB,OAAQ,CAACoK,GAAc6B,aACvBkL,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aAG3Cmb,GAAyC,WACpD,IAAMpM,EAAatS,IAAyB,SAAAvC,GAAI,OAAIA,EAAK4U,cAAgBhV,GAAYiV,cACrF,OAAKA,EAEE,cAAC,GAAD,CACLmK,QAASF,GAAeoC,aACxBnZ,KAAM,gBACNtH,MAAO,CAAC8D,GAAcY,OACtBgB,OAAQ,CAACoK,GAAc6B,aACvBgL,QAAS,CACP,CAAErV,KAAM,cAAe/K,KAAM6X,EAAW9R,WAAWrD,GAAYiC,UAEjE2b,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,SAAUvC,GAAWkc,mBAVrD,ME5Db0B,GAA4C,SAAC,GAGnD,IAAD,EAFJ7G,EAEI,EAFJA,SACMvJ,EACF,EADJiD,KAEMoN,GAAU,UAAAjf,GAAQ4O,EAAOpO,mBAAf,eAA4BnB,YAAa7B,GAASiW,WAElE,OACE,cAAC,GAAD,CAAe5B,KAAMjD,EAAQuJ,SAAUA,EAAvC,SACE,cAAC,GAAD,UACG8G,EACC,qCACE,cAAC,GAAD,CAAmBrQ,OAAQA,IAC3B,cAAC,GAAD,CAAiBA,OAAQA,IACzB,cAAC,GAAD,CAAkBA,OAAQA,OAG5B,mCACE,cAAC,GAAD,CAAiBA,OAAQA,WCExBsQ,GAA8B,SAAC,GAGrC,IAFLrN,EAEI,EAFJA,KACAsG,EACI,EADJA,SAEA,OAAQtG,EAAKxS,UACX,KAAK7B,GAASoR,OACZ,OAAO,cAAC,GAAD,CAAYiD,KAAMA,EAAoBsG,SAAUA,IACzD,KAAK3a,GAASsW,QACZ,OAAO,cAAC,GAAD,CAAajC,KAAMA,EAAqBsG,SAAUA,IAC3D,KAAK3a,GAAS2V,IACZ,OAAO,cAAC,GAAD,CAAStB,KAAMA,EAAiBsG,SAAUA,IACnD,KAAK3a,GAASqX,IACZ,OAAO,cAAC,GAAD,CAAShD,KAAMA,EAAiBsG,SAAUA,IACnD,KAAK3a,GAAS8U,QACZ,OAAO,cAAC,GAAD,CAAaT,KAAMA,EAAqBsG,SAAUA,IAC3D,KAAK3a,GAASwU,UACd,KAAKxU,GAASmY,SACd,KAAKnY,GAASiW,WACd,KAAKjW,GAASyV,SACZ,OAAO,cAAC,GAAD,CAAgBpB,KAAMA,EAAMsG,SAAUA,IAC/C,QACE,OAAO,cAAC,GAAD,CAAetG,KAAMA,EAAMsG,SAAUA,MAIrCgH,GAAoC,SAAC,GAG3C,IAFLtN,EAEI,EAFJA,KAGMF,GADF,EADJwG,SAEqB5X,GAAgBsR,EAAKnW,KAE1C,OACE,cAAC,GAAD,CACEkK,KAAMiM,EAAKjM,KACXhF,WACE,qCACGiR,EAAKO,OAAS,cAAC,GAAD,CAAMxM,KAAK,QAAQ5P,MAAOuhB,GAAY1F,EAAKO,SACzDP,EAAKtJ,MAAQ,cAAC,GAAD,CAAM3C,KAAK,OAAO5P,MAAO4U,GAAYiH,EAAKtJ,QACvDsJ,EAAKT,QAAU,cAAC,GAAD,CAAMxL,KAAK,SAAS5P,MAAO4gB,GAAa/E,EAAKT,UAC5DS,EAAKjR,YAAcpC,OAAOC,QAAQoT,EAAKjR,YAAY9B,KAAI,mCAAE8G,EAAF,KAAQ5P,EAAR,YACtD,cAAC,GAAD,CAAiB4P,KAAMxH,GAAWwH,GAAO5P,MAAOA,GAArC4P,SAIjBjD,KACE,qCACGkP,EAAKpa,MAAQ,cAACC,EAAA,EAAD,CAAYN,QAAQ,UAApB,SAA+Bya,EAAKpa,OACjDoa,EAAKb,aAAe,cAACtZ,EAAA,EAAD,CAAYN,QAAQ,UAApB,SAA+Bya,EAAKb,iBAG7D8F,OAAQnF,EAAalZ,QAAU,EAAI,cAAC,GAAD,CAAUoF,KAAM8T,SAAmBtd,KCpE/D+qB,GAA8B,SAAC,GAGrC,IAFLvhB,EAEI,EAFJA,KAEI,IADJsa,gBACI,SACJ,OACE,cAAC1e,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQE,cAAe,SAAUD,IAAK,GAA1D,SACGkE,EAAKiB,KAAI,SAACjB,GAAD,OAAU,cAAC,GAAD,CAAwBgU,KAAMhU,EAAMsa,SAAUA,GAA/Bta,EAAKnC,UCTjC2jB,GAAmB,WAC9B,IAAMC,EAAW7e,GAA2BjD,GAAS8B,SAClDxB,QAAO,SAAAD,GAAI,OAAKA,EAAK2C,cAExB,OACE,qCACE,cAAC9I,EAAA,EAAD,CAAYN,QAAS,KAArB,sBACA,cAAC,GAAD,CAAUyG,KAAMyhB,QCHTC,GAAoC,SAAC,GAE3C,IADLC,EACI,EADJA,QAEM9G,EACJ,eAACjf,EAAA,EAAD,CAAKvC,GAAI,CAAEqP,SAAU,GAAI5O,UAAW,SAApC,UACE,cAAC,GAAD,CAAMiO,KAAK,UAAU5P,MAAOwpB,EAAQzO,UACpC,cAAC,GAAD,CAAMnL,KAAK,aAAa5P,MAAOwpB,EAAQ1O,gBAI3C,OACE,cAAC,GAAD,CAAiBlL,KAAM4Z,EAAQ5Z,KAAMhF,WAAY8X,EAAjD,SACE,cAAChhB,EAAA,EAAD,CAAYN,QAAQ,UAApB,SAA+BooB,EAAQxO,iBCdhCyO,GAAoC,SAAC,GAE3C,IADLrS,EACI,EADJA,SAEA,OACE,cAAC3T,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQE,cAAe,SAAUD,IAAK,GAA1D,SACGyT,EAAStO,KAAI,SAAA0gB,GAAO,OACnB,cAAC,GAAD,CAAgCA,QAASA,GAAvBA,EAAQ5Z,YCN3B,SAAS8Z,GAAO7hB,GACrB,OAAOA,EAAKwB,WAAa7B,GAASqX,ICJ7B,IAAM8K,GAAwB,WACnC,IAAMC,EAAiB9e,GAAc,CACnCsB,GAAcO,KACdP,GAAcQ,QACdR,GAAcS,SACdT,GAAcU,SACdV,GAAcW,UACdX,GAAcY,MACdZ,GAAca,UACdb,GAAcc,SACdd,GAActH,KACdsH,GAAce,QACdf,GAAcgB,MACdhB,GAAciB,YAShB,OANcuc,EAAexd,GAAcgB,eACxBwc,EAAexd,GAAcgB,OAE9Bwc,EAAexd,GAAciB,mBACxBuc,EAAexd,GAAciB,WAE7C,cAAC,GAAD,UACL,cAAC,GAAD,CAAgBzC,WAAYgf,OChBnBC,GAAiB,WAC5B,IAAM/tB,EAAQ8rB,eACRC,EAAmBC,aAAchsB,EAAMisB,YAAYC,GAAG,OACtDngB,EAAOkC,KAEP4C,EAAOxB,GAAqBiB,GAAcO,OAAS,EACnDE,EAAW1B,GAAqBiB,GAAcS,WAAa,EAC3DI,EAAY9B,GAAqBiB,GAAca,YAAc,EAC7DF,EAAY5B,GAAqBiB,GAAcW,YAAc,EAE7Dkb,EAAclf,KAAKmf,KAAKvb,EAAO,GAAK,EACpCmd,EAAU/gB,KAAKmf,KAAKnb,EAAY,GAAK,EAErCgd,EAAWniB,GAAmBC,GACjCC,OAAOb,IACPgC,QAAO,SAACC,EAAKrC,GAAN,OAAiBqC,EAAMrC,EAAOyY,OAAM,GAE9C,OAAO,eAAC7b,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQE,cAAeikB,EAAmB,SAAW,MAAOtkB,QAAS,EAAGI,IAAK,GAAjG,UACL,eAACF,EAAA,EAAD,WACE,cAAC/B,EAAA,EAAD,CAAYN,QAAS,KAArB,oBACA,eAAC,GAAD,CAAW+f,UAAQ,EAAnB,UAEE,cAAC,GAAD,CAAgBvR,KAAK,OAAOoC,KAAMnF,EAAWI,EAAWqS,KAAMyK,IAC9D,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,UAIJ,cAACtmB,EAAA,EAAD,UACE,cAAC,GAAD,CAAahC,KAAM2J,GAAWsC,aAAc1E,IAAKif,EAAajnB,MAAM,eAGtE,cAACyC,EAAA,EAAD,UACE,cAAC,GAAD,CAAahC,KAAM2J,GAAWuC,SAAU3E,IAAK8gB,EAAS9oB,MAAM,eCjCrDgpB,GAAuB,WAClC,OAAO,eAAC,GAAD,WACL,cAACtoB,EAAA,EAAD,CAAYN,QAAS,KAArB,wBACA,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,WAKA6oB,GAAgB,kBAAM,cAAC,GAAD,CAC1BpD,QAAS3I,GAAmBgM,MAC5Bta,KAAM,QACNtH,MAAO,CAAC8D,GAAcS,SAAUT,GAAca,WAC9CkY,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aAGlDwc,GAAuB,kBAAM,cAAC,GAAD,CACjCtD,QAAS3I,GAAmBqB,UAC5B3P,KAAM,cACNtH,MAAO,CAAC8D,GAAcO,MACtBwY,gBAAiB,MAGbiF,GAAoB,kBAAM,cAAC,GAAD,CAC9BvD,QAAS3I,GAAmBmM,UAC5Bza,KAAM,YACNtH,MAAO,CAAC8D,GAAcW,UAAWX,GAAcc,UAC/CiY,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aAGlD2c,GAAsB,kBAAM,cAAC,GAAD,CAChCzD,QAAS3I,GAAmBqM,YAC5B3a,KAAM,eACNtH,MAAO,CAAC8D,GAAcW,UAAWX,GAAca,WAC/CkY,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aAGlD6c,GAAiB,kBAAM,cAAC,GAAD,CAC3B3D,QAAS3I,GAAmBuM,OAC5B7a,KAAM,SACNtH,MAAO,CAAC8D,GAAcY,MAAOZ,GAAca,WAC3CkY,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aAGlD+c,GAAe,kBAAM,cAAC,GAAD,CACzB7D,QAAS3I,GAAmByM,UAC5B/a,KAAM,aACNtH,MAAO,CAAC8D,GAAcO,KAAMP,GAAcU,UAC1CqY,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aAGlDid,GAAmB,WACvB,IAAMC,EAAc9gB,KACjBI,MAAK,SAAAtC,GAAI,OAAIA,EAAK+X,MAAQtB,GAAQwB,YAC/BgL,EAAehd,GAAesK,GAAcyB,SAClD,IAAKiR,EAAc,OAAO,KAE1B,IAAM7F,EAAuB,GACvBoD,EAAiBtD,GAAoB+F,EAAc,aAIzD,OAHIzC,GAAgBpD,EAAQhW,KAAKoZ,GAC5BwC,GAAa5F,EAAQhW,KAAK,CAAEW,KAAM,MAAO/K,MAAO,IAGnD,cAAC,GAAD,CACEgiB,QAAS3I,GAAmB4B,SAC5BlQ,KAAM,YACN5B,OAAQ,CAACoK,GAAcyB,SACvBvR,MAAO,CAAC8D,GAAcY,OACtBiY,QAASA,EACTE,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aAKtDod,GAAiB,WACrB,IAAMD,EAAehd,GAAesK,GAAcyB,SAC5CgG,EAAS9V,KAAaI,MAAK,SAAAtC,GAAI,OAAIA,EAAK+X,MAAQtB,GAAQuB,UAE9D,IAAKiL,EAAc,OAAO,KAC1B,IAAKjL,EAAQ,OAAO,KAEpB,IAAMoF,EAAuB,GAI7B,OAHIpF,EAAOjV,YAAciV,EAAOjV,WAAWyT,GAAQU,eACjDkG,EAAQhW,KAAK,CAAEW,KAAM,SAAU/K,KAAMgb,EAAOjV,WAAWyT,GAAQU,eAA2B,IAG1F,cAAC,GAAD,CACE8H,QAAS3I,GAAmB4B,SAC5BlQ,KAAM,SACN5B,OAAQ,CAACoK,GAAcyB,SACvBvR,MAAO,CAAC8D,GAAcY,OACtBiY,QAASA,EACTE,gBAAiB,CAAC/Z,GAAWsC,aAActC,GAAWuC,aCzG/Cqd,GAAkB,WAC7B,IAAMC,EAAiB,YACjBC,EAAe/f,GAAqBiB,GAActH,OAAS,EAC3DqmB,EAAczf,SAASC,aAAaC,QAAQqf,IAAmBC,EAAalf,YAElF,EAAgCxM,mBAAiB2rB,GAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAU,SAACtrB,GACfqrB,EAAYrrB,GACZ2L,aAAaI,QAAQkf,EAAgBjrB,EAAMgM,aAe7C,OACE,eAAC,GAAD,WACE,eAACvI,EAAA,EAAD,WACE,cAAC/B,EAAA,EAAD,CAAYN,QAAQ,KAAKF,GAAI,CAAEwC,QAAS,SAAUsiB,YAAa,GAA/D,kBACA,cAACjF,GAAA,EAAD,CAAMlf,QARI,WACdypB,EAAQJ,IAOoBlqB,MAAM,QAAQ6D,KAAK,QAAQzD,QAAQ,WAAWF,GAAI,CAAE+f,cAAe,oBAE7F,eAACxd,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQ/B,UAAW,SAAUgC,IAAK,IAAtD,UACE,cAACF,EAAA,EAAD,CAAKvC,GAAI,CAAE8C,SAAU,IAArB,SACE,cAAC,GAAD,CAAWnC,QAAS,kBAAMypB,EAAQ,IAAlC,iBAED,IAAIpH,MAAM,GAAGC,KAAK,MAAMrb,KAAI,SAAChF,EAAGsgB,GAAJ,OAC3B,cAAC3gB,EAAA,EAAD,CAAiBvC,GAAI,CAAE8C,SAAU,GAAjC,SACE,cAAC,GAAD,CAAWof,OAAQgB,EAAQgH,EAAUvpB,QAAS,WAxBnC,IAAC7B,EAElBsrB,GAFkBtrB,EAwBqDokB,EAAQ,KAvBnEgH,EACJprB,EAAQ,EAERA,IAoBF,SACGokB,EAAQ,KAFHA,aC/BPmH,GAAsC,SAAC,GAE7C,IADLpU,EACI,EADJA,UAEA,OACE,cAACzD,EAAA,EAAD,CAAO/P,IAAK,EAAZ,SACGwT,EAAUrO,KAAI,SAAA0iB,GAAO,OACpB,eAAC,GAAD,CAEE5b,KAAM4b,EAAQ5b,KACdhF,WACE,qCACG4gB,EAAQpQ,QAAU,cAAC,GAAD,CAAMxL,KAAK,SAAS5P,MAAO4gB,GAAa4K,EAAQpQ,UAClEoQ,EAAQriB,OAAS,cAAC,GAAD,CAAMyG,KAAK,QAAQ5P,MAAOwrB,EAAQriB,QACnDqiB,EAAQjZ,MAAQ,cAAC,GAAD,CAAM3C,KAAK,OAAO5P,MAAOwrB,EAAQjZ,OACjDiZ,EAAQjW,OAAS,cAAC,GAAD,CAAM3F,KAAK,QAAQ5P,MAAOwrB,EAAQjW,WAR1D,UAYE,cAAC7T,EAAA,EAAD,CAAYN,QAAQ,UAApB,SAA+BoqB,EAAQxQ,cACvC,cAACtZ,EAAA,EAAD,CAAYN,QAAQ,UAApB,SAA+BoqB,EAAQjQ,eAZlCiQ,EAAQ5b,YCZV6b,GAAuB,WAClC,IAAMje,EAAYK,KAClB,OAAKL,EAEE,eAAC,GAAD,WACL,cAAC9L,EAAA,EAAD,CAAYN,QAAS,KAArB,uBACA,cAAC,GAAD,CAAe+V,UAAW3J,EAAU2J,eAJf,MCCZuU,GAAsC,SAAC,GAE7C,IADL1d,EACI,EADJA,OAEA,OACE,eAAC0E,GAAA,EAAD,CAAO7N,KAAK,QAAQ,aAAW,gBAA/B,UACE,cAAC8N,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,wBAGJ,cAACC,GAAA,EAAD,UACG9E,EAAOlF,KAAI,SAAAoD,GAAK,OACf,cAAC,GAAD,CAAkCA,MAAOA,GAAtBA,EAAM6B,kBAW7B4d,GAAsC,SAAC,GAEtC,IADLzf,EACI,EADJA,MAEA,OACE,eAAC0G,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,8BAAMyH,GAAYpO,EAAM6B,WACvB7B,EAAMK,YAAc,uCAAUL,EAAMK,WAAhB,OACpBL,EAAMQ,WAAa,uCAAUR,EAAMQ,UAAhB,UAEtB,cAACmG,GAAA,EAAD,UACG3G,EAAM+B,OAET,eAAC4E,GAAA,EAAD,WACG3G,EAAMvD,KACNuD,EAAM+O,SAAN,WAAqB/O,EAAM+O,cAXjB/O,EAAM6B,UC9BZ6d,GAAyC,SAAC,GAEhD,IADL5d,EACI,EADJA,OAEA,OACE,eAAC0E,GAAA,EAAD,CAAO7N,KAAK,QAAQ,aAAW,gBAA/B,UACE,cAAC8N,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,uBAGJ,cAACC,GAAA,EAAD,UACG9E,EAAOlF,KAAI,SAAAoD,GAAK,OAAI,cAAC,GAAD,CAA+BA,MAAOA,GAAnBA,EAAM0D,eAUhD+b,GAAsC,SAAC,GAEtC,IADLzf,EACI,EADJA,MAEA,OACE,cAAC0G,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAWgZ,QAAS,EAApB,SAAwB3f,EAAM0D,QADjB1D,EAAM0D,OCzBZkc,GAAwC,SAAC,GAE/C,IADL9d,EACI,EADJA,OAEA,OACE,eAAC0E,GAAA,EAAD,CAAO7N,KAAK,QAAQ,aAAW,gBAA/B,UACE,cAAC8N,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,wBAGJ,cAACC,GAAA,EAAD,UACG9E,EAAOlF,KAAI,SAAAoD,GAAK,OACf,cAAC,GAAD,CAA+BA,MAAOA,GAAnBA,EAAM0D,eAW7B+b,GAAsC,SAAC,GAEtC,IADLzf,EACI,EADJA,MAEA,OACE,eAAC0G,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UAAY3G,EAAM0D,OAClB,cAACiD,GAAA,EAAD,UAAY3G,EAAM+B,SAFL/B,EAAM0D,OCvBZmc,GAAmB,WAC9B,IAAMve,EAAYK,KAClB,IAAKL,EAAW,OAAO,KAEvB,IAAMwe,EAAexe,EAAUQ,OAC5BlG,QAAO,SAAAoE,GAAK,OAAIA,EAAMzK,OAAS4J,GAAUc,UACzCrD,KAAI,SAAAoD,GAAK,OAAIA,KAEV+f,EAAiBze,EAAUQ,OAC9BlG,QAAO,SAAAoE,GAAK,OAAIA,EAAMzK,OAAS4J,GAAU6P,YACzCpS,KAAI,SAAAoD,GAAK,OAAIA,KAEVggB,EAAkB1e,EAAUQ,OAC/BlG,QAAO,SAAAoE,GAAK,OAAIA,EAAMzK,OAAS4J,GAAU8P,aACzCrS,KAAI,SAAAoD,GAAK,OAAIA,KAEhB,OAAO,cAAC,GAAD,UACL,eAACzI,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQkQ,SAAU,QAAtC,UACE,eAACnQ,EAAA,EAAD,CAAKvC,GAAI,CAAEqC,QAAS,EAAGS,SAAU,GAAjC,UACE,cAACtC,EAAA,EAAD,CAAYN,QAAS,KAArB,oBACA,cAAC,GAAD,CAAiB4M,OAAQge,OAG3B,eAACvoB,EAAA,EAAD,CAAKvC,GAAI,CAAEqC,QAAS,EAAGS,SAAU,GAAjC,UACE,cAACtC,EAAA,EAAD,CAAYN,QAAS,KAArB,uBACA,cAAC,GAAD,CAAmB4M,OAAQie,OAG7B,eAACxoB,EAAA,EAAD,CAAKvC,GAAI,CAAEqC,QAAS,EAAGS,SAAU,GAAjC,UACE,cAACtC,EAAA,EAAD,CAAYN,QAAS,KAArB,uBACA,cAAC,GAAD,CAAoB4M,OAAQke,aCzBvBC,GAAoB,WAC/B,IAAM3e,EAAYK,KACZue,EAAOriB,KAAajC,OAAO4hB,IAC3B5tB,EAAQ8rB,eACRC,EAAmBC,aAAchsB,EAAMisB,YAAYC,GAAG,OACtDqE,EAAevX,KAErB,IAAKtH,EAAW,OAAO,KAEvB,IAAM4F,EAAM5F,EAAU4F,IAChByD,EAAgBrJ,EAAUqJ,MAAM5N,QAAO,SAACC,EAAKmM,GAAN,OAAgBnM,EAAMmM,EAAMrV,QAAO,GAE1E0iB,EAAkB,eAACjf,EAAA,EAAD,CAAKvC,GAAI,CAAEqP,SAAU,GAAI5O,UAAW,SAApC,UACtB,cAAC,GAAD,CAAMiO,KAAK,QAAQ5P,MAAO4U,GAAYyX,KACtC,cAAC,GAAD,CAAMzc,KAAK,QAAQ5P,MAAO6W,OAG5B,OACE,cAACpT,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQE,cAAe,SAAUD,IAAK,GAA1D,SACE,eAAC,GAAD,CACEoe,MAAO3O,EAAIS,OAAST,EAAIxD,KAAMqS,SAAU7O,EAAInC,SAAU+Q,cAAe,GACrEE,WAAYQ,EAFd,UAIE,cAAC,GAAD,IAGA,eAACjf,EAAA,EAAD,CAAKvC,GAAI,CAAEwC,QAAS,OAAQE,cAAeikB,EAAmB,cAAgB,UAA9E,UACE,cAAC,GAAD,IAEA,eAACpkB,EAAA,EAAD,CAAKvC,GAAI,CAAE8C,SAAU,GAArB,UACE,cAAC,GAAD,IAEA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IAEA,eAAC,GAAD,WACE,cAACtC,EAAA,EAAD,CAAYN,QAAS,KAArB,sBACA,cAAC,GAAD,CAAagW,SAAU5J,EAAU4J,cAGnC,eAAC,GAAD,WACE,cAAC1V,EAAA,EAAD,CAAYN,QAAS,KAArB,kBACA,cAAC,GAAD,CAAUyG,KAAMukB,mBCzDjBE,GAAwB,WAGnC,OAFkBze,KAKhB,cAAC,GAAD,IAHqB,MCKZ0e,GAA4C,SAAC,GAGnD,IAFL/Y,EAEI,EAFJA,IAEI,IADJgZ,mBACI,MADU,SAACxsB,GAAD,OAAWA,GACrB,EACAysB,EAAe,EAEbC,EAAUlZ,EACbuB,MAAK,SAACC,EAAGC,GAAJ,OAAUC,aAASF,EAAEG,MAAMC,UAAYF,aAASD,EAAEE,MAAMC,aAC7DtM,KAAI,SAAAuM,GAAK,OACR,eAACzC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,W/FnBoBsC,E+FmBGE,EAAMF,K/FlBf,kBAATA,IAAmBA,EAAOD,aAASC,IACvCN,aAAOM,EAAM,S+FkBd,cAACtC,GAAA,EAAD,UAAYwC,EAAMwF,OAClB,cAAChI,GAAA,EAAD,CAAW8Z,MAAM,QAAjB,SAA0BH,EAAYnX,EAAMrV,SAC5C,cAAC6S,GAAA,EAAD,CAAW8Z,MAAM,QAAjB,SAA0BH,EAAYC,GAAgBpX,EAAMrV,WAJ/CqV,EAAM3P,I/FlBpB,IAAqByP,K+F4B1B,OAFAuX,EAAQE,UAGN,cAACzmB,EAAA,EAAD,UACE,eAACuM,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,CAAW8Z,MAAM,QAAjB,oBACA,cAAC9Z,GAAA,EAAD,CAAW8Z,MAAM,QAAjB,0BAGJ,cAAC7Z,GAAA,EAAD,UACG4Z,UCtCEG,GAAgB,WAC3B,IAAMrf,EAAYK,KAClB,OAAKL,EAGH,cAACrH,EAAA,EAAD,UACE,cAAC,GAAD,CAAiBqN,IAAKhG,EAAUqJ,UAJb,MCDZiW,GAAmB,WAC9B,IAAMC,EAA2B,CAC/BvlB,GAASoR,OACTpR,GAASsW,QACTtW,GAAS8B,QACT9B,GAASqX,IACTrX,GAAS8U,SAGL0Q,EAAYjjB,KACfjC,QAAO,SAAAD,GAAI,OAAKA,EAAK2C,cACrB1C,QAAO,SAAAD,GAAI,OAAKklB,EAAa/Z,SAASnL,EAAKwB,aAE9C,OACE,qCACE,cAAC3H,EAAA,EAAD,CAAYN,QAAS,KAArB,wBACA,cAAC,GAAD,CAAUyG,KAAMmlB,QCdTC,GAAgB,WAC3B,IAAMzf,EAAYK,KACZwe,EAAevX,KACfjN,EAAOkC,KACb,IAAKyD,EAAW,OAAO,KAEvB,IAAM0f,EAAYrlB,EACfC,QAAO,SAAAD,GAAI,MAAyB,kBAAdA,EAAK0K,QAC3BzJ,KAAI,SAAAjB,GAAI,OAAIA,EAAK0K,QACjBtJ,QAAO,SAACC,EAAKqJ,GAAN,OAAerJ,EAAMqJ,IAAM,GAErC,OACE,eAACpM,EAAA,EAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAMyJ,KAAM,gBAAiB5P,MAAO4U,GAAYyX,KAChD,cAAC,GAAD,CAAMzc,KAAM,aAAc5P,MAAO4U,GAAYsY,KAC7C,cAAC,GAAD,CAAMtd,KAAM,YAAa5P,MAAO4U,GAAYsY,EAAYb,QAE1D,cAAC,GAAD,CAAiB7Y,IAAKhG,EAAUgH,MAAOgY,YAAa5X,SCnB7CuY,GAAmB,WAC9B,IAAMC,EAAW3iB,GAA2BjD,GAASsW,SAErD,OACE,qCACE,cAACpc,EAAA,EAAD,CAAYN,QAAS,KAArB,sBACA,cAAC,GAAD,CAAUyG,KAAMulB,QCNTC,GAAkB,WAC7B,IAAMC,EAAU7iB,GAA0BjD,GAASoR,QAChD9Q,QAAO,SAAAD,GAAI,OAAKA,EAAK2C,cAExB,OACE,qCACE,cAAC9I,EAAA,EAAD,CAAYN,QAAS,KAArB,qBACA,cAAC,GAAD,CAAUyG,KAAMylB,QCETC,GAAoB,WAC/B,IAAM1e,EAAUC,cACRxR,EAASkwB,cAATlwB,KACA0iB,EAAgByN,cAAhBzN,YACR,EAAkCxgB,mBAA2B,MAA7D,mBAAOgO,EAAP,KAAkBkgB,EAAlB,KAQA,OANA7tB,qBAAU,WACR,IAAM2N,ElDcH,SAAwBwS,GAC7B,IAAMxS,EAA4B4S,KAAKG,MAAM5U,aAAaC,QAAQmU,GAAoBC,KAAiB,QACvG,OAAIxS,EAAkB6K,GAAiB7K,GAChC,KkDjBamgB,CAAc3N,GACd,OAAdxS,GAAoBqB,EAAQI,KAAK,KACrCye,EAAalgB,KACZ,CAACqB,EAASmR,IAERxS,EAGH,cAAC,GAAD,CAAmBA,UAAWA,EAA9B,SACE,cAAC,GAAD,CAAYxH,UAAW0J,GAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOpS,KAAI,UAAKA,EAAL,YAAqB2H,UAAWooB,KAC3C,cAAC,IAAD,CAAO/vB,KAAI,UAAKA,EAAL,aAAsB2H,UAAWkoB,KAC5C,cAAC,IAAD,CAAO7vB,KAAI,UAAKA,EAAL,aAAsB2H,UAAWokB,KAC5C,cAAC,IAAD,CAAO/rB,KAAI,UAAKA,EAAL,SAAkB2H,UAAW6nB,KACxC,cAAC,IAAD,CAAOxvB,KAAI,UAAKA,EAAL,UAAmB2H,UAAW4nB,KACzC,cAAC,IAAD,CAAOvvB,KAAI,UAAKA,EAAL,UAAmB2H,UAAWgoB,KACzC,cAAC,IAAD,CAAO3vB,KAAI,UAAKA,EAAL,KAAc2H,UAAWqnB,KACpC,cAAC,IAAD,UAAO,cAAC,IAAD,CAAUsB,GAAG,eAbH,cAACznB,EAAA,EAAD,0BCnB3B+Z,KAEA,IAiBe2N,GAjBC,WACd,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOvwB,KAAK,cAAc2H,UAAWub,KACrC,cAAC,IAAD,CAAOljB,KAAK,SAAS2H,UAAWoS,KAChC,cAAC,IAAD,CAAO/Z,KAAK,gBAAgB2H,UAAWsoB,KACvC,cAAC,IAAD,UAAO,cAAC,IAAD,CAAUK,GAAG,4BCPjBE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrwB,MAAK,YAAkD,IAA/CswB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.c4d26a38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DamageTrack\":\"DamageTrack_DamageTrack__3Cfmx\"};","/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { createTheme, StyledEngineProvider, ThemeProvider } from '@mui/material'\nimport { FC } from 'react'\n\nexport const displayFontFamily = '\"Comfortaa\", \"Helvetica\", \"Arial\", sans-serif'\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#CE93D8',\n    },\n    secondary: {\n      main: '#03A9F4',\n    },\n    text: {\n      primary: '#EEEEEE',\n    },\n    background: {\n      default: '#2D2736',\n    },\n  },\n\n  typography: {\n    h1: { fontFamily: displayFontFamily },\n    h2: { fontFamily: displayFontFamily },\n    h3: { fontFamily: displayFontFamily },\n    h4: { fontFamily: displayFontFamily },\n    h5: { fontFamily: displayFontFamily },\n    h6: { fontFamily: displayFontFamily },\n  },\n})\n\nexport const AppThemeProvider: FC = ({\n  children,\n}) => {\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </StyledEngineProvider>\n  )\n}\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\n\nimport { ApiError } from './ApiError'\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL\n\nexport class ServerApi {\n  private static axiosInstance: AxiosInstance = axios.create({\n    baseURL: SERVER_URL,\n    withCredentials: true,\n  })\n\n  public static get<R> (path: string, config?: AxiosRequestConfig): Promise<R> {\n    return this.axiosInstance\n      .get(path, config).then(res => res.data as R)\n      .catch((error) => this.handleError(error))\n  }\n\n  public static post<R, D = unknown> (path: string, data?: D, config?: AxiosRequestConfig): Promise<R> {\n    return this.axiosInstance\n      .post(path, data, config).then(res => res.data as R)\n      .catch((error) => this.handleError(error))\n  }\n\n  private static async handleError<R> (error: unknown): Promise<R> {\n    if (!axios.isAxiosError(error)) throw error\n    if (!error.response) throw error\n    throw error.response.data\n  }\n\n  public static isApiError (error: unknown): error is ApiError {\n    return (error as ApiError).err !== undefined\n  }\n}\n","import { ServerApi } from '../Api/ServerApi'\nimport { User } from './User'\n\nexport const AuthApi = {\n  signup (username: string, password: string): Promise<User> {\n    return ServerApi\n      .post<{ user: User }>('/signup', { username, password })\n      .then(data => data.user)\n  },\n\n  login (username: string, password: string): Promise<User> {\n    return ServerApi\n      .post<{ user: User }>('/login', { username, password })\n      .then(data => data.user)\n  },\n\n  logout (): Promise<never> {\n    return ServerApi\n      .post<never>('/logout')\n  },\n\n  fetchUser (): Promise<User> {\n    return ServerApi.get<{ user: User }>('/user')\n      .then(data => data.user)\n  },\n}\n","import { createContext, FC, useContext, useEffect, useState } from 'react'\n\nimport { AuthApi } from './AuthApi'\nimport { User } from './User'\n\ninterface AuthContextState {\n  user: User | null\n  fetching: boolean\n\n  login (username: string, password: string): Promise<User>\n\n  signup (username: string, password: string): Promise<User>\n\n  fetchUser (): Promise<User>\n\n  logout (): Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextState>({\n  user: null,\n  fetching: false,\n  login: () => { throw new Error('Invalid AuthContext') },\n  signup: () => { throw new Error('Invalid AuthContext') },\n  fetchUser: () => { throw new Error('Invalid AuthContext') },\n  logout: () => { throw new Error('Invalid AuthContext') },\n})\n\nexport const AuthProvider: FC = ({\n  children,\n}) => {\n  const [user, setUser] = useState<User | null>(null)\n  const [fetching, setFetching] = useState<boolean>(false)\n\n  const login = (username: string, password: string) => {\n    return AuthApi.login(username, password).then(user => {\n      setUser(user)\n      return user\n    })\n  }\n\n  const signup = (username: string, password: string) => {\n    return AuthApi.signup(username, password).then(user => {\n      setUser(user)\n      return user\n    })\n  }\n\n  const fetchUser = (): Promise<User> => {\n    setFetching(true)\n    return AuthApi.fetchUser()\n      .then(user => {\n        setUser(user)\n        return user\n      })\n      .finally(() => setFetching(false))\n  }\n\n  const logout = () => {\n    setUser(null)\n    return AuthApi.logout()\n  }\n\n  const state: AuthContextState = {\n    user,\n    fetching,\n    fetchUser,\n    signup,\n    login,\n    logout,\n  }\n\n  useEffect(() => {\n    fetchUser().catch(console.error)\n  }, [])\n\n  return (\n    <AuthContext.Provider value={state}>{children}</AuthContext.Provider>\n  )\n}\n\nexport const useAuth = (): AuthContextState => {\n  return useContext(AuthContext)\n}\n\nexport const useCurrentUser = (): User | null => {\n  return useAuth().user\n}\n","import { Button, TextField, Typography } from '@mui/material'\nimport { ChangeEvent, FC, useState } from 'react'\n\nimport { ServerApi } from '../../Api/ServerApi'\nimport { useAuth } from '../AuthProvider'\n\ninterface LoginFormProps {\n  onLogin (): void\n}\n\nexport const LoginForm: FC<LoginFormProps> = ({\n  onLogin,\n}) => {\n  const [username, setUsername] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [authorizing, setAuthorizing] = useState<boolean>(false)\n  const [message, setMessage] = useState<string | null>(null)\n\n  const { login } = useAuth()\n\n  const onSubmit = () => {\n    setAuthorizing(true)\n\n    login(username, password)\n      .then(() => onLogin())\n      .catch((error) => {\n        setAuthorizing(false)\n\n        if (ServerApi.isApiError(error)) {\n          setMessage(error.msg)\n        } else {\n          console.error(error)\n          setMessage('Server Error')\n        }\n      })\n  }\n\n  return <form onSubmit={onSubmit}>\n    <TextField\n      autoFocus\n      label=\"Username\"\n      fullWidth\n      sx={{ marginBottom: 1 }}\n      variant=\"outlined\"\n      value={username}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => setUsername(e.target.value)}\n      disabled={authorizing}\n    />\n\n    <TextField\n      label=\"Password\"\n      fullWidth\n      type=\"password\"\n      variant=\"outlined\"\n      sx={{ marginBottom: 1 }}\n      value={password}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\n      disabled={authorizing}\n    />\n\n    {message && (\n      <Typography sx={{ textAlign: 'center', marginBottom: 1 }}>{message}</Typography>\n    )}\n\n    <Button type=\"submit\" variant=\"contained\" onClick={onSubmit} disabled={authorizing} fullWidth>\n      {authorizing ? 'Connecting...' : 'Login'}\n    </Button>\n  </form>\n}\n","import { Dispatch, Reducer, useReducer } from 'react'\n\ninterface FormState {\n  username: {\n    value: string\n    error: string | null\n    dirty: boolean\n  }\n  password: {\n    value: string\n    error: string | null\n    dirty: boolean\n  }\n  confirmPassword: {\n    value: string\n    error: string | null\n    dirty: boolean\n  }\n  submitting: boolean\n  valid: boolean\n  dirty: boolean\n  error: string | null\n}\n\nexport const defaultState: FormState = {\n  username: {\n    dirty: false,\n    error: null,\n    value: '',\n  },\n\n  confirmPassword: {\n    dirty: false,\n    error: null,\n    value: '',\n  },\n\n  password: {\n    dirty: false,\n    error: null,\n    value: '',\n  },\n\n  dirty: false,\n  valid: false,\n  submitting: false,\n  error: null,\n}\n\ntype FormAction =\n  | { type: 'setUsername'; value: string }\n  | { type: 'blurUsername' }\n  | { type: 'setPassword'; value: string }\n  | { type: 'blurPassword' }\n  | { type: 'setConfirmPassword'; value: string }\n  | { type: 'blurConfirmPassword' }\n  | { type: 'error'; error: string }\n  | { type: 'submit' }\n\nconst reducer: Reducer<FormState, FormAction> = (state, action): FormState => {\n  switch (action.type) {\n    case 'setUsername':\n      return {\n        ...state,\n        username: {\n          ...state.username,\n          error: validateUsername(action.value),\n          value: action.value,\n        },\n      }\n    case 'blurUsername':\n      return {\n        ...state,\n        username: {\n          ...state.username,\n          dirty: true,\n        },\n      }\n    case 'setPassword':\n      return {\n        ...state,\n        password: {\n          ...state.password,\n          value: action.value,\n          error: validatePassword(action.value),\n        },\n      }\n    case 'blurPassword':\n      return {\n        ...state,\n        password: {\n          ...state.password,\n          dirty: true,\n        },\n      }\n    case 'setConfirmPassword':\n      return {\n        ...state,\n        confirmPassword: {\n          ...state.confirmPassword,\n          value: action.value,\n          error: validateConfirmPassword(state.password.value, action.value),\n        },\n      }\n    case 'blurConfirmPassword':\n      return {\n        ...state,\n        confirmPassword: {\n          ...state.confirmPassword,\n          dirty: true,\n        },\n      }\n    case 'submit':\n      return {\n        ...state,\n        submitting: true,\n        error: null,\n      }\n    case 'error':\n      return {\n        ...state,\n        submitting: false,\n        error: action.error,\n      }\n    default:\n      return state\n  }\n}\n\nfunction validateUsername (username: string): string | null {\n  if (!username || username.trim() === '')\n    return 'Username is required'\n\n  return null\n}\n\nfunction validatePassword (password: string): string | null {\n  if (!password || password === '')\n    return 'Password is required'\n\n  if (password.length <= 10)\n    return 'Password must be longer then 10 characters'\n\n  return null\n}\n\nfunction validateConfirmPassword (confirmPassword: string, password: string): string | null {\n  if (confirmPassword !== password)\n    return 'Password doesn\\'t match'\n\n  return null\n}\n\nexport const useFormState = (): [FormState, Dispatch<FormAction>] => {\n  return useReducer(reducer, defaultState)\n}\n","import { Button, TextField, Typography } from '@mui/material'\nimport { ChangeEvent, FC } from 'react'\n\nimport { ServerApi } from '../../Api/ServerApi'\nimport { useAuth } from '../AuthProvider'\nimport { useFormState } from './SignupFormState'\n\ninterface SignupFormProps {\n  onSignup (): void\n}\n\nexport const SignupForm: FC<SignupFormProps> = ({\n  onSignup,\n}) => {\n  const [form, dispatch] = useFormState()\n\n  const { signup } = useAuth()\n\n  const onSubmit = () => {\n    dispatch({ type: 'submit' })\n\n    signup(form.username.value, form.password.value)\n      .then(() => onSignup())\n      .catch((error) => {\n        if (ServerApi.isApiError(error)) {\n          dispatch({ type: 'error', error: error.msg })\n        } else {\n          console.error(error)\n          dispatch({ type: 'error', error: 'Server Error' })\n        }\n      })\n  }\n\n  return <form onSubmit={onSubmit}>\n    <TextField\n      autoFocus\n      label=\"Username\"\n      fullWidth\n      sx={{ marginBottom: 1 }}\n      variant=\"outlined\"\n      value={form.username.value}\n      onBlur={() => dispatch({ type: 'blurUsername' })}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => dispatch({\n        type: 'setUsername',\n        value: e.target.value,\n      })}\n      disabled={form.submitting}\n    />\n\n    {form.username.dirty && form.username.error && (\n      <Typography sx={{ marginBottom: 1 }}>{form.username.error}</Typography>\n    )}\n\n    <TextField\n      label=\"Password\"\n      fullWidth\n      type=\"password\"\n      variant=\"outlined\"\n      sx={{ marginBottom: 1 }}\n      value={form.password.value}\n      onBlur={() => dispatch({ type: 'blurPassword' })}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => dispatch({\n        type: 'setPassword',\n        value: e.target.value,\n      })}\n      disabled={form.submitting}\n    />\n\n    {form.password.dirty && form.password.error && (\n      <Typography sx={{ marginBottom: 1 }}>{form.password.error}</Typography>\n    )}\n\n    <TextField\n      label=\"Confirm Password\"\n      fullWidth\n      type=\"password\"\n      variant=\"outlined\"\n      sx={{ marginBottom: 1 }}\n      value={form.confirmPassword.value}\n      onBlur={() => dispatch({ type: 'blurConfirmPassword' })}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => dispatch({\n        type: 'setConfirmPassword',\n        value: e.target.value,\n      })}\n      disabled={form.submitting}\n    />\n\n    {form.confirmPassword.dirty && form.confirmPassword.error && (\n      <Typography sx={{ marginBottom: 1 }}>{form.confirmPassword.error}</Typography>\n    )}\n\n    {form.error && (\n      <Typography sx={{ textAlign: 'center', marginBottom: 1 }}>{form.error}</Typography>\n    )}\n\n    <Button type=\"submit\" variant=\"contained\" onClick={onSubmit} disabled={form.submitting} fullWidth>\n      {form.submitting ? 'Registering...' : 'Login'}\n    </Button>\n  </form>\n}\n","import { Box, Button, Dialog, DialogContent, Tab, Tabs } from '@mui/material'\nimport { FC, useState } from 'react'\n\nimport { LoginForm } from './LoginForm'\nimport { SignupForm } from './SignupForm'\n\ninterface LoginDialogProps {\n  open?: boolean\n\n  onClose (): void\n}\n\nexport const LoginDialog: FC<LoginDialogProps> = ({\n  open = false,\n  onClose,\n}) => {\n  const [activeTab, setActiveTab] = useState<string>('login')\n\n  return (\n    <Dialog open={open}>\n      <DialogContent sx={{ padding: 1, width: 400 }}>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n            <Tabs\n              value={activeTab}\n              onChange={(_, value) => setActiveTab(value)}\n              orientation=\"vertical\"\n              sx={{ flexGrow: 1 }}\n            >\n              <Tab label=\"Login\" value=\"login\" />\n              <Tab label=\"Sign Up\" value=\"signup\" />\n            </Tabs>\n            <Button onClick={onClose} variant=\"outlined\">Cancel</Button>\n          </Box>\n\n          <Box sx={{ flexGrow: 1 }}>\n            {activeTab === 'login' && <LoginForm onLogin={onClose} />}\n            {activeTab === 'signup' && <SignupForm onSignup={onClose} />}\n          </Box>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { format, parseISO } from 'date-fns'\n\nexport const noOp = (): void => {/* No Operation */}\n\nexport function formatDate (date: Date | string): string {\n  if (typeof date === 'string') date = parseISO(date)\n  return format(date, 'PP')\n}\n","import MenuIcon from '@mui/icons-material/Menu'\nimport {\n  AppBar as MuiAppBar,\n  Button,\n  CircularProgress,\n  IconButton,\n  Menu,\n  MenuItem,\n  Toolbar,\n  Typography,\n} from '@mui/material'\nimport React, { FC, useState } from 'react'\n\nimport { useAuth, useCurrentUser } from '../Auth/AuthProvider'\nimport { LoginDialog } from '../Auth/Login/LoginDialog'\nimport { noOp } from '../Helpers'\n\ntype NavBarProps = {\n  withMenu?: boolean\n  openMenu? (): void\n}\n\nexport const AppBar: FC<NavBarProps> = ({\n  withMenu,\n  openMenu = noOp,\n}) => {\n  const { fetching: fetchingUser, user: currentUser } = useAuth()\n\n  return (\n    <MuiAppBar position=\"sticky\" sx={{ top: 0 }}>\n      <Toolbar>\n        {withMenu && (\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            onClick={() => openMenu()}\n          >\n            <MenuIcon />\n          </IconButton>\n        )}\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          ShadowSIN 6e\n        </Typography>\n\n        {process.env['REACT_APP_ENABLE_SERVER'] === 'true' && (\n          fetchingUser ? (\n            <CircularProgress sx={{ width: '20px' }} />\n          ) : (\n            currentUser ? <UserMenu /> : <LoginButton />\n          )\n        )}\n      </Toolbar>\n    </MuiAppBar>\n  )\n}\n\nexport const UserMenu: FC = () => {\n  const currentUser = useCurrentUser()\n  const [menuOpen, setMenuOpen] = useState<boolean>(false)\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n  const { logout } = useAuth()\n\n  if (!currentUser) return null\n\n  const openMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n    setMenuOpen(true)\n  }\n\n  const onLogout = () => {\n    logout().catch(console.error)\n  }\n\n  return (\n    <>\n      <Button onClick={openMenu}>{currentUser.username}</Button>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={menuOpen}\n        onClose={() => setMenuOpen(false)}\n      >\n        <MenuItem onClick={onLogout}>Logout</MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport const LoginButton: FC = () => {\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false)\n\n  return (\n    <>\n      <Button onClick={() => setDialogOpen(true)}>Login</Button>\n      <LoginDialog open={dialogOpen} onClose={() => setDialogOpen(false)} />\n    </>\n  )\n}\n","import { ActiveSkillId } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { GearData } from './GearData'\n\nexport enum EffectType {\n  attrBonus = 'attrBonus',\n  attrOverride = 'attrOverride',\n  initBonus = 'initBonus',\n  skillBonus = 'skillBonus',\n  dicePoolBonus = 'dicePoolBonus',\n  defRatingBonus = 'defRatingBonus',\n}\n\ninterface BaseGearEffect {\n  type: EffectType\n}\n\ninterface AttrBonus extends BaseGearEffect {\n  type: EffectType.attrBonus\n  attr: string\n  bonus: number\n}\n\nexport function isAttrBonus (effect: BaseGearEffect): effect is AttrBonus {\n  return effect.type === EffectType.attrBonus\n}\n\ninterface AttrOverride extends BaseGearEffect {\n  type: EffectType.attrOverride\n  attr: string\n  value: number\n}\n\nexport function isAttrOverride (effect: BaseGearEffect): effect is AttrOverride {\n  return effect.type === EffectType.attrOverride\n}\n\ninterface InitBonus extends BaseGearEffect {\n  type: EffectType.initBonus\n  dice: number\n}\n\nexport function isInitBonus (effect: BaseGearEffect): effect is InitBonus {\n  return effect.type === EffectType.initBonus\n}\n\ninterface SkillBonus extends BaseGearEffect {\n  type: EffectType.skillBonus\n  skill: ActiveSkillId\n  bonus: number\n}\n\nexport function isSkillBonus (effect: BaseGearEffect): effect is SkillBonus {\n  return effect.type === EffectType.skillBonus\n}\n\ninterface DicePoolBonus extends BaseGearEffect {\n  type: EffectType.dicePoolBonus\n  poolType: string\n  bonus: number\n}\n\nexport function isDicePoolBonus (effect: BaseGearEffect): effect is DicePoolBonus {\n  return effect.type === EffectType.dicePoolBonus\n}\n\ninterface DefRatingBonus extends BaseGearEffect {\n  type: EffectType.defRatingBonus\n  bonus: number\n}\n\nexport function isDefRatingBonus (effect: BaseGearEffect): effect is DefRatingBonus {\n  return effect.type === EffectType.defRatingBonus\n}\n\nexport type Effect =\n  | AttrBonus\n  | AttrOverride\n  | InitBonus\n  | SkillBonus\n  | DicePoolBonus\n  | DefRatingBonus\n\nexport const collectGearEffects = (gear: GearData[]): Effect[] => {\n  return gear\n    .filter(gear => gear.effects)\n    .flatMap(gear => gear.effects as Effect[])\n}\n","import { Box, Paper } from '@mui/material'\nimport React, { FC, useState } from 'react'\n\nimport { AppBar } from '../UI/AppBar'\nimport { NavDrawerProps } from '../UI/NavDrawer'\n\ninterface RootLayoutProps {\n  NavDrawer?: FC<NavDrawerProps>\n}\n\nexport const RootLayout: FC<RootLayoutProps> = ({\n  NavDrawer,\n  children,\n}) => {\n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n\n  return (\n    <Paper\n      sx={{\n        display: 'grid',\n        gridTemplateRows: 'auto 1fr',\n        bgcolor: 'background.default',\n        height: '100vh',\n        width: '100vw',\n        overflow: 'auto',\n      }}\n      square\n    >\n      <AppBar withMenu={!!NavDrawer} openMenu={() => setDrawerOpen(true)} />\n      {NavDrawer && <NavDrawer open={drawerOpen} closeDrawer={() => setDrawerOpen(false)} />}\n\n      <Box sx={{ width: '100%', maxWidth: 1200, margin: '0 auto', padding: 1 }}>\n        {children}\n      </Box>\n    </Paper>\n  )\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum AugmentAttr {\n  grade = 'augment.grade',\n  rating = 'augment.rating',\n  slot = 'augment.slot',\n  essenceCost = 'augment.essenceCost',\n  capacity = 'augment.capacity',\n  capacityCost = 'augment.capacityCost',\n}\n\nregisterAttrNames({\n  [AugmentAttr.grade]: 'Grade',\n  [AugmentAttr.rating]: 'Rating',\n  [AugmentAttr.slot]: 'Slot',\n  [AugmentAttr.essenceCost]: 'Essence',\n  [AugmentAttr.capacity]: 'Capacity',\n  [AugmentAttr.capacityCost]: 'Capacity Cost',\n})\n","import { RecordId } from '../Api/Model'\nimport { AttrList } from '../System/Attribute'\nimport { Source } from '../System/Source'\nimport { ArmorData } from './Armor/ArmorData'\nimport { ArmorModData } from './Armor/ArmorModData'\nimport { AugmentData } from './Augments/AugmentData'\nimport { Availability } from './Availability'\nimport { Effect } from './Effect'\nimport { LicenseData } from './License/LicenseData'\nimport { SinData } from './License/SinData'\nimport { OtherGearData } from './OtherGearData'\nimport { RccData } from './Rcc/RccData'\nimport { AutosoftData } from './Software/Autosoft/AutosoftData'\nimport { VehicleData } from './Vehicles/VehicleData'\nimport { VehicleModData } from './Vehicles/VehicleModData'\nimport { WeaponData } from './Weapons/WeaponData'\nimport { WeaponModData } from './Weapons/WeaponModData'\n\nexport type Cost = number\n\nexport enum GearType {\n  armor = 'armor',\n  armorMod = 'armorMod',\n  augment = 'augment',\n  autosoft = 'autosoft',\n  license = 'license',\n  rcc = 'rcc',\n  sin = 'sin',\n  vehicle = 'vehicle',\n  vehicleMod = 'vehicleMod',\n  weapon = 'weapon',\n  weaponMod = 'weaponMod',\n\n  other = 'other',\n}\n\nexport interface BaseGearData {\n  id: RecordId\n  source?: Source\n  gearType: GearType\n  name: string\n  type: string\n  avail?: Availability\n  cost?: Cost\n  capacity?: number\n  quantity?: number\n\n  attributes?: AttrList\n  attachedTo?: RecordId\n\n  wirelessBonus?: {\n    enabled: boolean\n    description: string\n    effects?: Effect[]\n  }\n\n  description?: string\n  effects?: Effect[]\n\n  [key: string]: unknown\n}\n\nexport type GearData =\n  | OtherGearData\n  | ArmorData\n  | ArmorModData\n  | AugmentData\n  | AutosoftData\n  | LicenseData\n  | RccData\n  | SinData\n  | VehicleData\n  | VehicleModData\n  | WeaponData\n  | WeaponModData\n","import { BaseGearData, GearData, GearType } from '../GearData'\nimport { AugmentAttr } from './AugmentAttr'\n\nexport interface AugmentData extends BaseGearData {\n  augmentType?: AugmentType\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade\n    [AugmentAttr.essenceCost]: number\n    [AugmentAttr.slot]: AugmentSlot\n    [AugmentAttr.rating]?: number\n    [AugmentAttr.capacity]?: number\n    [AugmentAttr.capacityCost]?: number\n  }\n}\n\nexport function isAugment (gear: GearData): gear is AugmentData {\n  return gear.gearType === GearType.augment\n}\n\nexport enum AugmentType {\n  controlRig = 'controlRig',\n}\n\nexport enum AugmentSlot {\n  headware = 'headware',\n  eyeware = 'eyeware',\n  earwear = 'earwear',\n  bodyware = 'bodyware',\n  cyberlimb = 'cyberlimb',\n  bioware = 'bioware',\n}\n\nexport enum AugmentGrade {\n  used = 'used',\n  alpha = 'alphaware',\n  beta = 'betaware',\n  delta = 'deltaware'\n}\n","import { collectGearEffects, isAttrBonus, isAttrOverride } from '../Gear/Effect'\nimport { GearData } from '../Gear/GearData'\n\nexport type AttrType = string\nexport type AttrValue = number | string | null | undefined\nexport type AttrList<T = AttrValue> = Record<AttrType, T | undefined>\nexport type AttrNames = Record<AttrType, string>\n\nlet attributeNames: AttrNames = {}\n\nexport const registerAttrNames = (names: AttrNames): void => {\n  attributeNames = { ...attributeNames, ...names }\n}\n\nexport const formatAttr = (type: string): string => {\n  return attributeNames[type] || type\n}\n\nexport const calculateAttributes = (attrs: AttrList, gear: GearData[]): AttrList => {\n  const adjustedAttrs: AttrList = {}\n\n  Object.entries(attrs).forEach(([attr, value]) => {\n    if (typeof value === 'number') value = calculateAttribute(attr, value, gear)\n    adjustedAttrs[attr] = value\n  })\n\n  return adjustedAttrs\n}\n\nexport const calculateAttribute = (attr: string, value: number, gear: GearData[]): number => {\n  const effects = collectGearEffects(gear)\n\n  const overrides = effects\n    .filter(isAttrOverride)\n    .filter(effect => effect.attr === attr)\n    .map(effect => effect.value)\n\n  if (overrides.length >= 1) return Math.max(...overrides)\n\n  return effects\n    .filter(isAttrBonus)\n    .filter(effect => effect.attr === attr)\n    .reduce((sum, effect) => sum + effect.bonus, value)\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { RecordId } from '../Api/Model'\nimport { GearData, GearType } from './GearData'\n\nconst GearContext = createContext<GearData[]>([])\n\ninterface GearProviderProps {\n  gear: GearData[]\n}\n\nexport const GearProvider: FC<GearProviderProps> = ({\n  gear,\n  children,\n}) => {\n  return (\n    <GearContext.Provider value={gear}>{children}</GearContext.Provider>\n  )\n}\n\nexport function useAllGear (): GearData[] {\n  return useContext(GearContext)\n}\n\nexport function useGear<T extends GearData = GearData> (gearId: RecordId | undefined): T | undefined {\n  const allGear = useAllGear()\n  if (!gearId) return undefined\n\n  const gear = allGear.find(gear => gear.id === gearId)\n  return gear ? gear as T : undefined\n}\n\ntype GearFilter = (gear: GearData) => boolean\n\nexport function useFindGear<T extends GearData = GearData> (filter: GearFilter): T | undefined {\n  const foundGear = useAllGear().find(filter)\n  return foundGear ? foundGear as T : undefined\n}\n\nexport function useFilterGear<T extends GearData = GearData> (filter: GearFilter): T[] {\n  return useAllGear().filter(filter).map(gear => gear as T)\n}\n\nexport function useAttachedGear (gearId: RecordId): GearData[] {\n  return useFilterGear(gear => gear.attachedTo === gearId)\n}\n\nexport function useGearOfType<T extends GearData> (gearType: GearType): T[] {\n  return useFilterGear<T>(gear => gear.gearType === gearType)\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { AttrList, AttrType, AttrValue } from './Attribute'\n\nconst AttributeContext = createContext<AttrList>({})\n\ninterface AttributeProviderProps {\n  attributes: AttrList\n}\n\nexport const AttributeProvider: FC<AttributeProviderProps> = ({\n  attributes,\n  children,\n}) => {\n  const parentAttrs = useAttributes()\n\n  return (\n    <AttributeContext.Provider value={{ ...parentAttrs, ...attributes }}>\n      {children}\n    </AttributeContext.Provider>\n  )\n}\n\nexport const useAttributes = (keys?: string[]): AttrList => {\n  const allAttributes = useContext(AttributeContext)\n  if (!keys) return allAttributes\n\n  const filtered: AttrList = {}\n  keys.forEach(key => filtered[key] = allAttributes[key])\n  return filtered\n}\n\nexport function useAttribute<T extends AttrValue> (type: AttrType): T {\n  return (useAttributes()[type] as T)\n}\n","import { createContext, FC, useContext, useEffect, useState } from 'react'\n\nimport { RecordId } from '../../Api/Model'\nimport { noOp } from '../../Helpers'\nimport { DamageType } from './DamageType'\n\ntype DamageSetter = (value: number) => void;\n\ntype DamageContextData = {\n  [type in DamageType]?: {\n    value: number\n    setValue?: DamageSetter\n  };\n};\n\nconst DamageContext = createContext<DamageContextData>({})\n\ninterface DamageProviderProps {\n  type: DamageType\n  id: RecordId\n}\n\nexport const DamageProvider: FC<DamageProviderProps> = ({\n  type,\n  id,\n  children,\n}) => {\n  const dmgSessionKey = `dmg.${id}.${type}`\n  const [value, setDmgValue] = useState<number>(0)\n\n  useEffect(() => {\n    const value = parseInt(localStorage.getItem(dmgSessionKey) || '0')\n    setDmgValue(value)\n  }, [dmgSessionKey])\n\n  const onDmgChange = (value: number) => {\n    setDmgValue(value)\n    localStorage.setItem(dmgSessionKey, value.toString())\n  }\n\n  const damages: DamageContextData = {\n    ...useContext(DamageContext),\n    [type]: { value, setValue: onDmgChange },\n  }\n\n  return (\n    <DamageContext.Provider value={damages}>\n      {children}\n    </DamageContext.Provider>\n  )\n}\n\nexport const useDamage = (type: DamageType): number => {\n  return useContext(DamageContext)[type]?.value || 0\n}\n\nexport const useSetDamage = (type: DamageType): DamageSetter => {\n  return useContext(DamageContext)[type]?.setValue || noOp\n}\n\nexport const useDamagePenalty = (types: DamageType[]): number => {\n  const damageData = useContext(DamageContext)\n\n  return types\n    .map(type => damageData[type]?.value || 0)\n    .map(value => Math.floor(value / 3))\n    .reduce((a, b) => a + b, 0)\n}\n","export enum DamageType {\n  charPhysical,\n  charStun,\n  vehiclePhysical\n}\n","import { ActiveSkillData } from './ActiveSkill/ActiveSkillData'\nimport { KnowledgeSkillData } from './KnowledgeSkill/KnowledgeSkillData'\nimport { LanguageSkillData } from './LanguageSkill/LanguageSkillData'\n\nexport enum SkillType {\n  active = 'active',\n  language = 'language',\n  knowledge = 'knowledge',\n}\n\nexport interface BasicSkillData {\n  type: SkillType\n}\n\nexport type SkillData =\n  | ActiveSkillData\n  | LanguageSkillData\n  | KnowledgeSkillData\n","import { BasicSkillData, SkillType } from '../SkillData'\nimport { ActiveSkillId } from './ActiveSkillId'\n\nexport type SkillList = Record<string, number>\n\nexport interface ActiveSkillData extends BasicSkillData {\n  type: SkillType.active\n  skillId: ActiveSkillId\n  rank: number\n  attr: string\n  altAttr?: string\n  speciality?: string | null\n  expertise?: string | null\n}\n\nexport function isActiveSkill (skill: BasicSkillData): skill is ActiveSkillData {\n  return skill.type === SkillType.active\n}\n\nexport const hasSpecialty = (skill?: ActiveSkillData, specialty?: string): boolean => {\n  if (!specialty || !skill || !skill.speciality) return false\n  return skill.speciality.toLowerCase() === specialty.toLowerCase()\n}\n\nexport const hasExpertise = (skill?: ActiveSkillData, specialty?: string): boolean => {\n  if (!specialty || !skill || !skill.expertise) return false\n  return skill.expertise.toLowerCase() === specialty.toLowerCase()\n}\n","import { registerAttrNames } from '../System/Attribute'\n\nexport enum CharacterAttr {\n  body = 'char.body',\n  agility = 'char.agility',\n  reaction = 'char.reaction',\n  strength = 'char.strength',\n  willpower = 'char.willpower',\n  logic = 'char.logic',\n  intuition = 'char.intuition',\n  charisma = 'char.charisma',\n  edge = 'char.edge',\n  essence = 'char.essence',\n  magic = 'char.magic',\n  resonance = 'char.resonance',\n}\n\nregisterAttrNames({\n  [CharacterAttr.body]: 'Body',\n  [CharacterAttr.agility]: 'Agility',\n  [CharacterAttr.reaction]: 'Reaction',\n  [CharacterAttr.strength]: 'Strength',\n  [CharacterAttr.willpower]: 'Willpower',\n  [CharacterAttr.logic]: 'Logic',\n  [CharacterAttr.intuition]: 'Intuition',\n  [CharacterAttr.charisma]: 'Charisma',\n  [CharacterAttr.edge]: 'Edge',\n  [CharacterAttr.essence]: 'Essence',\n  [CharacterAttr.magic]: 'Magic',\n  [CharacterAttr.resonance]: 'Resonance',\n})\n","import { createContext, FC, useContext } from 'react'\n\nimport { AugmentAttr } from '../Gear/Augments/AugmentAttr'\nimport { isAugment } from '../Gear/Augments/AugmentData'\nimport { collectGearEffects, isSkillBonus } from '../Gear/Effect'\nimport { GearProvider, useAllGear } from '../Gear/GearContext'\nimport { calculateAttributes } from '../System/Attribute'\nimport { AttributeProvider } from '../System/AttributeProvider'\nimport { DamageProvider } from '../System/Damage/DamageProvider'\nimport { DamageType } from '../System/Damage/DamageType'\nimport { ActiveSkillData, isActiveSkill, SkillList } from '../System/Skill/ActiveSkill/ActiveSkillData'\nimport { ActiveSkillId } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { Character } from './Character'\nimport { CharacterAttr } from './CharacterAttr'\nimport { CharacterData } from './CharacterData'\n\nconst CharacterContext = createContext<Character | null>(null)\n\ninterface CharacterProviderProps {\n  character: Character\n}\n\nexport const CharacterProvider: FC<CharacterProviderProps> = ({\n  character,\n  children,\n}) => {\n  const characterData = character.data\n\n  const attributes = calculateAttributes(characterData.attributes, characterData.gear)\n\n  attributes[CharacterAttr.essence] = characterData.gear\n    .filter(isAugment)\n    .map(augment => augment.attributes[AugmentAttr.essenceCost])\n    .reduce((essence, essenceCost) => essence - essenceCost, 6)\n\n  return (\n    <CharacterContext.Provider value={character}>\n      <AttributeProvider attributes={attributes}>\n        <GearProvider gear={characterData.gear}>\n          <DamageProvider type={DamageType.charPhysical} id={character.id}>\n            <DamageProvider type={DamageType.charStun} id={character.id}>\n              {children}\n            </DamageProvider>\n          </DamageProvider>\n        </GearProvider>\n      </AttributeProvider>\n    </CharacterContext.Provider>\n  )\n}\n\nexport const useCharacter = (): Character | null => {\n  return useContext(CharacterContext)\n}\n\nexport const useCharacterData = (): CharacterData | null => {\n  return useCharacter()?.data || null\n}\n\nexport function useSkills (skillIds?: string[]): SkillList {\n  const character = useCharacterData()\n  const skillList: SkillList = {}\n\n  if (character) {\n    character.skills\n      .filter(isActiveSkill)\n      .filter(skill => skillIds ? skillIds.includes(skill.skillId) : true)\n      .forEach(skill => skillList[skill.skillId] = skill.rank)\n  }\n\n  return skillList\n}\n\nexport function useActiveSkill (skillId: ActiveSkillId): ActiveSkillData | undefined {\n  const character = useCharacterData()\n  const gear = useAllGear()\n  if (!character) return undefined\n\n  const skill = character.skills\n    .filter(isActiveSkill)\n    .find(skill => skill.skillId === skillId)\n\n  if (!skill) return undefined\n\n  const rank = collectGearEffects(gear)\n    .filter(isSkillBonus)\n    .filter(effect => effect.skill === skillId)\n    .reduce((sum, effect) => sum + effect.bonus, skill.rank)\n\n  return { ...skill, rank }\n}\n","import { FC } from 'react'\n\nexport const PistolSvg: FC = () => {\n  return (\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 306.539 306.539\" enableBackground=\"new 0 0 306.539 306.539\">\n      <g>\n        <path d=\"M298.489,88.77c4.446,0,8.05-3.604,8.05-8.05V54.918c0-4.446-3.604-8.05-8.05-8.05h-13.95v-0.05   c0-4.446-3.604-8.05-8.05-8.05h-60.067c-4.446,0-8.049,3.604-8.049,8.05v13.276c0,3.313-2.687,6-6,6h-69.834c-3.314,0-6-2.687-6-6   V46.819c0-4.446-3.604-8.05-8.05-8.05H18.122C8.114,38.77,0,46.883,0,56.892V88.77H298.489z\"/>\n        <path d=\"m0,100.77v4.443c0,10.009 8.114,18.123 18.122,18.123h3.491l-20.015,106.774c-1.743,9.298 0.744,18.889 6.786,26.169s15.01,11.491 24.47,11.491h48.624c15.303,0 28.437-10.9 31.256-25.942l10.818-57.713c2.965,0.189 5.962,0.296 8.986,0.296 20.268,0 39.479-4.302 54.094-12.111 16.599-8.871 25.74-21.376 25.74-35.21 0-4.777-1.115-9.39-3.226-13.755h67.342c4.446,0 8.05-3.604 8.05-8.05v-14.515h-284.538zm132.539,63.641c-1.783,0-3.536-0.048-5.269-0.124l4.6-24.541c4.677,6.26 10.613,11.876 18.155,16.056 1.535,0.851 3.198,1.255 4.838,1.255 3.518,0 6.93-1.86 8.756-5.155 2.677-4.83 0.931-10.917-3.9-13.594-6.44-3.569-11.231-8.954-14.798-14.973h38.306c5.826,4.289 9.146,9.119 9.146,13.755 0,12.896-25.589,27.321-59.834,27.321z\"/>\n      </g>\n    </svg>\n  )\n}\n","export enum AwakenedType {\n  Mundane = 'Mundane',\n  Full = 'Full',\n  Aspected = 'Aspected',\n  Mystic = 'Mystic',\n  Adept = 'Adept',\n  Technomancer = 'Technomancer',\n}\n","export enum Metatype {\n  Dwarf = 'Dwarf',\n  Elf = 'Elf',\n  Human = 'Human',\n  Ork = 'Ork',\n  Troll = 'Troll'\n}\n","import { ListItem, ListItemIcon, ListItemText, SvgIcon } from '@mui/material'\nimport { FC, ReactElement } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport interface NavDrawerProps {\n  open: boolean\n\n  closeDrawer (): void\n}\n\nexport type NavDrawer = FC<NavDrawerProps>\n\ninterface NavButtonProps {\n  icon: ReactElement\n  label: string\n  routeTo: string\n\n  closeDrawer (): void\n}\n\nexport const NavButton: FC<NavButtonProps> = ({\n  icon,\n  label,\n  routeTo,\n  closeDrawer,\n}) => {\n  const history = useHistory()\n\n  const onNavClick = () => {\n    history.push(routeTo)\n    closeDrawer()\n  }\n\n  return (\n    <ListItem button onClick={onNavClick}>\n      <ListItemIcon>\n        <SvgIcon>{icon}</SvgIcon>\n      </ListItemIcon>\n      <ListItemText primary={label} />\n    </ListItem>\n  )\n}\n","import { faUsers } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box, Drawer, List } from '@mui/material'\n\nimport { NavButton, NavDrawer } from './index'\n\nexport const DefaultNavDrawer: NavDrawer = ({\n  open,\n  closeDrawer,\n  children,\n}) => {\n  return (\n    <Drawer anchor=\"left\" open={open} onClose={closeDrawer}>\n      {children}\n\n      <Box sx={{ flexGrow: 1 }} />\n\n      <List>\n        <NavButton\n          icon={<FontAwesomeIcon icon={faUsers} />}\n          label=\"Characters\"\n          routeTo={'/characters'}\n          closeDrawer={closeDrawer}\n        />\n      </List>\n    </Drawer>\n  )\n}\n","import { faArchive, faAward, faCarAlt, faCogs, faUser, faYenSign } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Divider, List } from '@mui/material'\n\nimport { useCharacter } from '../../Character/CharacterProvider'\nimport { PistolSvg } from '../../Gear/Weapons/PistolSvg'\nimport { DefaultNavDrawer } from './DefaultNavDrawer'\n\nimport { NavButton, NavDrawer } from './index'\n\nexport const CharacterNavDrawer: NavDrawer = ({\n  open,\n  closeDrawer,\n}) => {\n  const character = useCharacter()\n\n  if (!character) return null\n\n  return (\n    <DefaultNavDrawer open={open} closeDrawer={closeDrawer}>\n      <List>\n        <NavButton\n          icon={<FontAwesomeIcon icon={faUser} />}\n          label={character.name}\n          routeTo={`/${character.id}`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<PistolSvg />}\n          label=\"Weapons\"\n          routeTo={`/${character.id}/weapons`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faCarAlt} />}\n          label=\"Vehicles\"\n          routeTo={`/${character.id}/vehicles`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faCogs} />}\n          label=\"Augments\"\n          routeTo={`/${character.id}/augments`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faArchive} />}\n          label=\"Other\"\n          routeTo={`/${character.id}/misc`}\n          closeDrawer={closeDrawer}\n        />\n        <Divider />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faYenSign} />}\n          label=\"Nyuen\"\n          routeTo={`/${character.id}/Nuyen`}\n          closeDrawer={closeDrawer}\n        />\n        <NavButton\n          icon={<FontAwesomeIcon icon={faAward} />}\n          label=\"Karma\"\n          routeTo={`/${character.id}/karma`}\n          closeDrawer={closeDrawer}\n        />\n      </List>\n    </DefaultNavDrawer>\n  )\n}\n","import { Add, Remove } from '@mui/icons-material'\nimport { Box, IconButton } from '@mui/material'\nimport { FC } from 'react'\n\ninterface IncrementorProps {\n  min?: number\n  max?: number\n  value: number\n\n  onChange (value: number): void\n}\n\nexport const Incrementor: FC<IncrementorProps> = ({\n  min = -Infinity,\n  max = Infinity,\n  value,\n  onChange,\n}) => {\n  return (\n    <Box>\n      <IconButton aria-label=\"delete\" size=\"small\" onClick={() => onChange(Math.max(value - 1, min))}>\n        <Remove fontSize=\"inherit\" />\n      </IconButton>\n      {value}\n      <IconButton aria-label=\"delete\" size=\"small\" onClick={() => onChange(Math.min(value + 1, max))}>\n        <Add fontSize=\"inherit\" />\n      </IconButton>\n    </Box>\n  )\n}\n","import { CharacterAttr } from '../../CharacterAttr'\nimport { CharAttributes } from '../../CharacterData'\nimport { Metatype } from '../../Metatypes'\n\nexport const metatypeMaximums: Record<Metatype, CharAttributes> = {\n  Dwarf: {\n    [CharacterAttr.body]: 7,\n    [CharacterAttr.agility]: 6,\n    [CharacterAttr.reaction]: 5,\n    [CharacterAttr.strength]: 8,\n    [CharacterAttr.willpower]: 7,\n    [CharacterAttr.logic]: 6,\n    [CharacterAttr.intuition]: 6,\n    [CharacterAttr.charisma]: 6,\n    [CharacterAttr.edge]: 7,\n    [CharacterAttr.magic]: 6,\n    [CharacterAttr.resonance]: 6,\n    [CharacterAttr.essence]: 6,\n  },\n  Elf: {\n    [CharacterAttr.body]: 6,\n    [CharacterAttr.agility]: 7,\n    [CharacterAttr.reaction]: 6,\n    [CharacterAttr.strength]: 6,\n    [CharacterAttr.willpower]: 6,\n    [CharacterAttr.logic]: 6,\n    [CharacterAttr.intuition]: 6,\n    [CharacterAttr.charisma]: 8,\n    [CharacterAttr.edge]: 6,\n    [CharacterAttr.magic]: 6,\n    [CharacterAttr.resonance]: 6,\n    [CharacterAttr.essence]: 6,\n  },\n  Human: {\n    [CharacterAttr.body]: 6,\n    [CharacterAttr.agility]: 6,\n    [CharacterAttr.reaction]: 6,\n    [CharacterAttr.strength]: 6,\n    [CharacterAttr.willpower]: 6,\n    [CharacterAttr.logic]: 6,\n    [CharacterAttr.intuition]: 6,\n    [CharacterAttr.charisma]: 6,\n    [CharacterAttr.edge]: 7,\n    [CharacterAttr.magic]: 6,\n    [CharacterAttr.resonance]: 6,\n    [CharacterAttr.essence]: 6,\n  },\n  Ork: {\n    [CharacterAttr.body]: 8,\n    [CharacterAttr.agility]: 1,\n    [CharacterAttr.reaction]: 1,\n    [CharacterAttr.strength]: 8,\n    [CharacterAttr.willpower]: 1,\n    [CharacterAttr.logic]: 1,\n    [CharacterAttr.intuition]: 1,\n    [CharacterAttr.charisma]: 5,\n    [CharacterAttr.edge]: 1,\n    [CharacterAttr.magic]: 6,\n    [CharacterAttr.resonance]: 6,\n    [CharacterAttr.essence]: 6,\n  },\n  Troll: {\n    [CharacterAttr.body]: 9,\n    [CharacterAttr.agility]: 5,\n    [CharacterAttr.reaction]: 1,\n    [CharacterAttr.strength]: 9,\n    [CharacterAttr.willpower]: 1,\n    [CharacterAttr.logic]: 1,\n    [CharacterAttr.intuition]: 1,\n    [CharacterAttr.charisma]: 5,\n    [CharacterAttr.edge]: 1,\n    [CharacterAttr.magic]: 6,\n    [CharacterAttr.resonance]: 6,\n    [CharacterAttr.essence]: 6,\n  },\n}\n","import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material'\nimport { FC, useState } from 'react'\n\nimport { formatAttr } from '../../../System/Attribute'\nimport { Incrementor } from '../../../UI/Incrementor'\nimport { AwakenedType } from '../../AwakenedType'\nimport { CharacterAttr } from '../../CharacterAttr'\nimport { CharAttributes } from '../../CharacterData'\nimport { Metatype } from '../../Metatypes'\nimport { metatypeMaximums } from './metatypeMaximums'\n\nconst defaultAttributes: CharAttributes = {\n  [CharacterAttr.body]: 0,\n  [CharacterAttr.agility]: 0,\n  [CharacterAttr.reaction]: 0,\n  [CharacterAttr.strength]: 0,\n  [CharacterAttr.willpower]: 0,\n  [CharacterAttr.logic]: 0,\n  [CharacterAttr.intuition]: 0,\n  [CharacterAttr.charisma]: 0,\n  [CharacterAttr.edge]: 0,\n  [CharacterAttr.magic]: 0,\n  [CharacterAttr.resonance]: 0,\n  [CharacterAttr.essence]: 0,\n}\n\ninterface AttributesTableProps {\n  metatype: Metatype\n  awakened: AwakenedType\n  attributePoints: number\n  adjustmentPoints: number\n  magic: number\n\n  onChange (attributes: CharAttributes): void\n}\n\nexport const AttributesTable: FC<AttributesTableProps> = ({\n  metatype,\n  awakened,\n  attributePoints,\n  adjustmentPoints,\n  magic,\n  onChange,\n}) => {\n  const attributeMaximums = metatypeMaximums[metatype]\n  const [adjPointsSpent, setAdjPointsSpent] = useState<CharAttributes>(defaultAttributes)\n  const [pointsSpent, setPointsSpent] = useState<CharAttributes>(defaultAttributes)\n  const [karmaPoints, setKarmaPoints] = useState<CharAttributes>(defaultAttributes)\n\n  const totalAdjPointsSpent = (Object.values(adjPointsSpent) as number[])\n    .reduce((sum: number, points: number) => sum + points)\n\n  const totalPointsSpent = (Object.values(pointsSpent) as number[])\n    .reduce((sum: number, points: number) => sum + points)\n\n  const base: CharAttributes = {\n    [CharacterAttr.body]: 1,\n    [CharacterAttr.agility]: 1,\n    [CharacterAttr.reaction]: 1,\n    [CharacterAttr.strength]: 1,\n    [CharacterAttr.willpower]: 1,\n    [CharacterAttr.logic]: 1,\n    [CharacterAttr.intuition]: 1,\n    [CharacterAttr.charisma]: 1,\n    [CharacterAttr.edge]: 1,\n    [CharacterAttr.magic]: 0,\n    [CharacterAttr.resonance]: 0,\n    [CharacterAttr.essence]: 0,\n  }\n\n  switch (awakened) {\n    case AwakenedType.Technomancer:\n      base[CharacterAttr.resonance] = magic\n      break\n    case AwakenedType.Aspected:\n      base[CharacterAttr.magic] = magic + 1\n      break\n    case AwakenedType.Mundane:\n      break\n    default:\n      base[CharacterAttr.magic] = magic\n  }\n\n  const totalPreKarma = mergePointLists([base, pointsSpent, adjPointsSpent])\n  const totalKarmaCost = Object.entries(totalPreKarma)\n    .map(([attr, rank]): number => {\n      if (!rank) return 0\n\n      let cost = 0\n      let points = karmaPoints[attr as CharacterAttr] || 0\n\n      while (points >= 1) {\n        cost += (rank + 1) * 5\n        rank += 1\n        points -= 1\n      }\n\n      return cost\n    })\n    .reduce((sum, cost) => sum + cost)\n\n  const total = mergePointLists([totalPreKarma, karmaPoints])\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Attribute</TableCell>\n            <TableCell>Base</TableCell>\n            <TableCell>Adjustment ({totalAdjPointsSpent} / {adjustmentPoints})</TableCell>\n            <TableCell>Points ({totalPointsSpent} / {attributePoints})</TableCell>\n            <TableCell>Karma ({totalKarmaCost} Karma)</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(Object.keys(base) as CharacterAttr[]).map(attribute => (\n            <TableRow key={attribute}>\n              <TableCell>\n                {formatAttr(attribute)}\n              </TableCell>\n              <TableCell>\n                {base[attribute]}\n              </TableCell>\n              <TableCell>\n                {((typeof attributeMaximums[attribute] === 'number' && attributeMaximums[attribute] as number >= 7)\n                  || [CharacterAttr.edge, CharacterAttr.magic, CharacterAttr.resonance].includes(attribute)) ? (\n                    <Incrementor\n                      min={0}\n                      value={adjPointsSpent[attribute] as number}\n                      onChange={value => setAdjPointsSpent({ ...adjPointsSpent, [attribute]: value })}\n                    />\n                  ) : (\n                    '-'\n                  )}\n              </TableCell>\n              <TableCell>\n                <Incrementor\n                  min={0}\n                  value={pointsSpent[attribute] as number}\n                  onChange={value => setPointsSpent({ ...pointsSpent, [attribute]: value })}\n                />\n              </TableCell>\n              <TableCell>\n                <Incrementor\n                  min={0}\n                  value={karmaPoints[attribute] as number}\n                  onChange={value => setKarmaPoints({ ...karmaPoints, [attribute]: value })}\n                />\n              </TableCell>\n              <TableCell>\n                {total[attribute]} / {attributeMaximums[attribute]}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nfunction mergePointLists (lists: CharAttributes[]): CharAttributes {\n  return lists.reduce((total, points) => {\n    for (const attribute of Object.values(CharacterAttr) as CharacterAttr[]) {\n      total = { ...total, [attribute]: (total[attribute] as number) + (points[attribute] as number) }\n    }\n\n    return total\n  })\n}\n","import { MenuItem, Stack, TextField } from '@mui/material'\nimport { FC } from 'react'\n\nimport { AwakenedType } from '../AwakenedType'\nimport { BioData } from '../CharacterData'\nimport { Metatype } from '../Metatypes'\n\ninterface BioSectionProps {\n  bio: BioData\n  metatypes: string[]\n  magicPriority: number\n\n  onChange (bio: BioData): void\n}\n\nexport const BioSection: FC<BioSectionProps> = ({\n  bio,\n  metatypes,\n  magicPriority,\n  onChange,\n}) => {\n  const showMetaTypeWarning = bio.metatype\n    && metatypes.length >= 1\n    && !metatypes.includes(bio.metatype)\n\n  console.log(bio.awakened, magicPriority)\n  const showAwakenedWarning =\n    (bio.awakened === AwakenedType.Mundane && magicPriority >= 1)\n    || (bio.awakened !== AwakenedType.Mundane && magicPriority === 0)\n\n  return (\n    <Stack gap={1}>\n      <Stack direction=\"row\" gap={1} sx={{ flexWrap: 'wrap' }}>\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Alias\"\n          value={bio.alias}\n          onChange={event => onChange({ ...bio, alias: event.target.value })}\n        />\n\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Name\"\n          value={bio.name}\n          onChange={event => onChange({ ...bio, name: event.target.value })}\n        />\n\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Metatype\"\n          select\n          value={bio.metatype}\n          onChange={event => onChange({ ...bio, metatype: event.target.value as Metatype })}\n          focused={showMetaTypeWarning}\n          color={showMetaTypeWarning ? 'warning' : undefined}\n          helperText={showMetaTypeWarning ? 'Metatype unavailable at current priority' : undefined}\n        >\n          {Object.values(Metatype).map(metatype => (\n            <MenuItem key={metatype} value={metatype}>{metatype}</MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Role\"\n          value={bio.role}\n          onChange={event => onChange({ ...bio, role: event.target.value })}\n        />\n\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Awakened\"\n          select\n          value={bio.awakened}\n          onChange={event => onChange({ ...bio, awakened: event.target.value as AwakenedType })}\n          focused={showAwakenedWarning}\n          color={showAwakenedWarning ? 'warning' : undefined}\n          helperText={showAwakenedWarning ? 'Priority mismatch' : undefined}\n        >\n          {Object.values(AwakenedType).map(awakened => (\n            <MenuItem key={awakened} value={awakened}>{awakened}</MenuItem>\n          ))}\n        </TextField>\n      </Stack>\n\n      <Stack direction=\"row\" gap={1} sx={{ flexWrap: 'wrap' }}>\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Ethnicity\"\n          value={bio.ethnicity}\n          onChange={event => onChange({ ...bio, ethnicity: event.target.value })}\n        />\n\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Age\"\n          value={bio.age}\n          onChange={event => onChange({ ...bio, age: event.target.value })}\n        />\n\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Gender\"\n          value={bio.gender}\n          onChange={event => onChange({ ...bio, gender: event.target.value })}\n        />\n\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Height\"\n          value={bio.height}\n          onChange={event => onChange({ ...bio, height: event.target.value })}\n        />\n\n        <TextField\n          sx={{ flexGrow: 1 }}\n          variant=\"standard\"\n          label=\"Weight\"\n          value={bio.weight}\n          onChange={event => onChange({ ...bio, weight: event.target.value })}\n        />\n      </Stack>\n    </Stack>\n  )\n}\n","import { Metatype } from '../../Metatypes'\n\nexport enum PriorityStat {\n  metatype = 'metatype',\n  attributes = 'attributes',\n  skills = 'skills',\n  nuyen = 'nuyen',\n  magic = 'magic',\n}\n\nexport interface PriorityValues {\n  metatypes: string[]\n  adjustmentPoints: number\n  attributePoints: number\n  skillPoints: number\n  nuyen: number\n  magic: number // 0 = mundane, aspected is +1\n}\n\nexport const priorityValues: Record<string, PriorityValues> = {\n  'A': {\n    metatypes: [\n      Metatype.Dwarf,\n      Metatype.Ork,\n      Metatype.Troll,\n    ],\n    adjustmentPoints: 13,\n    attributePoints: 24,\n    skillPoints: 32,\n    magic: 4,\n    nuyen: 450_000,\n  },\n  'B': {\n    metatypes: [\n      Metatype.Dwarf,\n      Metatype.Elf,\n      Metatype.Ork,\n      Metatype.Troll,\n    ],\n    adjustmentPoints: 11,\n    attributePoints: 16,\n    skillPoints: 24,\n    magic: 3,\n    nuyen: 275_000,\n  },\n  'C': {\n    metatypes: [\n      Metatype.Dwarf,\n      Metatype.Elf,\n      Metatype.Human,\n      Metatype.Ork,\n      Metatype.Troll,\n    ],\n    adjustmentPoints: 9,\n    attributePoints: 12,\n    skillPoints: 20,\n    magic: 2,\n    nuyen: 150_000,\n  },\n  'D': {\n    metatypes: [\n      Metatype.Dwarf,\n      Metatype.Elf,\n      Metatype.Human,\n      Metatype.Ork,\n      Metatype.Troll,\n    ],\n    adjustmentPoints: 4,\n    attributePoints: 8,\n    skillPoints: 16,\n    magic: 1,\n    nuyen: 50_000,\n  },\n  'E': {\n    metatypes: [\n      Metatype.Dwarf,\n      Metatype.Elf,\n      Metatype.Human,\n      Metatype.Ork,\n      Metatype.Troll,\n    ],\n    adjustmentPoints: 1,\n    attributePoints: 2,\n    skillPoints: 10,\n    magic: 0,\n    nuyen: 8_000,\n  },\n}\n","import { parseISO } from 'date-fns'\n\nimport { useCharacterData } from '../Character/CharacterProvider'\n\nconst nuyenFormatter = new Intl.NumberFormat('en')\nexport const formatNuyen = (cost: number): string => {\n  return nuyenFormatter.format(cost) + ' ¥'\n}\n\nexport const useNuyenBalance = (): number => {\n  const character = useCharacterData()\n  if (!character) return 0\n\n  return character.nuyen\n    .sort((a, b) => parseISO(a.date).getTime() - parseISO(b.date).getTime())\n    .reduce((sum, entry) => sum + entry.value, 0)\n}\n","import { TableCell, TableRow } from '@mui/material'\nimport { FC } from 'react'\n\nimport { formatNuyen } from '../../../System/Nuyen'\nimport { AwakenedType } from '../../AwakenedType'\nimport { Metatype } from '../../Metatypes'\nimport { PriorityStat, PriorityValues } from './Priorities'\n\ninterface PriorityRowProps {\n  level: string\n  values: PriorityValues\n  selectedType?: PriorityStat\n  metatype: Metatype\n  awakened: AwakenedType\n\n  onSelect (level: string, type: PriorityStat): void\n}\n\nexport const PriorityRow: FC<PriorityRowProps> = ({\n  level,\n  values,\n  selectedType,\n  metatype,\n  awakened,\n  onSelect,\n}) => {\n  return (\n    <TableRow\n      sx={{\n        '& .MuiTableCell-root:hover, & .MuiTableCell-body.selected': {\n          backgroundColor: 'primary.dark',\n        },\n      }}\n    >\n      <TableCell>{level}</TableCell>\n      <PriorityCell\n        onClick={() => onSelect(level, PriorityStat.metatype)}\n        selected={selectedType === PriorityStat.metatype}\n      >\n        {values.metatypes.includes(metatype) ? (\n          <>{metatype} ({values.adjustmentPoints})</>\n        ) : (\n          '-'\n        )}\n      </PriorityCell>\n      <PriorityCell\n        onClick={() => onSelect(level, PriorityStat.attributes)}\n        selected={selectedType === PriorityStat.attributes}\n      >\n        {values.attributePoints}\n      </PriorityCell>\n      <PriorityCell\n        onClick={() => onSelect(level, PriorityStat.skills)}\n        selected={selectedType === PriorityStat.skills}\n      >\n        {values.skillPoints}\n      </PriorityCell>\n      <PriorityCell\n        onClick={() => onSelect(level, PriorityStat.magic)}\n        selected={selectedType === PriorityStat.magic}\n      >\n        {values.magic === 0 ? (\n          'Mundane'\n        ) : (\n          <>\n            {awakened === AwakenedType.Mundane && '-'}\n            {awakened === AwakenedType.Full && values.magic + ' Magic'}\n            {awakened === AwakenedType.Aspected && (values.magic + 1) + ' Magic'}\n            {awakened === AwakenedType.Mystic && values.magic + ' Magic'}\n            {awakened === AwakenedType.Adept && values.magic + ' Magic'}\n            {awakened === AwakenedType.Technomancer && values.magic + ' Resonance'}\n          </>\n        )}\n      </PriorityCell>\n      <PriorityCell\n        onClick={() => onSelect(level, PriorityStat.nuyen)}\n        selected={selectedType === PriorityStat.nuyen}\n      >\n        {formatNuyen(values.nuyen)}\n      </PriorityCell>\n    </TableRow>\n  )\n}\n\ninterface PriorityCellProps {\n  selected?: boolean\n\n  onClick (): void\n}\n\nexport const PriorityCell: FC<PriorityCellProps> = ({\n  selected,\n  onClick,\n  children,\n}) => {\n  return (\n    <TableCell onClick={onClick} className={selected ? 'selected' : ''}>{children}\n    </TableCell>\n  )\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material'\nimport { FC, useState } from 'react'\n\nimport { AwakenedType } from '../../AwakenedType'\nimport { Metatype } from '../../Metatypes'\nimport { PriorityStat, PriorityValues, priorityValues } from './Priorities'\nimport { PriorityRow } from './PriorityRow'\n\nexport type SelectedPriorities = Record<string, PriorityStat>\n\ninterface PrioritiesTableProps {\n  metatype: Metatype\n  awakened: AwakenedType\n\n  onChange (priorities: PriorityValues): void\n}\n\nexport const PrioritiesTable: FC<PrioritiesTableProps> = ({\n  metatype,\n  awakened,\n  onChange,\n}) => {\n  const [selectedPriorities, setSelectedPriorities] = useState<SelectedPriorities>({})\n\n  const onPriorityChange = (level: string, stat: PriorityStat) => {\n    const priorities = { ...selectedPriorities }\n\n    Object.entries(priorities)\n      .filter(priority => priority[1] === stat)\n      .map(priority => priority[0])\n      .forEach(oldLevel => priorities[oldLevel] = priorities[level])\n\n    priorities[level] = stat\n\n    setSelectedPriorities(priorities)\n    onChange(toPriorityValues(priorities))\n  }\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell variant=\"head\">Priority</TableCell>\n          <TableCell variant=\"head\">Metatype</TableCell>\n          <TableCell variant=\"head\">Attributes</TableCell>\n          <TableCell variant=\"head\">Skills</TableCell>\n          <TableCell variant=\"head\">Magic or Resonance</TableCell>\n          <TableCell variant=\"head\">Resources</TableCell>\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {Object.entries(priorityValues).map(([level, values]) => (\n          <PriorityRow\n            key={level}\n            level={level}\n            values={values}\n            selectedType={selectedPriorities[level]}\n            onSelect={onPriorityChange}\n            metatype={metatype}\n            awakened={awakened}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nexport function toPriorityValues (selectedPriorities: SelectedPriorities): PriorityValues {\n  const values: PriorityValues = {\n    metatypes: [],\n    adjustmentPoints: 0,\n    attributePoints: 0,\n    skillPoints: 0,\n    magic: 0,\n    nuyen: 0,\n  }\n\n  for (const [level, stat] of Object.entries(selectedPriorities)) {\n    const levelValues = priorityValues[level]\n\n    switch (stat) {\n      case PriorityStat.metatype:\n        values.metatypes = levelValues.metatypes\n        values.adjustmentPoints = levelValues.adjustmentPoints\n        break\n      case PriorityStat.attributes:\n        values.attributePoints = levelValues.attributePoints\n        break\n      case PriorityStat.skills:\n        values.skillPoints = levelValues.skillPoints\n        break\n      case PriorityStat.magic:\n        values.magic = levelValues.magic\n        break\n      case PriorityStat.nuyen:\n        values.nuyen = levelValues.nuyen\n        break\n    }\n  }\n\n  return values\n}\n","import { Paper, Stack, Typography } from '@mui/material'\nimport { FC, useState } from 'react'\n\nimport { RootLayout } from '../../Pages/RootLayout'\nimport { CharacterNavDrawer } from '../../UI/NavDrawer/CharacterNavDrawer'\nimport { AwakenedType } from '../AwakenedType'\nimport { CharacterAttr } from '../CharacterAttr'\nimport { CharacterData } from '../CharacterData'\nimport { Metatype } from '../Metatypes'\nimport { AttributesTable } from './Attributes/AttributesTable'\nimport { BioSection } from './BioSection'\nimport { PriorityValues } from './Priorities/Priorities'\nimport { PrioritiesTable } from './Priorities/PrioritiesTable'\n\nconst defaultCharacter: CharacterData = {\n  dataVersion: 3,\n\n  bio: {\n    name: '',\n    metatype: Metatype.Human,\n    awakened: AwakenedType.Mundane,\n    role: '',\n    alias: '',\n    ethnicity: '',\n    age: '',\n    gender: '',\n    height: '',\n    weight: '',\n  },\n\n  karma: [],\n  nuyen: [],\n\n  attributes: {\n    [CharacterAttr.body]: 0,\n    [CharacterAttr.agility]: 0,\n    [CharacterAttr.reaction]: 0,\n    [CharacterAttr.strength]: 0,\n    [CharacterAttr.willpower]: 0,\n    [CharacterAttr.logic]: 0,\n    [CharacterAttr.intuition]: 0,\n    [CharacterAttr.charisma]: 0,\n    [CharacterAttr.edge]: 0,\n    [CharacterAttr.magic]: 0,\n    [CharacterAttr.resonance]: 0,\n    [CharacterAttr.essence]: 0,\n  },\n\n  heat: '',\n  reputation: '',\n  lifestyle: { grade: '', prepaid: 0, upkeep: 0 },\n\n  qualities: [],\n  skills: [],\n  contacts: [],\n\n  gear: [],\n}\n\nexport const BuilderPage: FC = () => {\n  const [priorities, setPriorities] = useState<PriorityValues>({\n    adjustmentPoints: 0,\n    attributePoints: 0,\n    magic: 0,\n    metatypes: [],\n    nuyen: 0,\n    skillPoints: 0,\n  })\n  const [characterData, setCharacterData] = useState<CharacterData>(defaultCharacter)\n\n  return (\n    <RootLayout NavDrawer={CharacterNavDrawer}>\n      <Stack gap={1}>\n        <Paper variant=\"outlined\" sx={{ padding: 1 }}>\n          <Typography variant=\"h3\">Bio</Typography>\n          <BioSection\n            bio={characterData.bio}\n            onChange={bio => setCharacterData({ ...characterData, bio })}\n            metatypes={priorities.metatypes}\n            magicPriority={priorities.magic}\n          />\n        </Paper>\n\n        <Paper variant=\"outlined\" sx={{ padding: 1 }}>\n          <Typography variant=\"h3\">Priorities</Typography>\n          <PrioritiesTable\n            metatype={characterData.bio.metatype}\n            awakened={characterData.bio.awakened}\n            onChange={setPriorities}\n          />\n        </Paper>\n\n        <Paper variant=\"outlined\" sx={{ padding: 1 }}>\n          <Typography variant=\"h3\">Attributes</Typography>\n          <AttributesTable\n            metatype={characterData.bio.metatype}\n            awakened={characterData.bio.awakened}\n            attributePoints={priorities.attributePoints}\n            adjustmentPoints={priorities.adjustmentPoints}\n            magic={priorities.magic}\n            onChange={attributes => setCharacterData({ ...characterData, attributes })}\n          />\n        </Paper>\n      </Stack>\n    </RootLayout>\n  )\n}\n","import * as uuid from 'uuid'\n\nexport type RecordId = string | null;\nexport type IsoDateString = string;\n\nexport function nextRecordId (): string {\n  return uuid.v4()\n}\n\nexport interface Model {\n  id: RecordId\n  createdAt: IsoDateString\n  updatedAt: IsoDateString\n}\n","import { Migration } from './index'\n\nexport const InitialMigration: Migration = {\n  version: 1,\n  run: (character) => character,\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum LicenseAttr {\n  rating = 'license.rating',\n}\n\nregisterAttrNames({\n  [LicenseAttr.rating]: 'Rating',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum SinAttr {\n  rating = 'sin.rating',\n}\n\nregisterAttrNames({\n  [SinAttr.rating]: 'Rating',\n})\n","import { AttrValue, registerAttrNames } from '../System/Attribute'\nimport { BaseGearData, GearType } from './GearData'\n\nexport interface OtherGearData extends BaseGearData {\n  gearType: GearType.other\n\n  attributes?: {\n    [type: string]: AttrValue\n  }\n}\n\nexport enum OtherGearAttr {\n  capacity = 'other.capacity',\n  capacityCost = 'other.capacityCost',\n  rating = 'other.rating',\n}\n\nregisterAttrNames({\n  [OtherGearAttr.capacity]: 'Capacity',\n  [OtherGearAttr.capacityCost]: 'Capacity Cost',\n  [OtherGearAttr.rating]: 'Rating',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum RccAttr {\n  deviceRating = 'rcc.deviceRating',\n  dataProcessing = 'rcc.dataProcessing',\n  firewall = 'rcc.firewall'\n}\n\nregisterAttrNames({\n  [RccAttr.deviceRating]: 'Device Rating',\n  [RccAttr.dataProcessing]: 'Data Processing',\n  [RccAttr.firewall]: 'Firewall',\n})\n","import { registerAttrNames } from '../../../System/Attribute'\n\nexport enum AutosoftAttr {\n  rating = 'autosoft.rating',\n  attr = 'autosoft.attr',\n  skill = 'autosoft.skill',\n  weapon = 'autosoft.weapon',\n}\n\nregisterAttrNames({\n  [AutosoftAttr.rating]: 'Rating',\n  [AutosoftAttr.attr]: 'Attr',\n  [AutosoftAttr.skill]: 'Skill',\n  [AutosoftAttr.weapon]: 'Weapon',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum VehicleAttr {\n  handling = 'vehicle.handling',\n  accel = 'vehicle.accel',\n  speedInterval = 'vehicle.speedInterval',\n  topSpeed = 'vehicle.topSpeed',\n  body = 'vehicle.body',\n  armor = 'vehicle.armor',\n  pilot = 'vehicle.pilot',\n  sensor = 'vehicle.sensor',\n  seat = 'vehicle.seat',\n}\n\nregisterAttrNames({\n  [VehicleAttr.handling]: 'Handling',\n  [VehicleAttr.accel]: 'Accel',\n  [VehicleAttr.speedInterval]: 'Speed Interval',\n  [VehicleAttr.topSpeed]: 'Top Speed',\n  [VehicleAttr.body]: 'Body',\n  [VehicleAttr.armor]: 'Armor',\n  [VehicleAttr.pilot]: 'Pilot',\n  [VehicleAttr.sensor]: 'Sensor',\n  [VehicleAttr.seat]: 'Seat',\n})\n","import { BaseGearData, GearType } from '../GearData'\n\nexport enum ModType {\n  other = 'vehicleMod.other',\n  riggerInterface = 'vehicleMod.riggerInterface',\n  stdWeaponMount = 'vehicleMod.stdWeaponMount',\n  heavyWeaponMount = 'vehicleMod.heavyWeaponMount',\n  manualControl = 'vehicleMod.manualControl',\n}\n\nexport interface VehicleModData extends BaseGearData {\n  gearType: GearType.vehicleMod\n  modType?: ModType\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum WeaponAttr {\n  type = 'weapon.type',\n  dv = 'weapon.dv',\n  attackRatings = 'weapon.attackRatings',\n  modes = 'weapon.modes',\n  ammo = 'weapon.ammo',\n  maxRange = 'weapon.maxRange',\n}\n\nregisterAttrNames({\n  [WeaponAttr.type]: 'Type',\n  [WeaponAttr.dv]: 'DV',\n  [WeaponAttr.attackRatings]: 'Atk. Ratings',\n  [WeaponAttr.modes]: 'Modes',\n  [WeaponAttr.ammo]: 'Ammo',\n  [WeaponAttr.maxRange]: 'Max Range',\n})\n","import { BaseGearData, GearType } from '../GearData'\n\nexport enum WeaponModAttr {\n\n}\n\nexport interface WeaponModData extends BaseGearData {\n  gearType: GearType.weaponMod\n  slot: WeaponModSlot | null\n  removable?: boolean\n}\n\nexport enum WeaponModSlot {\n  top = 'Top',\n  barrel = 'Barrel',\n  under = 'Under',\n  topOrUnder = 'Top or Under'\n}\n","export type SkillNames = Record<string, string>\n\nexport enum ActiveSkillId {\n  athletics = 'athletics',\n  biotech = 'biotech',\n  closeCombat = 'closeCombat',\n  cracking = 'cracking',\n  electronics = 'electronics',\n  engineering = 'engineering',\n  firearms = 'firearms',\n  perception = 'perception',\n  piloting = 'piloting',\n  stealth = 'stealth',\n}\n\nlet skillNames: SkillNames = {\n  [ActiveSkillId.athletics]: 'Athletics',\n  [ActiveSkillId.biotech]: 'Biotech',\n  [ActiveSkillId.closeCombat]: 'Close Combat',\n  [ActiveSkillId.cracking]: 'Cracking',\n  [ActiveSkillId.electronics]: 'Electronics',\n  [ActiveSkillId.engineering]: 'Engineering',\n  [ActiveSkillId.firearms]: 'Firearms',\n  [ActiveSkillId.perception]: 'Perception',\n  [ActiveSkillId.piloting]: 'Piloting',\n  [ActiveSkillId.stealth]: 'Stealth',\n}\n\nexport const registerSkillNames = (names: SkillNames): void => {\n  skillNames = { ...skillNames, ...names }\n}\n\nexport const formatSkill = (skillId: string): string => {\n  return skillNames[skillId] || skillId\n}\n\nexport enum FirearmSpecialties {\n  trasers = 'Tasers',\n  holdOuts = 'Hold-Outs',\n  lightPistols = 'Light Pistols',\n  machinePistols = 'Machine Pistols',\n  heavyPistols = 'Heavy Pistols',\n  submachineGuns = 'Submachine Guns',\n  shotguns = 'Shotguns',\n  rifles = 'Rifles',\n  machineGuns = 'Machine Guns',\n  assaultCannon = 'Assault Cannon',\n}\n","import { RecordId } from '../../Api/Model'\nimport { Character } from '../Character'\nimport { InitialMigration } from './1-Inital'\n\nexport interface Migration {\n  version: number\n\n  run (data: SavedCharacter): SavedCharacter\n}\n\nexport interface SavedCharacter {\n  name: string\n  id: RecordId\n\n  data: {\n    dataVersion: number\n    [key: string]: unknown\n  }\n}\n\nexport const migrateCharacter = (character: Character | SavedCharacter): Character => {\n  for (const migration of migrations) {\n    if (character.data.dataVersion >= migration.version) continue\n    character = migration.run(character as SavedCharacter)\n    character.data.dataVersion = migration.version\n  }\n\n  return character as Character\n}\n\nconst migrations: Migration[] = [\n  InitialMigration,\n].sort((a, b) => a.version - b.version)\n","import { nextRecordId } from '../Api/Model'\nimport { AwakenedType } from '../Character/AwakenedType'\nimport { Character } from '../Character/Character'\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { Metatype } from '../Character/Metatypes'\nimport { AugmentAttr } from '../Gear/Augments/AugmentAttr'\nimport { AugmentData, AugmentGrade, AugmentSlot, AugmentType } from '../Gear/Augments/AugmentData'\nimport { EffectType } from '../Gear/Effect'\nimport { GearData, GearType } from '../Gear/GearData'\nimport { LicenseAttr } from '../Gear/License/LicenseAttr'\nimport { LicenseData } from '../Gear/License/LicenseData'\nimport { SinAttr } from '../Gear/License/SinAttr'\nimport { SinData } from '../Gear/License/SinData'\nimport { OtherGearAttr, OtherGearData } from '../Gear/OtherGearData'\nimport { RccAttr } from '../Gear/Rcc/RccAttr'\nimport { RccData } from '../Gear/Rcc/RccData'\nimport { AutosoftAttr } from '../Gear/Software/Autosoft/AutosoftAttr'\nimport { AutosoftData } from '../Gear/Software/Autosoft/AutosoftData'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { VehicleData } from '../Gear/Vehicles/VehicleData'\nimport { ModType, VehicleModData } from '../Gear/Vehicles/VehicleModData'\nimport { WeaponAttr } from '../Gear/Weapons/WeaponAttr'\nimport { WeaponData } from '../Gear/Weapons/WeaponData'\nimport { WeaponModData, WeaponModSlot } from '../Gear/Weapons/WeaponModData'\nimport { ActiveSkillId, FirearmSpecialties } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { SkillType } from '../System/Skill/SkillData'\n\nexport const Artemis: Character = {\n  name: 'Artemis',\n  id: 'aebc2a1a-d12e-487e-aa5b-1f2daa18817a',\n  userId: 'affbd8b8-8c41-4e82-86b6-85d184a71318',\n  updatedAt: new Date().toISOString(),\n  createdAt: new Date().toISOString(),\n  data: {\n    dataVersion: 3,\n\n    bio: {\n      name: 'Jessica Nelson',\n      alias: 'Artemis',\n      role: 'rigger',\n      gender: 'female',\n      metatype: Metatype.Elf,\n      awakened: AwakenedType.Mundane,\n    },\n\n    karma: [\n      {\n        id: nextRecordId(),\n        date: '2021-10-03T16:00',\n        value: 3,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-26T16:00',\n        value: 4,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-19T22:00',\n        value: -10,\n        note: 'Body 1 => 2',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-19T16:00',\n        value: 5,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-11',\n        value: 2,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-28',\n        value: 14,\n        note: 'Balance import',\n      },\n    ],\n\n    nuyen: [\n      {\n        id: nextRecordId(),\n        date: '2021-09-26T16:00',\n        value: 10_166,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-26T15:02',\n        value: 300,\n        note: 'Buy forklift rental',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-26T15:01',\n        value: 500,\n        note: 'Buy Semi-truck rental',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-26T15:00',\n        value: 1_000,\n        note: 'Buy Semi-truck driver license',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-19T22:01',\n        value: -16_000,\n        note: 'Buy r4 sensor arrays for crawlers',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-19T22:00',\n        value: -22_500,\n        note: 'Buy Reaction Enhancers',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-19T16:00',\n        value: 25_000,\n        note: 'Session Reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-28T00:04',\n        value: 18_070,\n        note: 'Session Reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-28T00:02',\n        value: -445_665,\n        note: 'Starting Gear',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-28T00:01',\n        value: 450_000,\n        note: 'Character Creation',\n      },\n    ],\n\n    lifestyle: {\n      grade: 'middle',\n      upkeep: 5_000,\n      prepaid: 3,\n    },\n\n    attributes: {\n      [CharacterAttr.body]: 2,\n      [CharacterAttr.agility]: 3,\n      [CharacterAttr.reaction]: 3,\n      [CharacterAttr.strength]: 1,\n      [CharacterAttr.willpower]: 2,\n      [CharacterAttr.logic]: 7,\n      [CharacterAttr.intuition]: 5,\n      [CharacterAttr.charisma]: 4,\n      [CharacterAttr.edge]: 4,\n      [CharacterAttr.magic]: 0,\n      [CharacterAttr.resonance]: 0,\n      [CharacterAttr.essence]: 6,\n    },\n\n    contacts: [\n      {\n        name: 'James Serif',\n        connection: 2,\n        loyalty: 2,\n        description: 'Drone Parts Dealer',\n      },\n      {\n        name: 'Frank',\n        connection: 2,\n        loyalty: 2,\n        description: 'Matrix Developer',\n      },\n      {\n        name: 'George Crabtree',\n        connection: 2,\n        loyalty: 2,\n        description: 'Lone Star officer',\n      },\n    ],\n\n    skills: [\n      {\n        type: SkillType.active,\n        skillId: ActiveSkillId.electronics,\n        rank: 3,\n        attr: 'logic',\n      },\n      {\n        type: SkillType.active,\n        skillId: ActiveSkillId.firearms,\n        rank: 3,\n        attr: 'agility',\n      },\n      {\n        type: SkillType.active,\n        skillId: ActiveSkillId.piloting,\n        rank: 6,\n        attr: 'reaction',\n        speciality: 'Ground Craft',\n      },\n      {\n        type: SkillType.active,\n        skillId: ActiveSkillId.engineering,\n        rank: 7,\n        attr: 'logic',\n        altAttr: 'intuition',\n      },\n      {\n        type: SkillType.language,\n        name: 'English',\n        rank: 'native',\n      },\n      {\n        type: SkillType.language,\n        name: 'Elven',\n        rank: 'speciality',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Drone Models',\n      },\n      {\n        type: SkillType.knowledge,\n        name: '80/90s Pop Culture',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Trideo Series',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Security Systems',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Virtual Nightclubs',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Tech Companies',\n      },\n    ],\n\n    gear: [],\n\n    qualities: [\n      {\n        name: 'Exceptional (Logic)',\n        source: { book: 'CRB', page: 2 },\n        cost: 12,\n      },\n      {\n        name: 'Social Stress (Large Groups)',\n        source: { book: 'CRB', page: 2 },\n        bonus: 8,\n      },\n      {\n        name: 'Juryrigger',\n        source: { book: 'CRB', page: 2 },\n        cost: 12,\n      },\n      {\n        name: 'Photographic Memory',\n        source: { book: 'CRB', page: 2 },\n        cost: 12,\n      },\n      {\n        name: 'Analytical Mind',\n        source: { book: 'CRB', page: 2 },\n        gameEffect: 'Bonus edge when making Logic tests',\n        cost: 3,\n      },\n      {\n        name: 'Ambidextrous',\n        source: { book: 'CRB', page: 2 },\n        cost: 4,\n      },\n    ],\n  },\n}\n\nconst usedIds = new Set()\n\nexport function addGear<T extends GearData = OtherGearData> (gear: T, attachedGear: GearData[] = []): T {\n  gear = { ...gear }\n\n  if (gear.id === null) { throw new Error(`Null gear id for ${gear.name}`) }\n  if (usedIds.has(gear.id)) { throw new Error(`Duplicate gear id for ${gear.name}`) }\n\n  Artemis.data.gear.push(gear)\n  attachedGear.forEach(item => item.attachedTo = gear.id)\n  usedIds.add(gear.id)\n\n  return gear\n}\n\nconst smartGunIntMod: WeaponModData = {\n  id: null,\n  source: { book: 'CRB', page: 260 },\n  gearType: GearType.weaponMod,\n  name: 'Smart Gun Int.',\n  type: 'Weapon Mod',\n  cost: 500,\n\n  slot: null,\n  removable: false,\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'You gain a +1 dice pool bonus. Gain a bonus Minor Action on a turn when ' +\n      'you use the Reload Smartgun or Change Device Mode actions to eject a ' +\n      'clip or change fire mode.',\n  },\n}\n\naddGear<AugmentData>({\n  id: '37f9da35-c67f-46fd-9e79-3929db823816',\n  gearType: GearType.augment,\n  name: 'Control Rig',\n  type: 'Headwear Augment',\n  avail: { rarity: 3, license: true },\n  cost: 72_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.essenceCost]: 1.6,\n    [AugmentAttr.slot]: AugmentSlot.headware,\n    [AugmentAttr.rating]: 2,\n  },\n\n  augmentType: AugmentType.controlRig,\n})\n\naddGear<AugmentData>({\n  id: 'd89aafe6-111f-4e60-9fe2-fe5c1c3f94b8',\n  gearType: GearType.augment,\n  name: 'Cerebral Booster',\n  type: 'Cultured Bioware Augment',\n  avail: { rarity: 4 },\n  cost: 47_250,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.essenceCost]: 0.66,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n    [AugmentAttr.rating]: 3,\n  },\n\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.logic, bonus: 3 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: 'de13c340-89b3-4bc9-b6f4-29288cff00bc',\n  gearType: GearType.augment,\n  name: 'Sleep Regulator',\n  type: 'Cultured Bioware Augment',\n  avail: { rarity: 4 },\n  source: { book: 'CRB', page: 293 },\n  cost: 6_000,\n\n  description: (`\n    You need less sleep per day, and the sleep you get is deep and restful (and harder\n    to wake up from). The sleep regulator lets you get by with three hours of sleep\n    each night, and you can stay awake for twice as long as normal without acquiring \n    the Fatigued status. Resting hours for healing purposes are not affected.\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.essenceCost]: 0.11,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n  },\n})\n\naddGear<WeaponData>({\n  id: 'e7f70f35-8d96-43be-8b19-fc9d8718ed95',\n  source: { book: 'CRB', page: 254 },\n  gearType: GearType.weapon,\n  name: 'FN P93 Predator',\n  type: 'Submachine Gun',\n  avail: { rarity: 4, license: true },\n  cost: 925,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '9/12/7/-/-',\n    [WeaponAttr.ammo]: '50(c)',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.submachineGuns,\n}, [\n  addGear<WeaponModData>({\n    id: 'f8d19b04-8767-4693-9774-195ff92ed8df',\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Rigid Stock',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear<WeaponModData>({\n    id: '02fbb521-e039-4c06-9aaf-cead333e3885',\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Laser sight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear<WeaponModData>({\n    id: '21d66c66-4615-49d6-b330-e4c25eea631a',\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Flashlight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear({ ...smartGunIntMod, id: '429f440e-ffc3-459d-b08f-b013af1648dc' }),\n])\n\naddGear<WeaponData>({\n  id: 'ae2baf27-bd6f-43e2-8198-a19e37231b7d',\n  source: { book: 'CRB', page: 252 },\n  gearType: GearType.weapon,\n  name: 'Colt America L36',\n  type: 'Light Pistol',\n  avail: { rarity: 2, license: true },\n  cost: 230,\n\n  attributes: {\n    [WeaponAttr.dv]: '2P',\n    [WeaponAttr.modes]: 'SA',\n    [WeaponAttr.attackRatings]: '8/8/6/-/-',\n    [WeaponAttr.ammo]: '11(c)',\n  },\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'The user can alter ownership with a Minor Action',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.lightPistols,\n}, [\n  addGear({ ...smartGunIntMod, id: '7c94f42b-e770-472f-85d8-992cde7e2606' }),\n])\n\nconst autosofts: AutosoftData[] = [\n  addGear<AutosoftData>({\n    id: 'de5e973c-134d-427e-9a3a-205422341b7b',\n    gearType: GearType.autosoft,\n    name: 'FN-HAR Targeting',\n    type: 'Targeting Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.weapon]: 'FN-HAR',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: 'a0af5540-37c7-44ca-af2a-03cb21efd83a',\n    gearType: GearType.autosoft,\n    name: 'Clearsight',\n    type: 'Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.skill]: 'Perception',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: '3a459c98-5354-4fa1-a230-dfe77b199ffa',\n    gearType: GearType.autosoft,\n    name: 'Evasion',\n    type: 'Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.skill]: 'Evasion',\n      [AutosoftAttr.attr]: 'Pilot',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: '78a5f82e-636f-468a-85e3-5af73304b7c0',\n    gearType: GearType.autosoft,\n    name: 'Maneuvering',\n    type: 'Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.skill]: 'Piloting',\n      [AutosoftAttr.attr]: 'Pilot',\n    },\n  }),\n  addGear<AutosoftData>({\n    id: 'a5b8c866-38cb-40a2-a136-d3feb39ea68d',\n    gearType: GearType.autosoft,\n    name: 'Electronic Warfare',\n    type: 'Autosoft',\n    avail: { rarity: 8 },\n    cost: 4_000,\n\n    attributes: {\n      [AutosoftAttr.rating]: 8,\n      [AutosoftAttr.skill]: 'Cracking',\n      [AutosoftAttr.attr]: 'Sensor',\n    },\n  }),\n]\n\nconst rccHeadwear = addGear<AugmentData>({\n  id: '1f8b016d-a36f-45b6-8099-7527e2986093',\n  gearType: GearType.augment,\n  name: 'RCC Headwear',\n  type: 'Headwear Augment',\n  avail: { rarity: 2, license: true },\n  source: { book: 'DC', page: 145 },\n  cost: 2_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.essenceCost]: 0.33,\n    [AugmentAttr.slot]: AugmentSlot.headware,\n    [AugmentAttr.capacityCost]: 3,\n  },\n})\n\nconst rcc = addGear<RccData>({\n  id: 'bb6e3208-418d-41b8-85c3-447e6328aa5bs',\n  gearType: GearType.rcc,\n  name: 'Proteus Poseidon',\n  type: 'RCC',\n  avail: { rarity: 6, license: true },\n  cost: 68_000,\n\n  attributes: {\n    [RccAttr.deviceRating]: 5,\n    [RccAttr.dataProcessing]: 5,\n    [RccAttr.firewall]: 5,\n  },\n\n  slavedAutosofts: [],\n\n  attachedTo: rccHeadwear.id,\n})\n\nautosofts.forEach(soft => soft.attachedTo = rcc.id)\nrcc.slavedAutosofts = autosofts.map(soft => soft.id)\n\nconst fnHar: WeaponData = {\n  id: null,\n  gearType: GearType.weapon,\n  name: 'FN-HAR',\n  type: 'Rifle',\n  avail: { rarity: 3, license: true },\n  cost: 2_100,\n  attributes: {\n    [WeaponAttr.dv]: '5P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '3/11/10/6/1',\n    [WeaponAttr.ammo]: '35(c)',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.rifles,\n}\n\nconst stdWeaponMount: VehicleModData = {\n  id: null,\n  gearType: GearType.vehicleMod,\n  modType: ModType.stdWeaponMount,\n  name: 'Standard Weapon Mount',\n  type: 'vehicle mod',\n  avail: { rarity: 5, illegal: true },\n  cost: 4_500,\n}\n\nconst riggerInterface: VehicleModData = {\n  id: null,\n  gearType: GearType.vehicleMod,\n  modType: ModType.riggerInterface,\n  name: 'Rigger Interface',\n  type: 'vehicle mod',\n  avail: { rarity: 2, license: true },\n  cost: 1_000,\n}\n\nconst sensorArray: VehicleModData = {\n  id: null,\n  gearType: GearType.vehicleMod,\n  name: 'Sensor Array',\n  type: 'vehicle mod',\n  avail: { rarity: 3 },\n  cost: 4_000,\n\n  attributes: {\n    [OtherGearAttr.rating]: 4,\n  },\n\n  effects: [\n    { type: EffectType.attrOverride, attr: VehicleAttr.sensor, value: 4 },\n  ],\n}\n\naddGear<VehicleData>({\n  id: '4a5eb8d5-004b-4cdd-bce5-e0db64a33639',\n  gearType: GearType.vehicle,\n  name: 'Range Rover Model 2080',\n  type: 'Van',\n  cost: 73_000,\n  avail: { rarity: 2 },\n\n  attributes: {\n    [VehicleAttr.handling]: '4/5',\n    [VehicleAttr.accel]: 12,\n    [VehicleAttr.speedInterval]: 20,\n    [VehicleAttr.topSpeed]: 160,\n    [VehicleAttr.body]: 16,\n    [VehicleAttr.armor]: 10,\n    [VehicleAttr.pilot]: 4,\n    [VehicleAttr.sensor]: 4,\n    [VehicleAttr.seat]: 4,\n  },\n\n  slavedTo: rcc.id,\n  pilotingSpeciality: 'Ground Craft',\n}, [\n  addGear({ ...riggerInterface, id: 'cebc1ac9-e097-44f6-9394-bc342a7f71a3' }),\n])\n\nconst rotoDrone: VehicleData = {\n  id: '55887cc1-89b1-4b6d-8fc5-88560d32d31d',\n  gearType: GearType.vehicle,\n  type: 'Medium Rotor Drone',\n  name: 'MCT-Nissan Roto-drone',\n  cost: 5_000,\n  avail: { rarity: 2 },\n\n  attributes: {\n    [VehicleAttr.handling]: 3,\n    [VehicleAttr.accel]: 20,\n    [VehicleAttr.speedInterval]: 30,\n    [VehicleAttr.topSpeed]: 160,\n    [VehicleAttr.body]: 5,\n    [VehicleAttr.armor]: 6,\n    [VehicleAttr.pilot]: 3,\n    [VehicleAttr.sensor]: 2,\n    [VehicleAttr.seat]: null,\n  },\n\n  slavedTo: rcc.id,\n  pilotingSpeciality: 'Aircraft',\n}\n\naddGear<VehicleData>({\n  ...rotoDrone,\n  id: '55887cc1-89b1-4b6d-8fc5-88560d32d31d',\n  name: 'MCT-Nissan Roto-drone 1',\n}, [\n  addGear({ ...stdWeaponMount, id: 'f2b1186d-6832-4532-95e9-c627037fcf9d' }, [\n    addGear({ ...fnHar, id: '853a03bb-18fd-42c3-9247-df59e1438904' }),\n  ]),\n  addGear({ ...riggerInterface, id: 'ae26eaa6-0e99-41db-b548-383e989865a3' }),\n  // addGear(sensorArray),\n])\n\naddGear<VehicleData>({\n  ...rotoDrone,\n  id: '17fe3632-c927-4def-91eb-7376ea1cdd3f',\n  name: 'MCT-Nissan Roto-drone 2',\n}, [\n  addGear({ ...stdWeaponMount, id: '7a1c1485-0f2f-4434-b216-3379c0b47e83' }, [\n    addGear({ ...fnHar, id: 'c068d8c7-de94-41d6-91c1-45c55fa58a93' }),\n  ]),\n  addGear({ ...riggerInterface, id: '0dfe8000-84db-430b-8cd6-7684b18ac5da' }),\n  // addGear(sensorArray),\n])\n\nconst crawlerDrone: VehicleData = {\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Aztech Crawler',\n  type: 'Small Anthro Drone',\n  cost: 4_500,\n  avail: { rarity: 2 },\n\n  attributes: {\n    [VehicleAttr.handling]: '3/4',\n    [VehicleAttr.accel]: 8,\n    [VehicleAttr.speedInterval]: 10,\n    [VehicleAttr.topSpeed]: 30,\n    [VehicleAttr.body]: 6,\n    [VehicleAttr.armor]: 2,\n    [VehicleAttr.pilot]: 2,\n    [VehicleAttr.sensor]: 2,\n    [VehicleAttr.seat]: null,\n  },\n\n  slavedTo: rcc.id,\n  pilotingSpeciality: 'Ground Craft',\n}\n\naddGear<VehicleData>({\n  ...crawlerDrone,\n  id: '2d42aac6-71a2-4154-a00b-ba9ba681a3af',\n  name: 'Aztech Crawler 1',\n}, [\n  addGear({ ...stdWeaponMount, id: '2a40e609-c2be-4eb4-b289-b3038d626392' }, [\n    addGear({ ...fnHar, id: '20bd77d8-0a82-4d02-885d-8c48046975c3' }),\n  ]),\n  addGear({ ...riggerInterface, id: '428e551d-516e-4450-a9b1-e2b775ea4a20' }),\n  addGear({ ...sensorArray, id: '1ac75091-6d53-43f8-86d5-63c13c233779' }),\n])\n\naddGear<VehicleData>({\n  ...crawlerDrone,\n  id: 'a969b8fa-2e3a-49d3-acb9-e6e2a877a1ae',\n  name: 'Aztech Crawler 2',\n}, [\n  addGear({ ...stdWeaponMount, id: '1a9454ea-f105-45c1-a9d4-3e874b457f83' }, [\n    addGear({ ...fnHar, id: '9513ac1e-3ae3-457f-aa59-da8b64e9947c' }),\n  ]),\n  addGear({ ...riggerInterface, id: '7753605b-6ffb-4295-bc8b-93859021c8a9' }),\n  addGear({ ...sensorArray, id: 'd952c534-d98c-4b24-a3d1-3f367835ec76' }),\n])\n\naddGear<VehicleData>({\n  ...crawlerDrone,\n  id: '573791c8-e686-4411-927a-052452d8dcba',\n  name: 'Aztech Crawler 3',\n}, [\n  addGear({ ...stdWeaponMount, id: 'cec78dcc-7911-44d7-bd12-56af38b95193' }, [\n    addGear({ ...fnHar, id: 'ab2727cd-d3bc-4461-b201-10d739c5e2f5' }),\n  ]),\n  addGear({ ...riggerInterface, id: 'cee46222-8727-40f3-9788-c08dd29369ae' }),\n  addGear({ ...sensorArray, id: '40ef5411-038c-4b97-abfd-a70d8dcd2b3b' }),\n])\n\naddGear<VehicleData>({\n  ...crawlerDrone,\n  id: 'b02313b9-c024-4c5b-a661-9e23fbc6e816',\n  name: 'Aztech Crawler 4',\n}, [\n  addGear({ ...stdWeaponMount, id: '91afef0a-9401-46eb-9c3a-66ac3a55a2fb' }, [\n    addGear({ ...fnHar, id: 'd70a4b40-c220-497b-b6ef-460e48477071' }),\n  ]),\n  addGear({ ...riggerInterface, id: '2801f808-849f-4226-bbb6-6db12fe6ddb9' }),\n  addGear({ ...sensorArray, id: '11805cad-896c-4cba-ba18-e81eeff71dae' }),\n])\n\naddGear<VehicleData>({\n  id: '9159eaaa-f444-4f54-ac01-db6b65464764',\n  gearType: GearType.vehicle,\n  type: 'Small Rotor Drone',\n  name: 'Cyberspace Designs Quadrotor',\n  cost: 5_000,\n  avail: { rarity: 2 },\n\n  attributes: {\n    [VehicleAttr.handling]: 2,\n    [VehicleAttr.accel]: 15,\n    [VehicleAttr.speedInterval]: 20,\n    [VehicleAttr.topSpeed]: 120,\n    [VehicleAttr.body]: 3,\n    [VehicleAttr.armor]: 1,\n    [VehicleAttr.pilot]: 3,\n    [VehicleAttr.sensor]: 2,\n    [VehicleAttr.seat]: null,\n  },\n\n  slavedTo: rcc.id,\n  pilotingSpeciality: 'Aircraft',\n}, [\n  addGear({ ...riggerInterface, id: 'f1118f16-1105-428f-ba17-67d90e00377a' }),\n])\n\naddGear<VehicleData>({\n  id: 'fbbbd8b6-7e5a-46c4-ad0c-5b8c7cadb1f3',\n  gearType: GearType.vehicle,\n  type: 'Micro Rotor Drone',\n  name: 'MCT Gnat',\n  cost: 800,\n  quantity: 8,\n  avail: { rarity: 2 },\n\n  attributes: {\n    [VehicleAttr.handling]: 3,\n    [VehicleAttr.accel]: 4,\n    [VehicleAttr.speedInterval]: 10,\n    [VehicleAttr.topSpeed]: 30,\n    [VehicleAttr.body]: 0,\n    [VehicleAttr.armor]: 0,\n    [VehicleAttr.pilot]: 2,\n    [VehicleAttr.sensor]: 1,\n    [VehicleAttr.seat]: null,\n  },\n\n  slavedTo: rcc.id,\n  pilotingSpeciality: 'Aircraft',\n}, [\n  addGear({ ...riggerInterface, id: 'b4ba0a55-150b-47b4-b391-cc1da213d48a' }),\n])\n\naddGear<AugmentData>({\n  id: '62c928a2-2a1e-4195-83ee-c760b6f93e1b',\n  gearType: GearType.augment,\n  name: 'Cybereyes',\n  type: 'Augment',\n  source: { book: 'CRB', page: 285 },\n  avail: { rarity: 4 },\n  cost: 12_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.alpha,\n    [AugmentAttr.rating]: 3,\n    [AugmentAttr.capacity]: 12,\n    [AugmentAttr.essenceCost]: 0.32,\n    [AugmentAttr.slot]: AugmentSlot.eyeware,\n  },\n}, [\n  addGear<AugmentData>({\n    id: 'a19ea646-4212-49a2-908c-1da5f3ab498f',\n    gearType: GearType.augment,\n    name: 'Smartlink',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 4, license: true },\n    cost: 4_800,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.essenceCost]: 0.16,\n      [AugmentAttr.slot]: AugmentSlot.eyeware,\n      [AugmentAttr.capacityCost]: 3,\n    },\n  }),\n  addGear<AugmentData>({\n    id: '31e7ddd1-dca5-4f99-a67d-2fecadcf2853',\n    gearType: GearType.augment,\n    name: 'Imagelink',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 3 },\n    cost: 960,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.essenceCost]: 0.08,\n      [AugmentAttr.slot]: AugmentSlot.eyeware,\n      [AugmentAttr.capacityCost]: 0,\n    },\n  }),\n  addGear<AugmentData>({\n    id: '1660efc9-98d5-4ed1-b2da-651e7ea578c5',\n    gearType: GearType.augment,\n    name: 'Low-Light Vision',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 3 },\n    cost: 900,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.capacityCost]: 2,\n      [AugmentAttr.essenceCost]: 0.08,\n      [AugmentAttr.slot]: AugmentSlot.eyeware,\n    },\n  }),\n  addGear<AugmentData>({\n    id: '31189433-ba37-4186-a453-6e236d915caa',\n    gearType: GearType.augment,\n    name: 'Vision Enhancement',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 4 },\n    cost: 4_800,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.capacityCost]: 2,\n      [AugmentAttr.essenceCost]: 0.08,\n      [AugmentAttr.slot]: AugmentSlot.eyeware,\n    },\n  }),\n  addGear<AugmentData>({\n    id: '1b6cdf25-9374-4a09-b2a1-76ed1a9be01b',\n    gearType: GearType.augment,\n    name: 'Vision Magnification',\n    type: 'Cybereye Augment',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 4 },\n    cost: 2_400,\n\n    attributes: {\n      [AugmentAttr.grade]: AugmentGrade.alpha,\n      [AugmentAttr.capacityCost]: 2,\n      [AugmentAttr.essenceCost]: 0.08,\n      [AugmentAttr.slot]: AugmentSlot.eyeware,\n    },\n  }),\n])\n\naddGear<AugmentData>({\n  id: '89192a52-adf6-41d1-8978-0f0787185b5a',\n  gearType: GearType.augment,\n  name: 'Commlink',\n  type: 'Headware Augment',\n  source: { book: 'CRB', page: 283 },\n  avail: { rarity: 1 },\n  cost: 1_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.essenceCost]: 0.11,\n    [AugmentAttr.slot]: AugmentSlot.headware,\n  },\n}, [\n  addGear({\n    id: '8c2e404d-5678-4dad-8cdd-dcda26e9d866',\n    gearType: GearType.other,\n    name: 'Hermes Ikon',\n    type: 'Commlink',\n    source: { book: 'CRB', page: 267 },\n    avail: { rarity: 3 },\n    cost: 5_000,\n\n    attributes: {\n      'commlink.deviceRating': 5,\n      'commlink.attributes': '3/0',\n      'commlink.programSlots': 2,\n    },\n  }),\n])\n\naddGear<AugmentData>({\n  id: '3803d92f-1869-41b0-975a-dbdd929af4d7',\n  gearType: GearType.augment,\n  name: 'Reaction Enhancers',\n  type: 'Bodyware Augment',\n  source: { book: 'CRB', page: 287 },\n  avail: { rarity: 3, license: true },\n  cost: 22_500,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n    [AugmentAttr.essenceCost]: 0.99,\n    [AugmentAttr.slot]: AugmentSlot.bodyware,\n  },\n\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.reaction, bonus: 3 },\n  ],\n})\n\naddGear<SinData>({\n  id: '110a3b00-ac94-4698-a60c-7cf34d829bcb',\n  gearType: GearType.sin,\n  name: 'Davina Hasselhoff',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 15_000,\n\n  description: 'General use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 6,\n  },\n})\n\naddGear<SinData>({\n  id: '25a3030a-4850-4f68-914f-95276c893352',\n  gearType: GearType.sin,\n  name: 'Sara McCabe',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 10_000,\n\n  description: 'Runner SIN',\n\n  attributes: {\n    [SinAttr.rating]: 4,\n  },\n}, [\n  addGear<LicenseData>({\n    id: 'eae7b822-7dee-4734-8e7b-1c1ebd7aa46d',\n    gearType: GearType.license,\n    name: 'Driver License (Semi-Truck)',\n    type: 'Fake License',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 5, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      [LicenseAttr.rating]: 5,\n    },\n  }),\n])\n\naddGear<SinData>({\n  id: '50f91ebf-e206-4843-be29-ac1bcb3a45ba',\n  gearType: GearType.sin,\n  name: 'Jane Smith',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 5_000,\n\n  description: 'Burner SIN',\n\n  attributes: {\n    [SinAttr.rating]: 2,\n  },\n})\n\naddGear({\n  id: 'f2b9526c-5db1-4076-81c0-c0bf52280e8a',\n  gearType: GearType.other,\n  name: 'Engineering Shop',\n  type: 'Shop',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4 },\n  cost: 5_000,\n})\n","export enum CharacterPoolTypes {\n  dodge = 'character.dodge',\n  dmgResist = 'character.dmgResist',\n  composure = 'character.composure',\n  judgeIntent = 'character.judgeIntent',\n  memory = 'character.memory',\n  liftCarry = 'character.liftCarry',\n  firstAid = 'character.firstAid',\n}\n","export enum ArmorAttr {\n  defenseBonus = 'armor.defenseBonus',\n  capacity = 'armor.capacity',\n}\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum CommlinkAttr {\n  deviceRating = 'commlink.deviceRating',\n  attributes = 'commlink.attributes',\n  programSlots = 'commlink.programSlots',\n}\n\nregisterAttrNames({\n  [CommlinkAttr.deviceRating]: 'Device Rating',\n  [CommlinkAttr.attributes]: 'Attributes',\n  [CommlinkAttr.programSlots]: 'Program Slots',\n})\n","import { registerAttrNames } from '../../System/Attribute'\n\nexport enum KitAttr {\n  medkitRating = 'medkit.rating',\n}\n\nregisterAttrNames({\n  [KitAttr.medkitRating]: 'Rating',\n})\n","export enum KitType {\n  firstAid = 'kit.firstAid',\n  medKit = 'kit.medKit',\n}\n","import { nextRecordId } from '../Api/Model'\nimport { AwakenedType } from '../Character/AwakenedType'\nimport { Character } from '../Character/Character'\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { CharacterPoolTypes } from '../Character/CharacterPoolTypes'\nimport { Metatype } from '../Character/Metatypes'\nimport { ArmorAttr } from '../Gear/Armor/ArmorAttr'\nimport { ArmorData } from '../Gear/Armor/ArmorData'\nimport { AugmentAttr } from '../Gear/Augments/AugmentAttr'\nimport { AugmentData, AugmentGrade, AugmentSlot } from '../Gear/Augments/AugmentData'\nimport { CommlinkAttr } from '../Gear/Commlink/CommlinkAttr'\nimport { EffectType } from '../Gear/Effect'\nimport { GearData, GearType } from '../Gear/GearData'\nimport { KitAttr } from '../Gear/Kit/KitAttr'\nimport { KitType } from '../Gear/Kit/KitType'\nimport { LicenseAttr } from '../Gear/License/LicenseAttr'\nimport { SinAttr } from '../Gear/License/SinAttr'\nimport { SinData } from '../Gear/License/SinData'\nimport { OtherGearAttr, OtherGearData } from '../Gear/OtherGearData'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { VehicleData } from '../Gear/Vehicles/VehicleData'\nimport { ModType } from '../Gear/Vehicles/VehicleModData'\nimport { WeaponAttr } from '../Gear/Weapons/WeaponAttr'\nimport { WeaponData } from '../Gear/Weapons/WeaponData'\nimport { WeaponModData, WeaponModSlot } from '../Gear/Weapons/WeaponModData'\nimport { ActiveSkillId, FirearmSpecialties } from '../System/Skill/ActiveSkill/ActiveSkillId'\nimport { SkillType } from '../System/Skill/SkillData'\n\nexport const Silicus: Character = {\n  name: 'Silicus',\n  id: 'fc7d8ad1-c25e-4c1b-8c13-0e795a449ef2',\n  userId: 'affbd8b8-8c41-4e82-86b6-85d184a71318',\n  updatedAt: new Date().toISOString(),\n  createdAt: new Date().toISOString(),\n  data: {\n    dataVersion: 3,\n\n    bio: {\n      name: 'Silicus',\n      metatype: Metatype.Elf,\n      awakened: AwakenedType.Mundane,\n      gender: 'male',\n      role: 'Street Samurai',\n    },\n\n    karma: [\n      {\n        id: nextRecordId(),\n        date: '2021-10-03T16:00',\n        value: 3,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-19T16:00',\n        value: 5,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-12',\n        value: 2,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-29T16:05',\n        value: -10,\n        note: 'Buy reaction 1 -> 2',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-29T16:04',\n        value: -25,\n        note: 'Buy charisma 1 -> 3',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-29T16:03',\n        value: -12,\n        note: 'Buy Exceptional (Agility)',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-29T16:02',\n        value: -3,\n        note: 'Buy Analytical Mind',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-29T16:01',\n        value: 10,\n        note: 'Gain Bad Luck',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-29T16:00',\n        value: 50,\n        note: 'Character Creation',\n      },\n    ],\n\n    nuyen: [\n      {\n        id: nextRecordId(),\n        date: '2021-10-03T16:00',\n        value: -30_000,\n        note: 'Orthoskin',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-26T16:00',\n        value: 10_166,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-25T13:45',\n        value: 2 * 100,\n        note: 'Medical Supplies',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-25T13:44',\n        value: 8 * 500,\n        note: 'Trauma Patch',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-09-19T16:00',\n        value: 25_000,\n        note: 'Session reward',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-28T00:03',\n        value: -9_000,\n        note: '3 months lifestyle (middle)',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-28T00:02',\n        value: -439_575,\n        note: 'Char creation Gear',\n      },\n      {\n        id: nextRecordId(),\n        date: '2021-08-28T00:01',\n        value: 450_000,\n        note: 'Char creation',\n      },\n    ],\n\n    lifestyle: {\n      grade: 'middle',\n      upkeep: 5_000,\n      prepaid: 3,\n    },\n\n    attributes: {\n      [CharacterAttr.body]: 4,\n      [CharacterAttr.agility]: 8,\n      [CharacterAttr.reaction]: 2,\n      [CharacterAttr.strength]: 1,\n      [CharacterAttr.willpower]: 1,\n      [CharacterAttr.logic]: 5,\n      [CharacterAttr.intuition]: 4,\n      [CharacterAttr.charisma]: 3,\n      [CharacterAttr.edge]: 4,\n      [CharacterAttr.magic]: 0,\n      [CharacterAttr.resonance]: 0,\n      [CharacterAttr.essence]: 6,\n    },\n\n    contacts: [\n      {\n        name: 'Hunter Morgan',\n        connection: 3,\n        loyalty: 3,\n        description: 'Researcher at Kamino Biotech',\n      },\n      {\n        name: 'Johennes',\n        connection: 3,\n        loyalty: 3,\n        description: 'Fence',\n      },\n      {\n        name: 'Dr. Weber',\n        connection: 3,\n        loyalty: 3,\n        description: 'Ripperdoc',\n      },\n    ],\n\n    skills: [\n      {\n        type: SkillType.active,\n        skillId: ActiveSkillId.biotech,\n        rank: 5,\n        attr: 'logic',\n        altAttr: 'intuition',\n        expertise: 'First Aid',\n      },\n      {\n        type: SkillType.active,\n        skillId: ActiveSkillId.firearms,\n        rank: 6,\n        attr: 'agility',\n        speciality: FirearmSpecialties.submachineGuns,\n      },\n      {\n        type: SkillType.active,\n        skillId: ActiveSkillId.perception,\n        rank: 3,\n        attr: 'intuition',\n        altAttr: 'logic',\n      },\n      {\n        type: SkillType.active,\n        skillId: ActiveSkillId.closeCombat,\n        rank: 5,\n        attr: 'agility',\n      },\n      {\n        type: SkillType.language,\n        name: 'English',\n        rank: 'native',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Law Enforcement Corps',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Security Systems',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Tech Companies',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Weapon Manufacturers',\n      },\n      {\n        type: SkillType.knowledge,\n        name: 'Local Gangs',\n      },\n    ],\n\n    gear: [],\n\n    qualities: [\n      {\n        name: 'Analytical Mind',\n        source: { book: 'CRB', page: 70 },\n        gameEffect: 'Bonus edge when making Logic tests',\n        cost: 3,\n      },\n      {\n        name: 'Exceptional (Agility)',\n        source: { book: 'CRB', page: 71 },\n        gameEffect: 'Increase max of one Physical or Mental attribute by 1',\n        cost: 12,\n      },\n      {\n        name: 'Bad Luck',\n        source: { book: 'CRB', page: 70 },\n        gameEffect: 'Glitch on 2s',\n        bonus: 10,\n      },\n    ],\n  },\n}\n\nfunction addGear<T extends GearData = OtherGearData> (gear: T, attachedGear: GearData[] = []): T {\n  gear = { ...gear, dataVersion: 1, id: nextRecordId() };\n\n  (Silicus.data.gear as GearData[]).push(gear)\n  attachedGear.forEach(item => item.attachedTo = gear.id)\n\n  return gear\n}\n\nconst smartGunIntMod: WeaponModData = {\n  id: null,\n  source: { book: 'CRB', page: 260 },\n  gearType: GearType.weaponMod,\n  name: 'Smart Gun Int.',\n  type: 'Weapon Mod',\n  cost: 500,\n\n  slot: null,\n  removable: false,\n\n  wirelessBonus: {\n    enabled: true,\n    description:\n      'You gain a +1 dice pool bonus. Gain a bonus Minor Action on a turn when ' +\n      'you use the Reload Smartgun or Change Device Mode actions to eject a ' +\n      'clip or change fire mode.',\n    effects: [\n      { type: EffectType.dicePoolBonus, poolType: 'weapon.all', bonus: 1 },\n    ],\n  },\n}\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 254 },\n  gearType: GearType.weapon,\n  name: 'FN P93 Predator',\n  type: 'Submachine Gun',\n  avail: { rarity: 4, license: true },\n  cost: 925,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '9/12/7/-/-',\n    [WeaponAttr.ammo]: '50(c)',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.submachineGuns,\n}, [\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Rigid Stock',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Laser sight',\n    type: 'Weapon Mod',\n\n    slot: WeaponModSlot.topOrUnder,\n  }),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 254 },\n    gearType: GearType.weaponMod,\n    name: 'Flashlight',\n    type: 'Weapon Mod',\n\n    slot: null,\n    removable: false,\n  }),\n  addGear(smartGunIntMod),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 259 },\n    gearType: GearType.weaponMod,\n    name: 'Gas Vent',\n    type: 'Weapon Mod',\n    avail: { rarity: 3 },\n    cost: 500,\n\n    description: 'Removes the attack rating penalty for Semi-Automatic fire, and reduces it to 2 for Burst Fire',\n\n    slot: WeaponModSlot.barrel,\n    removable: false,\n  }),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 255 },\n  gearType: GearType.weapon,\n  name: 'Ares Viper Silvergun',\n  type: 'Heavy Pistol',\n  avail: { rarity: 4, license: true },\n  cost: 610,\n\n  attributes: {\n    [WeaponAttr.dv]: '4P(f)',\n    [WeaponAttr.modes]: 'SA/BF',\n    [WeaponAttr.attackRatings]: '12/8/6/-/-',\n    [WeaponAttr.ammo]: '30(c)',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.heavyPistols,\n}, [\n  addGear(smartGunIntMod),\n  addGear<WeaponModData>({\n    id: null,\n    source: { book: 'CRB', page: 260 },\n    gearType: GearType.weaponMod,\n    name: 'Quick Draw Holster',\n    type: 'Weapon Mod',\n    avail: { rarity: 2 },\n    cost: 175,\n\n    description: 'Use of a Quick-Draw holster provides a bonus Minor action when the Quick-Draw Action is taken',\n    slot: null,\n  }),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 255 },\n  gearType: GearType.weapon,\n  name: 'Defiance SuperShocker',\n  type: 'Taser',\n  avail: { rarity: 1 },\n  cost: 340,\n\n  attributes: {\n    [WeaponAttr.dv]: '6S(e)',\n    [WeaponAttr.modes]: 'SS',\n    [WeaponAttr.attackRatings]: '10/6/-/-/-',\n    [WeaponAttr.ammo]: '4(m)',\n    [WeaponAttr.maxRange]: '20m',\n  },\n\n  skill: ActiveSkillId.firearms,\n  specialtyName: FirearmSpecialties.trasers,\n}, [\n  addGear(smartGunIntMod),\n])\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 254 },\n  gearType: GearType.weapon,\n  name: 'Survival Knife',\n  type: 'Blade',\n  avail: { rarity: 2 },\n  cost: 250,\n\n  attributes: {\n    [WeaponAttr.dv]: '3P',\n    [WeaponAttr.modes]: 'SA/BF/FA',\n    [WeaponAttr.attackRatings]: '8/2/-/-/-',\n    [WeaponAttr.maxRange]: '20m',\n  },\n\n  skill: ActiveSkillId.closeCombat,\n  specialtyName: 'Blades',\n})\n\naddGear<WeaponData>({\n  id: null,\n  source: { book: 'CRB', page: 254 },\n  gearType: GearType.weapon,\n  name: 'Shock Gloves',\n  type: 'Other Melee',\n  avail: { rarity: 4 },\n  cost: 790,\n\n  attributes: {\n    [WeaponAttr.type]: 'Unarmed',\n    [WeaponAttr.dv]: '4S(e)',\n    [WeaponAttr.attackRatings]: '5/-/-/-/-',\n  },\n\n  skill: ActiveSkillId.closeCombat,\n  specialtyName: 'Blades',\n})\n\naddGear<AugmentData>({\n  id: null,\n  name: 'Synaptic Booster',\n  type: 'Cultured Bioware Augment',\n  gearType: GearType.augment,\n  source: { book: 'CRB', page: 293 },\n  avail: { rarity: 4, license: true },\n  cost: 142_500,\n\n  description: (`\n    The nerve cells making up the spinal cord are both broadened and replicated \n    with this bioware, allowing for neural bandwidth. The result is a much faster \n    reaction time. The booster confers a bonus of +1 Reaction (and the accompanying \n    adjustment to Initiative Score), 1 additional Initiative Die, and 1 additional\n    Minor Action per point of Rating. The synaptic booster cannot be combined with \n    any other form of Reaction or Initiative enhancement. Unlike other enhancements,\n    this cannot be turned off, leaving the user in a perpetual state of being in\n    surrounded by slow motion.  \n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.essenceCost]: 1.65,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n    [AugmentAttr.rating]: 3,\n  },\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.reaction, bonus: 3 },\n    { type: EffectType.initBonus, dice: 3 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Platelet Factories',\n  type: 'Bioware Augment',\n  source: { book: 'CRB', page: 292 },\n  avail: { rarity: 3 },\n  cost: 8_500,\n\n  description: (`\n    Any time you would take 2 or more boxes of damage to your Physical Condition \n    Monitor, reduce the damage by 1 box.\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.essenceCost]: 0.22,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n  },\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Muscle Toner',\n  type: 'Bioware Augment',\n  source: { book: 'CRB', page: 292 },\n  avail: { rarity: 3, license: true },\n  cost: 64_000,\n\n  description: (`\n    Muscle Toner adds it's rating to your Agility attribute. This bioware is incompatible\n    with augmentations that increase Agility, including the muscle replacement cyberware\n    and enhanced articulations bioware\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 4,\n    [AugmentAttr.essenceCost]: 0.88,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n  },\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.agility, bonus: 4 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Bone Density',\n  type: 'Bioware Augment',\n  source: { book: 'CRB', page: 291 },\n  avail: { rarity: 3, license: true },\n  cost: 24_000,\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.alpha,\n    [AugmentAttr.rating]: 4,\n    [AugmentAttr.essenceCost]: 0.48,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n  },\n\n  description: (`\n      Increases Body during damage resistance test by rating. \n      Melee damage: 3P, Atk. Rating: +2\n  `),\n\n  effects: [\n    { type: EffectType.dicePoolBonus, poolType: CharacterPoolTypes.dmgResist, bonus: 4 },\n    // Melee damage: 3P\n    // Melee Atk. Rating: +2\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  name: 'Pain Editor',\n  type: 'Cultured Bioware Augment',\n  gearType: GearType.augment,\n  source: { book: 'CRB', page: 293 },\n  avail: { rarity: 5, illegal: true },\n  cost: 72_000,\n\n  description: (`\n    This cluster of specialized nervous tissue is designed to filter sensory stimuli.\n    If the pain editor is active, this allows you to ignore all injury modifiers, \n    and you can even stay conscious when your stun condition monitor is completely \n    full. You feel no pain—you're blissfully, dangerously, recklessly unaware of\n    the extent of the damage you've taken without either performing a self-examination\n    (Observe in Detail action) or being informed by a biomonitor. While active, the\n    pain editor increases your willpower by 1 and decreases your intuition by 1;\n    additionally, all tactile Perception tests you make have their threshold increased\n    by 1. \n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.beta,\n    [AugmentAttr.essenceCost]: 0.21,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n  },\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.willpower, bonus: 1 },\n    { type: EffectType.attrBonus, attr: CharacterAttr.intuition, bonus: -1 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  name: 'Orthoskin',\n  type: 'Bioware Augment',\n  gearType: GearType.augment,\n  source: { book: 'CRB', page: 292 },\n  avail: { rarity: 7, license: true },\n  cost: 30_000,\n\n  description: (`\n    A web of biofibers in the skin provides the\n    equivalent of personal armor while being virtually\n    indistinguishable from natural skin. Orthoskin\n    provides a bonus equal to its rating to your Defense\n    Rating. Orthoskin cannot be combined with\n    skin augmentations, including dermal plating. \n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.delta,\n    [AugmentAttr.essenceCost]: 0.25,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n  },\n\n  effects: [\n    { type: EffectType.defRatingBonus, bonus: 2 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Reflex Recorder (Firearms)',\n  type: 'Cultured Bioware Augment',\n  source: { book: 'CRB', page: 293 },\n  avail: { rarity: 4 },\n  cost: 7_000,\n\n  description: (`\n    This system uses extra nervous tissue linked to\n    specific areas of the body to improve muscle memory.\n    The reflex recorder adds 1 to the rating of a\n    skill linked to a Physical attribute. Multiple recorders\n    may be taken for multiple skills, but you can’t\n    implant two reflex recorders for the same skill.\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.essenceCost]: 0.11,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n  },\n\n  enabled: true,\n  effects: [\n    { type: EffectType.skillBonus, skill: ActiveSkillId.firearms, bonus: 1 },\n  ],\n})\n\naddGear<AugmentData>({\n  id: null,\n  gearType: GearType.augment,\n  name: 'Cerebral Booster',\n  type: 'Cultured Bioware Augment',\n  source: { book: 'CRB', page: 293 },\n  avail: { rarity: 5 },\n  cost: 47_250,\n\n  description: (`\n    The convolutions and gyri of your cerebrum\n    are augmented and amplified with additional\n    nervous tissue, improving overall brain function.\n    Your cerebral booster increases your Logic attribute\n    by its rating.\n  `),\n\n  attributes: {\n    [AugmentAttr.grade]: AugmentGrade.used,\n    [AugmentAttr.rating]: 3,\n    [AugmentAttr.essenceCost]: 0.66,\n    [AugmentAttr.slot]: AugmentSlot.bioware,\n  },\n\n  enabled: true,\n  effects: [\n    { type: EffectType.attrBonus, attr: CharacterAttr.logic, bonus: 3 },\n  ],\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Sony Emperor',\n  type: 'Commlink',\n  source: { book: 'CRB', page: 267 },\n  avail: { rarity: 2 },\n  cost: 700,\n\n  attributes: {\n    [CommlinkAttr.deviceRating]: 2,\n    [CommlinkAttr.attributes]: '1/1',\n    [CommlinkAttr.programSlots]: 1,\n  },\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Biomonitor',\n  type: 'Biotech',\n  source: { book: 'CRB', page: 281 },\n  avail: { rarity: 2 },\n  cost: 300,\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Glasses',\n  type: 'Clothing',\n  source: { book: 'CRB', page: 285 },\n  avail: { rarity: 2 },\n  cost: 400,\n\n  attributes: {\n    [OtherGearAttr.capacity]: 4,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Smartlink',\n    type: 'Visual Enhancement',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 2 },\n    cost: 2_000,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 2,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Imagelink',\n    type: 'Visual Enhancement',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 1 },\n    cost: 25,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 1,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Thermographic Vision',\n    type: 'Visual Enhancement',\n    source: { book: 'CRB', page: 275 },\n    avail: { rarity: 2 },\n    cost: 500,\n\n    attributes: {\n      [OtherGearAttr.capacityCost]: 1,\n    },\n  }),\n])\n\naddGear<ArmorData>({\n  id: null,\n  gearType: GearType.armor,\n  name: 'Armor Jacket',\n  type: 'Armor',\n  source: { book: 'CRB', page: 265 },\n  avail: { rarity: 2 },\n  cost: 1_000,\n\n  attributes: {\n    [ArmorAttr.defenseBonus]: 4,\n    [ArmorAttr.capacity]: 8,\n  },\n})\n\naddGear({\n  id: null,\n  gearType: GearType.armor,\n  name: 'Auctioneer Business Clothes',\n  type: 'Armor',\n  source: { book: 'CRB', page: 265 },\n  avail: { rarity: 2 },\n  cost: 1_500,\n\n  attributes: {\n    'armor.defenseBonus': 2,\n    'armor.capacity': 6,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.armorMod,\n    name: 'Concealed Hostler',\n    type: 'Armor Mod',\n    source: { book: 'CRB', page: 259 },\n\n    wirelessBonus: {\n      enabled: true,\n      description: 'Increases cancellability threshold by 1',\n    },\n  }),\n])\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Medkit',\n  type: 'Biotech',\n  source: { book: 'CRB', page: 281 },\n  avail: { rarity: 3 },\n  cost: 1_500,\n\n  attributes: {\n    [KitAttr.medkitRating]: 6,\n  },\n\n  wirelessBonus: {\n    enabled: true,\n    description: (`\n      The medkit provides a +1 dice pool modifier to healing tests\n    `),\n  },\n\n  kit: KitType.medKit,\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.other,\n    name: 'Medkit Supplies',\n    type: 'Supplies',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 1 },\n    cost: 100,\n    quantity: 5,\n  }),\n])\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'First Aid Kit',\n  type: 'Kit',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 1 },\n  cost: 500,\n\n  kit: KitType.firstAid,\n})\n\naddGear({\n  id: null,\n  gearType: GearType.other,\n  name: 'Trauma Patch',\n  type: 'Slap Patch',\n  source: { book: 'CRB', page: 282 },\n  avail: { rarity: 3 },\n  cost: 500,\n  quantity: 10,\n  description: (`\n    If placed on a patient with Overflow Damage, the patient is automatically stabilized.\n    These patches are always wireless, and connect to the matrix the moment they are applied.\n  `),\n})\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Suzuki Mirage',\n  type: 'Bike',\n  cost: 12_000,\n  avail: { rarity: 2 },\n  source: { book: 'CRB', page: 295 },\n\n  attributes: {\n    [VehicleAttr.handling]: '2/6',\n    [VehicleAttr.accel]: 29,\n    [VehicleAttr.speedInterval]: 30,\n    [VehicleAttr.topSpeed]: 260,\n    [VehicleAttr.body]: 4,\n    [VehicleAttr.armor]: 2,\n    [VehicleAttr.pilot]: 1,\n    [VehicleAttr.sensor]: 1,\n    [VehicleAttr.seat]: 1,\n  },\n\n  pilotingSpeciality: 'Ground Craft',\n})\n\naddGear<VehicleData>({\n  id: null,\n  gearType: GearType.vehicle,\n  name: 'Hyundai Shin-Hyung',\n  type: 'Car',\n  cost: 20_000,\n  avail: { rarity: 2 },\n  source: { book: 'CRB', page: 295 },\n\n  attributes: {\n    [VehicleAttr.handling]: '3/5',\n    [VehicleAttr.accel]: 12,\n    [VehicleAttr.speedInterval]: 25,\n    [VehicleAttr.topSpeed]: 200,\n    [VehicleAttr.body]: 7,\n    [VehicleAttr.armor]: 1,\n    [VehicleAttr.pilot]: 1,\n    [VehicleAttr.sensor]: 1,\n    [VehicleAttr.seat]: 3,\n  },\n\n  pilotingSpeciality: 'Ground Craft',\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.vehicleMod,\n    modType: ModType.riggerInterface,\n    name: 'Rigger Interface',\n    type: 'vehicle mod',\n    avail: { rarity: 2, license: true },\n    cost: 1_000,\n  }),\n])\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Jake Ozbourne',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 15_000,\n\n  description: 'General use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 6,\n  },\n}, [\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Concealed Carry',\n    type: 'Fake License',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      [LicenseAttr.rating]: 5,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Firearm Carry',\n    type: 'Fake License',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      [LicenseAttr.rating]: 5,\n    },\n  }),\n  addGear({\n    id: null,\n    gearType: GearType.license,\n    name: 'License: Ares Viper Silvergun',\n    type: 'Fake License',\n    source: { book: 'CRB', page: 273 },\n    avail: { rarity: 4, illegal: true },\n    cost: 1_000,\n\n    attributes: {\n      [LicenseAttr.rating]: 5,\n    },\n  }),\n])\n\naddGear<SinData>({\n  id: null,\n  gearType: GearType.sin,\n  name: 'Picard DeLance',\n  type: 'Fake SIN',\n  source: { book: 'CRB', page: 273 },\n  avail: { rarity: 4, illegal: true },\n  cost: 10_000,\n\n  description: 'Runner use SIN',\n\n  attributes: {\n    [SinAttr.rating]: 4,\n  },\n})\n","import { nextRecordId } from './Api/Model'\nimport { Character } from './Character/Character'\nimport { migrateCharacter, SavedCharacter } from './Character/Migrations'\nimport { Artemis } from './data/Artemis'\nimport { Silicus } from './data/Silicus'\n\nconst characterStorageKey = (characterId: string) => `character.${characterId}`\nconst charactersStorageKey = 'characters'\nconst DEBUG_LOAD = true\n\nexport type SavedCharacters = Record<string, string>\n\nexport function loadCharacters (): SavedCharacters {\n  if (DEBUG_LOAD || !localStorage.getItem(charactersStorageKey)) {\n    const savedCharacters: SavedCharacters = {}\n\n    const characters = [\n      migrateCharacter(Artemis),\n      migrateCharacter(Silicus),\n    ]\n\n    characters.forEach(character => {\n      if (character.id === null) character.id = nextRecordId()\n      saveCharacter(character)\n      savedCharacters[character.id] = character.name\n    })\n\n    localStorage.setItem(charactersStorageKey, JSON.stringify(savedCharacters))\n  }\n\n  return JSON.parse(localStorage.getItem(charactersStorageKey) || '{}')\n}\n\nexport function saveCharacter (character: Character): void {\n  if (character.id == null) throw new Error('Character has no id')\n  localStorage.setItem(characterStorageKey(character.id), JSON.stringify(character))\n}\n\nexport function loadCharacter (characterId: string): Character | null {\n  const character: SavedCharacter = JSON.parse(localStorage.getItem(characterStorageKey(characterId)) || 'null')\n  if (character) return migrateCharacter(character)\n  return null\n}\n","import { Button, Stack } from '@mui/material'\nimport React, { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { loadCharacters, SavedCharacters } from '../StorageService'\nimport { RootLayout } from './RootLayout'\n\nexport const CharacterListPage: FC = () => {\n  const history = useHistory()\n  const [characters, setCharacters] = useState<SavedCharacters>({})\n\n  useEffect(() => setCharacters(loadCharacters()), [])\n\n  return (\n    <RootLayout>\n      <Stack>\n        {Object.entries(characters).map(([id, name]) => (\n          <Button\n            key={id}\n            onClick={() => history.push(`/${id}`)}\n            sx={{ padding: 1, fontSize: 30, justifyContent: 'flex-start' }}\n          >\n            {name}\n          </Button>\n        ))}\n      </Stack>\n    </RootLayout>\n  )\n}\n","export type Source = { book: string; page: number } | 'Homebrew'\n\nexport const formatSource = (source: Source): string => {\n  if (typeof source === 'string') return source\n  return `${source.book} p.${source.page}`\n}\n","import { Box, Chip, Paper, Stack, Typography } from '@mui/material'\nimport React, { FC, ReactElement } from 'react'\n\nimport { displayFontFamily } from '../../AppThemeProvider'\n\ninterface SimpleInfoBlockProps {\n  name: ReactElement | string\n  quantity?: number\n  attributes?: ReactElement\n  body?: ReactElement\n  footer?: ReactElement\n}\n\nexport const SimpleInfoBlock: FC<SimpleInfoBlockProps> = ({\n  name,\n  quantity = 0,\n  attributes,\n  body,\n  footer,\n  children,\n}) => {\n  return (\n    <Paper variant=\"outlined\" sx={{ padding: 1, display: 'flex' }}>\n      <Stack gap={1} sx={{ width: '100%' }}>\n        <Stack gap={1} direction={'row'}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Box>\n              <Typography\n                sx={{\n                  display: 'inline-block',\n                  fontFamily: displayFontFamily,\n                  color: 'primary.main',\n                }}\n              >\n                {name}\n              </Typography>\n\n              {quantity >= 1 && (\n                <Chip\n                  sx={{ marginLeft: 1, verticalAlign: 'top' }}\n                  label={`x${quantity}`}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              )}\n            </Box>\n\n            <Box>\n              {body || children}\n            </Box>\n          </Box>\n\n          {attributes && <Box>{attributes}</Box>}\n        </Stack>\n\n        {footer && (\n          <Box>{footer}</Box>\n        )}\n      </Stack>\n    </Paper>\n  )\n}\n","import { Paper } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport { FC } from 'react'\n\ninterface StatBlockProps {\n  vertical?: boolean\n}\n\nexport const StatBlock: FC<StatBlockProps> = ({\n  vertical,\n  children,\n}) => {\n  return (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        display: 'flex',\n        padding: 1,\n        gap: 1,\n        flexWrap: 'wrap',\n        flexDirection: vertical ? 'column' : 'row',\n        justifyContent: 'space-around',\n      }}\n    >\n      {children}\n    </Paper>\n  )\n}\n\ninterface StatProps {\n  name: string\n  value: string | number | null | undefined\n}\n\nexport const Stat: FC<StatProps> = ({\n  name,\n  value,\n}) => {\n  if (name === 'Essence') {\n    value = (value as number).toFixed(2).toString()\n  }\n\n  return (\n    <Box sx={{ display: 'flex', gap: 1, whiteSpace: 'nowrap' }}>\n      <Box sx={{ fontSize: 14, display: 'inline-block', color: 'primary.main', textAlign: 'left', flexGrow: 1 }}>\n        {name}\n      </Box>\n      <Box sx={{ fontSize: 14, display: 'inline-block', textAlign: 'right', flexGrow: 1 }}>\n        {value || '-'}\n      </Box>\n    </Box>\n  )\n}\n","export type Availability = {\n  rarity: number\n  illegal?: boolean\n  license?: boolean\n}\nexport const formatAvail = (avail: Availability): string => {\n  return `${avail.rarity}${avail.illegal ? '(i)' : ''}${avail.license ? '(L)' : ''}`\n}\n","import { FC } from 'react'\n\nimport { AttrList, formatAttr } from '../System/Attribute'\nimport { Stat, StatBlock } from './StatBlock'\n\ninterface AttributeBlockProps {\n  attributes: AttrList\n  vertical?: boolean\n}\n\nexport const AttributeBlock: FC<AttributeBlockProps> = ({\n  attributes,\n  vertical,\n}) => {\n  if (!attributes) return null\n  if (Object.keys(attributes).length === 0) return null\n\n  return (\n    <StatBlock vertical={vertical}>\n      {Object.entries(attributes).map(([type, value]) => (\n        <Stat key={type} name={formatAttr(type)} value={value} />\n      ))}\n    </StatBlock>\n  )\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCaretSquareRight } from '@fortawesome/free-regular-svg-icons'\nimport { faCaretSquareDown } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box, Chip, IconButton, Paper, Typography } from '@mui/material'\nimport { FC, ReactElement, useState } from 'react'\n\nimport { displayFontFamily } from '../../AppThemeProvider'\n\nlibrary.add(faCaretSquareDown, faCaretSquareRight)\n\ninterface InfoBlockProps {\n  title: string\n  titleFontSize?: number\n  subtitle?: string\n  titleRight?: ReactElement\n  expanded?: boolean\n  expandable?: boolean\n  quantity?: number\n}\n\nexport const InfoBlock: FC<InfoBlockProps> = ({\n  title,\n  titleFontSize = 20,\n  quantity = 0,\n  subtitle,\n  titleRight,\n  children,\n  expanded: defaultExpanded = true,\n  expandable,\n}) => {\n  const [expanded, setExpanded] = useState<boolean>(defaultExpanded)\n\n  return (\n    <Paper elevation={1}>\n      <Box sx={{ display: 'flex', gap: 1, padding: 1 }}>\n        {expandable && (\n          <Box>\n            <IconButton size=\"small\" onClick={() => setExpanded(!expanded)}>\n              <FontAwesomeIcon icon={expanded ? 'caret-square-down' : ['far', 'caret-square-right']} />\n            </IconButton>\n          </Box>\n        )}\n\n        <Box sx={{ flexGrow: 1 }}>\n          <Box>\n            <Typography\n              sx={{\n                display: 'inline-block',\n                fontFamily: displayFontFamily,\n                fontSize: titleFontSize,\n                color: 'primary.main',\n              }}\n            >{title}</Typography>\n            {quantity >= 1 && (\n              <Chip\n                sx={{ marginLeft: 1, verticalAlign: 'top' }}\n                label={`x${quantity}`}\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            )}\n          </Box>\n\n          {subtitle}\n        </Box>\n\n        {titleRight}\n      </Box>\n\n      {expanded && children}\n    </Paper>\n  )\n}\n","import { BaseGearData, GearType } from '../../GearData'\nimport { AutosoftAttr } from './AutosoftAttr'\n\nexport interface AutosoftData extends BaseGearData {\n  gearType: GearType.autosoft\n  type: string\n  attributes: {\n    [AutosoftAttr.rating]: number\n    [AutosoftAttr.attr]: string\n    [AutosoftAttr.skill]?: string\n    [AutosoftAttr.weapon]?: string\n  }\n}\n\nexport enum AutosoftType {\n  targeting = 'Weapon Targeting',\n  clearsight = 'clearsight',\n  perception = 'Perception',\n  evasion = 'Evasion',\n  maneuvering = 'Maneuvering',\n  electronicWarfare = 'Electronic Warfare',\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../../Character/CharacterAttr'\nimport { useActiveSkill } from '../../Character/CharacterProvider'\nimport { useAttribute } from '../../System/AttributeProvider'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { hasExpertise, hasSpecialty } from '../../System/Skill/ActiveSkill/ActiveSkillData'\nimport { ActiveSkillId } from '../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool } from '../../UI/DicePool'\nimport { AugmentAttr } from '../Augments/AugmentAttr'\nimport { AugmentData, AugmentType } from '../Augments/AugmentData'\nimport { useFindGear, useGearOfType } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { AutosoftAttr } from '../Software/Autosoft/AutosoftAttr'\nimport { AutosoftType } from '../Software/Autosoft/AutosoftData'\nimport { useAutosoft } from '../Software/Autosoft/AutosoftProvider'\nimport {VehicleAttr} from './VehicleAttr'\nimport { VehicleData } from './VehicleData'\nimport { ModType, VehicleModData } from './VehicleModData'\n\nexport enum VehiclePoolKeys {\n  resistDmg = 'vehicle.resistDmg',\n  pilotEvade = 'vehicle.pilotEvade',\n  riggedEvade = 'vehicle.riggedEvade',\n}\n\ninterface VehiclePoolProps {\n  vehicle: VehicleData\n}\n\nexport const VehicleResistDmg: FC<VehiclePoolProps> = () => {\n  return <DicePool\n    name=\"Resist Dmg.\"\n    poolKey={VehiclePoolKeys.resistDmg}\n    attrs={[VehicleAttr.body]}\n  />\n}\n\nexport const AutosoftPiloting: FC<VehiclePoolProps> = () => {\n  const evasionAutosoft = useAutosoft(AutosoftType.evasion)\n  const maneuveringAutosoft = useAutosoft(AutosoftType.maneuvering)\n\n  const piloting: number = maneuveringAutosoft ? maneuveringAutosoft.attributes[AutosoftAttr.rating] : 0\n  const evasion: number = evasionAutosoft ? evasionAutosoft.attributes[AutosoftAttr.rating] : 0\n\n  const diceGroups: DiceGroup[] = [\n    { name: 'Piloting', size: piloting },\n    { name: 'Evasion', size: evasion },\n  ]\n\n  return <DicePool\n    poolKey={VehiclePoolKeys.pilotEvade}\n    name={'Autosoft Piloting'}\n    groups={diceGroups}\n    dmgPenaltyTypes={[DamageType.vehiclePhysical]}\n  />\n}\n\nexport const DriverPiloting: FC<VehiclePoolProps> = ({\n  vehicle,\n}) => {\n  const pilotingSkill = useActiveSkill(ActiveSkillId.piloting)\n  const reaction = useAttribute<number>(CharacterAttr.reaction) || 0\n\n  const groups: DiceGroup[] = [\n    { name: 'Piloting', size: pilotingSkill?.rank },\n    { name: 'Reaction', size: reaction },\n  ]\n\n  if (hasSpecialty(pilotingSkill, vehicle.pilotingSpeciality)) groups.push(\n    { name: vehicle.pilotingSpeciality, size: 2 })\n  if (hasExpertise(pilotingSkill, vehicle.pilotingSpeciality)) groups.push(\n    { name: vehicle.pilotingSpeciality, size: 3 })\n\n  const dmgPenaltyTypes = [DamageType.charPhysical, DamageType.charStun, DamageType.vehiclePhysical]\n  return <DicePool\n    poolKey={VehiclePoolKeys.riggedEvade}\n    name={'Piloting'}\n    groups={groups}\n    dmgPenaltyTypes={dmgPenaltyTypes}\n  />\n}\n\nexport const RiggedPiloting: FC<VehiclePoolProps> = ({\n  vehicle,\n}) => {\n  const pilotingSkill = useActiveSkill(ActiveSkillId.piloting)\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n\n  const riggerInterface = useGearOfType<VehicleModData>(GearType.vehicleMod)\n    .filter(gear => gear.attachedTo === vehicle.id)\n    .find(gear => gear.modType === ModType.riggerInterface)\n\n  const controlRig = useFindGear<AugmentData>(gear => gear.augmentType === AugmentType.controlRig)\n  if (!controlRig || !riggerInterface) return null\n\n  const groups: DiceGroup[] = [\n    { name: 'Piloting', size: pilotingSkill?.rank },\n    { name: 'Intuition', size: intuition },\n    { name: 'Control Rig', size: controlRig.attributes[AugmentAttr.rating] },\n  ]\n\n  if (hasSpecialty(pilotingSkill, vehicle.pilotingSpeciality)) groups.push(\n    { name: vehicle.pilotingSpeciality, size: 2 })\n  if (hasExpertise(pilotingSkill, vehicle.pilotingSpeciality)) groups.push(\n    { name: vehicle.pilotingSpeciality, size: 3 })\n\n  const dmgPenaltyTypes = [DamageType.charPhysical, DamageType.charStun, DamageType.vehiclePhysical]\n  return <DicePool\n    poolKey={VehiclePoolKeys.riggedEvade}\n    name={'Rigged Piloting'}\n    groups={groups}\n    dmgPenaltyTypes={dmgPenaltyTypes}\n  />\n}\n","import { Box } from '@mui/material'\nimport { FC } from 'react'\n\nexport const InfoSection: FC = ({\n  children,\n}) => {\n  return (\n    <Box sx={{ padding: 1 }}>{children}</Box>\n  )\n}\n\nexport const CombatSection: FC = ({\n  children,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', gap: 1, padding: 1, flexWrap: 'wrap' }}>\n      {children}\n    </Box>\n  )\n}\n","import { Paper, Typography } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport React, { FC } from 'react'\n\nimport { calculateAttributes } from '../System/Attribute'\nimport { AttributeProvider } from '../System/AttributeProvider'\nimport { formatNuyen } from '../System/Nuyen'\nimport { formatSource } from '../System/Source'\nimport { AttributeBlock } from '../UI/AttributeBlock'\nimport { InfoBlock } from '../UI/InfoBlock/InfoBlock'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\nimport { Stat } from '../UI/StatBlock'\nimport { formatAvail } from './Availability'\nimport { useAttachedGear } from './GearContext'\nimport { GearInfoProps } from './GearInfo'\nimport { GearList } from './GearList'\n\nexport const GearInfoBlock: FC<GearInfoProps> = ({\n  item,\n  expanded,\n  children,\n}) => {\n  const blockTitleRight = <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n    {item.avail && <Stat name=\"Avail\" value={formatAvail(item.avail)} />}\n    {item.cost && <Stat name=\"Cost\" value={formatNuyen(item.cost)} />}\n    {item.source && <Stat name=\"Source\" value={formatSource(item.source)} />}\n  </Box>\n\n  const attachedGear = useAttachedGear(item.id)\n\n  const expandable = Boolean(\n    item.description\n    || item.wirelessBonus\n    || item.attributes\n    || children\n    || attachedGear.length > 0,\n  )\n\n  const attributes = calculateAttributes(item.attributes || {}, attachedGear)\n\n  return (\n    <AttributeProvider attributes={attributes}>\n      <InfoBlock\n        title={item.name}\n        quantity={item.quantity || 0}\n        subtitle={item.type}\n        titleRight={blockTitleRight}\n        expandable={expandable}\n        expanded={expanded}\n      >\n        {item.description && (\n          <InfoSection>\n            <Typography sx={{ fontStyle: 'italic' }}>{item.description}</Typography>\n          </InfoSection>\n        )}\n\n        {item.wirelessBonus && (\n          <InfoSection>\n            <Box sx={{ fontStyle: 'italic' }}>\n              <Typography variant=\"body2\" sx={{ color: 'primary.main', display: 'inline' }}>Wireless\n                Bonus:</Typography>\n              <Typography\n                variant=\"body2\"\n                sx={{ display: 'inline', marginLeft: 0.5 }}\n              >{item.wirelessBonus.description}</Typography>\n            </Box>\n          </InfoSection>\n        )}\n\n        <InfoSection>\n          <AttributeBlock attributes={attributes} />\n        </InfoSection>\n\n        {children}\n\n        {attachedGear.length >= 1 && (\n          <Paper variant=\"outlined\" sx={{ padding: 1 }}>\n            <GearList gear={attachedGear} />\n          </Paper>\n        )}\n      </InfoBlock>\n    </AttributeProvider>\n  )\n}\n","import { Typography } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { formatNuyen } from '../../System/Nuyen'\nimport { formatSource } from '../../System/Source'\nimport { SimpleInfoBlock } from '../../UI/InfoBlock/SimpleInfoBlock'\nimport { Stat } from '../../UI/StatBlock'\nimport { GearInfoProps } from '../GearInfo'\nimport { LicenseAttr } from './LicenseAttr'\nimport { LicenseData } from './LicenseData'\n\nexport const LicenseInfo: FC<GearInfoProps<LicenseData>> = ({\n  item: license,\n}) => {\n  return (\n    <SimpleInfoBlock\n      name={license.name}\n      attributes={\n        <>\n          {license.cost && <Stat name=\"Cost\" value={formatNuyen(license.cost)} />}\n          {license.source && <Stat name=\"Source\" value={formatSource(license.source)} />}\n          <Stat name=\"Rating\" value={license.attributes[LicenseAttr.rating]} />\n        </>\n      }\n    >\n      <Typography variant=\"caption\">{license.type}</Typography>\n    </SimpleInfoBlock>\n  )\n}\n","import { Stack, Typography } from '@mui/material'\nimport { FC, ReactElement } from 'react'\n\nimport { formatNuyen } from '../../System/Nuyen'\nimport { formatSource } from '../../System/Source'\nimport { SimpleInfoBlock } from '../../UI/InfoBlock/SimpleInfoBlock'\nimport { Stat } from '../../UI/StatBlock'\nimport { useGearOfType } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearInfoProps } from '../GearInfo'\nimport { LicenseData } from './LicenseData'\nimport { LicenseInfo } from './LicenseInfo'\nimport { SinAttr } from './SinAttr'\nimport { SinData } from './SinData'\n\nexport const SinInfo: FC<GearInfoProps<SinData>> = ({\n  item: sin,\n}) => {\n  const licenses = useGearOfType<LicenseData>(GearType.license)\n    .filter(license => license.attachedTo === sin.id)\n\n  let footer: ReactElement | undefined = undefined\n  if (licenses.length >= 1) {\n    footer = <>\n      {licenses.length >= 1 && (\n        <Stack gap={1}>\n          {licenses.map(license => <LicenseInfo key={license.id} item={license} />)}\n        </Stack>\n      )}\n    </>\n  }\n\n  return (\n    <SimpleInfoBlock\n      name={sin.name}\n      attributes={\n        <>\n          {sin.cost && <Stat name=\"Cost\" value={formatNuyen(sin.cost)} />}\n          {sin.source && <Stat name=\"Source\" value={formatSource(sin.source)} />}\n          <Stat name=\"Rating\" value={sin.attributes[SinAttr.rating]} />\n        </>\n      }\n      body={\n        <Typography variant=\"caption\">{sin.type}</Typography>\n      }\n      footer={footer}\n    />\n  )\n}\n","import { Chip, Typography } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport { FC } from 'react'\n\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { useAttachedGear, useFilterGear } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearInfoProps } from '../GearInfo'\nimport { GearInfoBlock } from '../GearInfoBlock'\nimport { AutosoftData } from '../Software/Autosoft/AutosoftData'\nimport { VehicleData } from '../Vehicles/VehicleData'\nimport { RccAttr } from './RccAttr'\nimport { RccData } from './RccData'\n\nexport const RccInfo: FC<GearInfoProps<RccData>> = ({\n  item: rcc,\n  expanded,\n}) => {\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n  const autosofts = useAttachedGear(rcc.id)\n    .filter(gear => gear.gearType === GearType.autosoft)\n    .map(gear => gear as AutosoftData)\n  const slavedAutosofts = autosofts\n    .filter(autosoft => rcc.slavedAutosofts.includes(autosoft.id))\n\n  const slavedVehicles: VehicleData[] = useFilterGear(gear => gear.slavedTo === rcc.id)\n  const maxSlaved = rcc.attributes[RccAttr.deviceRating] * 3\n\n  return (\n    <GearInfoBlock item={rcc} expanded={expanded}>\n      <InfoSection>\n        <Typography variant={'h6'}>Autosofts ({rcc.slavedAutosofts.length}/{dataProcessing} shared)</Typography>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n          {slavedAutosofts.map(autosoft => (\n            <Chip key={autosoft.id} label={autosoft.name} />\n          ))}\n        </Box>\n      </InfoSection>\n\n      <InfoSection>\n        <Typography variant={'h6'}>Slaved ({slavedVehicles.length} / {maxSlaved})</Typography>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n          {slavedVehicles.map(vehicle => (\n            <Chip key={vehicle.id} label={vehicle.name} />\n          ))}\n        </Box>\n      </InfoSection>\n    </GearInfoBlock>\n  )\n}\n","import Paper from '@mui/material/Paper'\nimport { FC, useState } from 'react'\n\nimport { noOp } from '../Helpers'\n\ninterface TrackCellProps {\n  onClick? (): void\n\n  filled?: boolean\n}\n\nexport const TrackCell: FC<TrackCellProps> = ({\n  children,\n  onClick = noOp,\n  filled = false,\n}) => {\n  const [hovered, setHovered] = useState<boolean>(false)\n\n  let backgroundColor = 'default'\n  if (filled) backgroundColor = 'primary.dark'\n  if (hovered) backgroundColor = 'primary.light'\n\n  return (\n    <Paper\n      sx={{ padding: 1, userSelect: 'none', backgroundColor }}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      onClick={() => {\n        setHovered(false)\n        onClick()\n      }}\n      variant={'outlined'}\n    >{children}</Paper>\n  )\n}\n","import { Typography } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport { FC } from 'react'\n\nimport { noOp } from '../../Helpers'\nimport { TrackCell } from '../../UI/TrackCell'\nimport { useDamage, useSetDamage } from './DamageProvider'\nimport { DamageType } from './DamageType'\n\nimport styles from './DamageTrack.module.scss'\n\ninterface DamageTrackProps {\n  type: DamageType\n  max: number\n  label?: string\n}\n\nexport const DamageTrack: FC<DamageTrackProps> = ({\n  type,\n  max,\n  label = 'Physical',\n}) => {\n  const current = useDamage(type)\n  const onChange = useSetDamage(type)\n\n  const onToggleCell = (value: number) => {\n    if (value === current) {\n      onChange(value - 1)\n    } else {\n      onChange(value)\n    }\n  }\n\n  return (\n    <Box sx={{ minWidth: 150, maxWidth: 300 }}>\n      <Typography variant={'h6'}>{label}</Typography>\n      <Box sx={{ paddingBottom: 0.5, textAlign: 'right' }}>\n        <TrackCell onClick={() => onChange(0)}>0</TrackCell>\n      </Box>\n      <Box className={styles.DamageTrack}>\n        {new Array(max).fill(null).map((_, index) => (\n          <DamageCell key={index} value={index + 1} filled={index < current} toggleCell={onToggleCell} />\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\ninterface DamageCellProps {\n  value: number\n  filled?: boolean\n\n  toggleCell? (newValue: number): void\n}\n\nconst DamageCell: FC<DamageCellProps> = ({\n  value,\n  filled = false,\n  toggleCell = noOp,\n}) => {\n  const penalty = Math.floor((value + 1) / 3)\n\n  return (\n    <TrackCell onClick={() => toggleCell(value)} filled={filled}>\n      <Box sx={{ textAlign: 'right' }}>\n        {value % 3 === 0 ? penalty * -1 : '\\u00A0'}\n      </Box>\n    </TrackCell>\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { collectGearEffects, isDefRatingBonus } from '../Gear/Effect'\nimport { useAllGear } from '../Gear/GearContext'\nimport { VehicleAttr } from '../Gear/Vehicles/VehicleAttr'\nimport { Stat } from '../UI/StatBlock'\nimport { useAttribute } from './AttributeProvider'\n\nexport const CharacterDefRatingStat: FC = () => {\n  const body = useAttribute<number>(CharacterAttr.body) || 0\n  const bonus = collectGearEffects(useAllGear())\n    .filter(isDefRatingBonus)\n    .reduce((sum, effect) => sum + effect.bonus, 0)\n\n  return (\n    <Stat name=\"Def. Rating\" value={body + bonus} />\n  )\n}\n\nexport const VehicleDefRatingStat: FC = () => {\n  const body = useAttribute<number>(VehicleAttr.body) || 0\n  const armor = useAttribute<number>(VehicleAttr.armor) || 0\n\n  return (\n    <Stat name=\"Def. Rating\" value={body + armor} />\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../Character/CharacterAttr'\nimport { useFindGear } from '../Gear/GearContext'\nimport { GearType } from '../Gear/GearData'\nimport { RccAttr } from '../Gear/Rcc/RccAttr'\nimport { RccData } from '../Gear/Rcc/RccData'\nimport { Stat } from '../UI/StatBlock'\nimport { useAttribute } from './AttributeProvider'\n\ninterface InitiativeStatProps {\n  name: string\n  base: number\n  dice?: number\n}\n\nexport const InitiativeStat: FC<InitiativeStatProps> = ({\n  name,\n  base,\n  dice = 1,\n}) => {\n  return (\n    <Stat name={name} value={`${base} + ${dice}D6`} />\n  )\n}\n\nexport const CharacterHotVrInit: FC = () => {\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const rcc = useFindGear<RccData>(gear => gear.gearType === GearType.rcc)\n  if (!rcc) return null\n\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n\n  return (\n    <InitiativeStat name=\"VR Cold Init\" base={intuition + dataProcessing} dice={2} />\n  )\n}\n\nexport const CharacterColdVrInit: FC = () => {\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const rcc = useFindGear<RccData>(gear => gear.gearType === GearType.rcc)\n  if (!rcc) return null\n\n  const dataProcessing = rcc.attributes[RccAttr.dataProcessing]\n\n  return (\n    <InitiativeStat name=\"VR Hot Init\" base={intuition + dataProcessing} dice={3} />\n  )\n}\n","import { Box, Paper } from '@mui/material'\nimport { FC } from 'react'\n\nimport { useSkills } from '../Character/CharacterProvider'\nimport { formatAttr } from '../System/Attribute'\nimport { useAttributes } from '../System/AttributeProvider'\nimport { useDamagePenalty } from '../System/Damage/DamageProvider'\nimport { DamageType } from '../System/Damage/DamageType'\nimport { ActiveSkillData, hasExpertise, hasSpecialty } from '../System/Skill/ActiveSkill/ActiveSkillData'\nimport { formatSkill } from '../System/Skill/ActiveSkill/ActiveSkillId'\n\nexport interface DiceGroup {\n  name: string\n  size: number | undefined\n  default?: number\n}\n\nexport const DicePools: FC = ({\n  children,\n}) => {\n  return <Paper variant=\"outlined\" sx={{ padding: 1, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n    {children}\n  </Paper>\n}\n\nexport interface DicePoolData {\n  poolKey: string\n  name: string\n  skills?: string[]\n  attrs?: string[]\n  bonuses?: DiceGroup[]\n  dmgPenaltyTypes?: DamageType[]\n}\n\nexport const skillSpecialtyBonus = (\n  skill: ActiveSkillData | undefined,\n  specialtyName: string | undefined,\n): DiceGroup | null => {\n  if (!skill || !specialtyName)\n    return null\n\n  if (hasSpecialty(skill, specialtyName))\n    return { name: 'Specialty', size: 2 }\n\n  if (hasExpertise(skill, specialtyName))\n    return { name: 'Expertise', size: 3 }\n\n  return null\n}\n\ntype DicePoolProps = {\n  name: string\n  groups?: DiceGroup[]\n  dmgPenaltyTypes?: DamageType[]\n} & DicePoolData\n\nexport const DicePool: FC<DicePoolProps> = ({\n  name,\n  skills = [],\n  attrs = [],\n  bonuses = [],\n  groups = [],\n  dmgPenaltyTypes = [],\n}) => {\n  const skillList = useSkills(skills)\n  const attrList = useAttributes(attrs)\n  const dmgPenalty = useDamagePenalty(dmgPenaltyTypes)\n\n  groups = [\n    ...groups,\n    ...Object.entries(skillList)\n      .map(([skillId, rank]) => ({ name: formatSkill(skillId), size: rank })),\n    ...Object.entries(attrList)\n      .filter(([_, value]) => typeof value === 'number')\n      .map(([attrType, value]) => ({ name: formatAttr(attrType), size: value as number })),\n    ...bonuses,\n  ]\n\n  if (dmgPenalty > 0) {\n    groups = [...groups, { name: 'Dmg. Penalty', size: dmgPenalty * -1 }]\n  }\n\n  const total = Math.max(0, groups.map(g => g.size || g.default || 0).reduce((a, b) => a + b, 0))\n\n  return (\n    <Box sx={{ display: 'inline-flex', flexDirection: 'column' }}>\n      <DiceGroupDisplay name={name} size={total} total />\n      {groups.map(group => (\n        <DiceGroupDisplay key={group.name} name={group.name} size={group.size || group.default || 0} />\n      ))}\n    </Box>\n  )\n}\n\ninterface DiceGroupDisplayProps {\n  name: string\n  size: number\n  total?: boolean\n}\n\nconst DiceGroupDisplay: FC<DiceGroupDisplayProps> = ({\n  name,\n  size,\n  total,\n}) => {\n  const sizeStyles = { display: 'inline-block', padding: 0.5, width: 30, textAlign: 'center' } as const\n  const nameStyles = { display: 'inline-block', padding: 0.5, marginRight: 1 } as const\n\n  return (\n    <Box sx={{ display: 'flex', fontSize: total ? 14 : 12, backgroundColor: total ? '#424242' : undefined }}>\n      <Box sx={sizeStyles}>{size}</Box>\n      <Box sx={nameStyles}>{name}</Box>\n    </Box>\n  )\n}\n","import { Typography } from '@mui/material'\nimport { FC } from 'react'\n\nimport { DicePools } from '../UI/DicePool'\nimport { InfoSection } from '../UI/InfoBlock/InfoSection'\n\nexport const GearDicePools: FC = ({\n  children,\n}) => {\n  return (\n    <InfoSection>\n      <Typography variant={'h6'}>Dice Pools</Typography>\n      <DicePools>{children}</DicePools>\n    </InfoSection>\n  )\n}\n","import { createContext, FC, useContext } from 'react'\n\nimport { AutosoftAttr } from './AutosoftAttr'\nimport { AutosoftData } from './AutosoftData'\n\nconst AutosoftContext = createContext<AutosoftData[]>([])\n\ninterface AutosoftProviderProps {\n  autosofts: AutosoftData[]\n}\n\nexport const AutosoftProvider: FC<AutosoftProviderProps> = ({\n  autosofts,\n  children,\n}) => {\n  return (\n    <AutosoftContext.Provider value={autosofts}>{children}</AutosoftContext.Provider>\n  )\n}\n\nexport const useAutosoft = (name: string): AutosoftData | undefined => {\n  const autosofts = useContext(AutosoftContext)\n  return autosofts.find(autosoft => autosoft.name === name)\n}\n\nexport const useTargetingAutosoft = (weaponName: string): number | undefined => {\n  return useContext(AutosoftContext)\n    .find(autosoft => autosoft.attributes[AutosoftAttr.weapon] === weaponName)\n    ?.attributes[AutosoftAttr.rating]\n}\n","import { faBroadcastTower, faSave } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Box } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { RecordId } from '../../../Api/Model'\nimport { AttributeBlock } from '../../../UI/AttributeBlock'\nimport { AutosoftData } from './AutosoftData'\n\ninterface AutosoftsListProps {\n  autosofts: AutosoftData[]\n  slavedIds?: RecordId[]\n  withAvail?: boolean\n  withCost?: boolean\n}\n\nexport const AutosoftsList: FC<AutosoftsListProps> = ({\n  autosofts,\n  slavedIds,\n}) => {\n  return (\n    <Box>\n      {autosofts.map(autosoft => (\n        <Box key={autosoft.id} sx={{ paddingTop: 1 }}>\n          <AutosoftListItem\n            key={autosoft.id}\n            autosoft={autosoft}\n            slavedIds={slavedIds}\n          />\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\ninterface AutosoftListItemProps {\n  autosoft: AutosoftData\n  slavedIds?: RecordId[]\n  withAvail?: boolean\n  withCost?: boolean\n}\n\nconst AutosoftListItem: FC<AutosoftListItemProps> = ({\n  autosoft,\n  slavedIds,\n}) => {\n  return (\n    <Box>\n      <Box>\n        <Box sx={{ display: 'inline-block', marginRight: 1 }}>\n          {slavedIds?.includes(autosoft.id) ? (\n            <FontAwesomeIcon icon={faBroadcastTower} />\n          ) : (\n            <FontAwesomeIcon icon={faSave} />\n          )}\n        </Box>\n        {autosoft.name}\n      </Box>\n\n      <AttributeBlock attributes={autosoft.attributes} />\n    </Box>\n  )\n}\n","import { FC } from 'react'\n\nimport { CharacterAttr } from '../../Character/CharacterAttr'\nimport { useActiveSkill } from '../../Character/CharacterProvider'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { ActiveSkillId } from '../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool, skillSpecialtyBonus } from '../../UI/DicePool'\nimport { AugmentAttr } from '../Augments/AugmentAttr'\nimport { AugmentData, AugmentType } from '../Augments/AugmentData'\nimport { useFindGear } from '../GearContext'\nimport { useTargetingAutosoft } from '../Software/Autosoft/AutosoftProvider'\nimport { VehicleAttr } from '../Vehicles/VehicleAttr'\nimport { WeaponData } from './WeaponData'\n\nexport enum WeaponPoolKeys {\n  basicAttack = 'weapon.basicAttack',\n  droneAttack = 'weapon.droneAttack',\n  mountedAttack = 'weapon.mountedAttack',\n  riggedAttack = 'weapon.riggedAttack',\n}\n\ninterface FirearmPoolProps {\n  weapon: WeaponData\n}\n\nexport const BasicAttackPool: FC<FirearmPoolProps> = ({\n  weapon,\n}) => {\n  const skill = useActiveSkill(weapon.skill)\n  const specialtyBonus = skillSpecialtyBonus(skill, weapon.specialtyName)\n\n  const bonuses: DiceGroup[] = []\n  if (specialtyBonus) bonuses.push(specialtyBonus)\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.basicAttack}\n    name={'Basic Attack'}\n    attrs={[CharacterAttr.agility]}\n    skills={[weapon.skill]}\n    bonuses={bonuses}\n    dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n  />\n}\n\nexport const DroneAttackPool: FC<FirearmPoolProps> = ({\n  weapon,\n}) => {\n  const targetingAutosoft = useTargetingAutosoft(weapon.name) || -1\n\n  const targetingGroup: DiceGroup = { name: 'Targeting', size: targetingAutosoft }\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.droneAttack}\n    name={'Drone Attack'}\n    attrs={[VehicleAttr.sensor]}\n    groups={[targetingGroup]}\n    dmgPenaltyTypes={[DamageType.vehiclePhysical]}\n  />\n}\n\nexport const VehicleAttackPool: FC<FirearmPoolProps> = () => <DicePool\n  poolKey={WeaponPoolKeys.mountedAttack}\n  name={'Mounted Attack'}\n  attrs={[CharacterAttr.logic]}\n  skills={[ActiveSkillId.engineering]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nexport const RiggedAttackPool: FC<FirearmPoolProps> = () => {\n  const controlRig = useFindGear<AugmentData>(gear => gear.augmentType === AugmentType.controlRig)\n  if (!controlRig) return null\n\n  return <DicePool\n    poolKey={WeaponPoolKeys.riggedAttack}\n    name={'Rigged Attack'}\n    attrs={[CharacterAttr.logic]}\n    skills={[ActiveSkillId.engineering]}\n    bonuses={[\n      { name: 'Control Rig', size: controlRig.attributes[AugmentAttr.rating] },\n    ]}\n    dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun, DamageType.vehiclePhysical]}\n  />\n}\n","import {Box, Typography, useMediaQuery, useTheme} from '@mui/material'\nimport {FC} from 'react'\n\nimport {DamageProvider} from '../../System/Damage/DamageProvider'\nimport {DamageTrack} from '../../System/Damage/DamageTrack'\nimport {DamageType} from '../../System/Damage/DamageType'\nimport {VehicleDefRatingStat} from '../../System/DefenseRating'\nimport {CharacterColdVrInit, CharacterHotVrInit, InitiativeStat} from '../../System/Initiative'\nimport {AttributeBlock} from '../../UI/AttributeBlock'\nimport {InfoSection} from '../../UI/InfoBlock/InfoSection'\nimport {StatBlock} from '../../UI/StatBlock'\nimport {useGear, useGearOfType} from '../GearContext'\nimport {GearType} from '../GearData'\nimport {GearDicePools} from '../GearDicePools'\nimport {GearInfoProps} from '../GearInfo'\nimport {GearInfoBlock} from '../GearInfoBlock'\nimport {RccData} from '../Rcc/RccData'\nimport {AutosoftData} from '../Software/Autosoft/AutosoftData'\nimport {AutosoftProvider} from '../Software/Autosoft/AutosoftProvider'\nimport {AutosoftsList} from '../Software/Autosoft/AutosoftsList'\nimport {AutosoftPiloting, DriverPiloting, RiggedPiloting, VehicleResistDmg} from './DicePools'\nimport {VehicleAttr} from './VehicleAttr'\nimport {VehicleData} from './VehicleData'\nimport {ModType, VehicleModData} from './VehicleModData'\n\nexport const VehicleInfo:FC<GearInfoProps<VehicleData>> = ({\n  item: vehicle,\n  expanded,\n}) => {\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n\n  const pilot = vehicle.attributes[VehicleAttr.pilot] || 0\n\n  const riggerInterface = useGearOfType<VehicleModData>(GearType.vehicleMod)\n    .filter(gear => gear.attachedTo === vehicle.id)\n    .find(gear => gear.modType === ModType.riggerInterface)\n\n  const rcc = useGear<RccData>(vehicle.slavedTo)\n  const physicalMax = Math.ceil(vehicle.attributes[VehicleAttr.body] / 2) + 8\n  const allAutosofts = useGearOfType<AutosoftData>(GearType.autosoft)\n\n  let autosofts = allAutosofts\n    .filter(gear => gear.attachedTo === vehicle.id)\n\n  if (rcc) {\n    autosofts = [\n      ...autosofts,\n      ...allAutosofts\n        .filter(autosoft => autosoft.attachedTo === rcc.id)\n        .filter(autosoft => rcc.slavedAutosofts.includes(autosoft.id)),\n    ]\n  }\n\n  return (\n    <DamageProvider type={DamageType.vehiclePhysical} id={vehicle.id}>\n      <AutosoftProvider autosofts={autosofts}>\n        <GearInfoBlock item={vehicle} expanded={expanded}>\n          <Box sx={{display: 'flex', flexDirection: mdScreenOrLarger ? 'row-reverse' : 'column', flexWrap: 'wrap'}}>\n            <Box sx={{display: 'flex', flexDirection: mdScreenOrLarger ? 'column' : 'row', padding: 1, gap: 1}}>\n              <Box>\n                <Typography variant={'h6'}>Combat</Typography>\n                <StatBlock vertical>\n                  <InitiativeStat name='Drone Init' base={pilot * 2} dice={4} />\n                  {riggerInterface && (\n                    <>\n                      <CharacterHotVrInit />\n                      <CharacterColdVrInit />\n                    </>\n                  )}\n                  <VehicleDefRatingStat />\n                </StatBlock>\n              </Box>\n\n              <Box>\n                <DamageTrack type={DamageType.vehiclePhysical} max={physicalMax} label='Physical' />\n              </Box>\n            </Box>\n\n            <Box sx={{flexGrow: 1}}>\n              <GearDicePools>\n                <VehicleResistDmg vehicle={vehicle} />\n                <DriverPiloting vehicle={vehicle} />\n                <AutosoftPiloting vehicle={vehicle} />\n                <RiggedPiloting vehicle={vehicle} />\n              </GearDicePools>\n\n              {rcc && (\n                <InfoSection>\n                  <Typography variant={'h6'}>Slaved To</Typography>\n                  <Typography>{rcc.name}</Typography>\n                  <AttributeBlock attributes={rcc.attributes} />\n                </InfoSection>\n              )}\n\n              <InfoSection>\n                <Typography variant={'h6'}>Autosofts</Typography>\n                <AutosoftsList autosofts={autosofts} slavedIds={rcc?.slavedAutosofts} />\n              </InfoSection>\n            </Box>\n          </Box>\n        </GearInfoBlock>\n      </AutosoftProvider>\n    </DamageProvider>\n  )\n}\n","import { FC } from 'react'\n\nimport { useGear } from '../GearContext'\nimport { GearType } from '../GearData'\nimport { GearDicePools } from '../GearDicePools'\nimport { GearInfoProps } from '../GearInfo'\nimport { GearInfoBlock } from '../GearInfoBlock'\nimport { BasicAttackPool, DroneAttackPool, RiggedAttackPool, VehicleAttackPool } from './DicePools'\nimport { WeaponData } from './WeaponData'\n\nexport const WeaponInfo: FC<GearInfoProps<WeaponData>> = ({\n  expanded,\n  item: weapon,\n}) => {\n  const mounted = useGear(weapon.attachedTo)?.gearType === GearType.vehicleMod\n\n  return (\n    <GearInfoBlock item={weapon} expanded={expanded}>\n      <GearDicePools>\n        {mounted ? (\n          <>\n            <VehicleAttackPool weapon={weapon} />\n            <DroneAttackPool weapon={weapon} />\n            <RiggedAttackPool weapon={weapon} />\n          </>\n        ) : (\n          <>\n            <BasicAttackPool weapon={weapon} />\n          </>\n        )}\n      </GearDicePools>\n    </GearInfoBlock>\n  )\n}\n","import { Typography } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { formatAttr } from '../System/Attribute'\nimport { formatNuyen } from '../System/Nuyen'\nimport { formatSource } from '../System/Source'\nimport { SimpleInfoBlock } from '../UI/InfoBlock/SimpleInfoBlock'\nimport { Stat } from '../UI/StatBlock'\nimport { formatAvail } from './Availability'\nimport { useAttachedGear } from './GearContext'\nimport { GearData, GearType } from './GearData'\nimport { GearInfoBlock } from './GearInfoBlock'\nimport { GearList } from './GearList'\nimport { LicenseData } from './License/LicenseData'\nimport { LicenseInfo } from './License/LicenseInfo'\nimport { SinData } from './License/SinData'\nimport { SinInfo } from './License/SinInfo'\nimport { RccData } from './Rcc/RccData'\nimport { RccInfo } from './Rcc/RccInfo'\nimport { VehicleData } from './Vehicles/VehicleData'\nimport { VehicleInfo } from './Vehicles/VehicleInfo'\nimport { WeaponData } from './Weapons/WeaponData'\nimport { WeaponInfo } from './Weapons/WeaponInfo'\n\nexport interface GearInfoProps<Type extends GearData = GearData> {\n  item: Type\n  expanded?: boolean\n}\n\nexport const GearInfo: FC<GearInfoProps> = ({\n  item,\n  expanded,\n}) => {\n  switch (item.gearType) {\n    case GearType.weapon:\n      return <WeaponInfo item={item as WeaponData} expanded={expanded} />\n    case GearType.vehicle:\n      return <VehicleInfo item={item as VehicleData} expanded={expanded} />\n    case GearType.rcc:\n      return <RccInfo item={item as RccData} expanded={expanded} />\n    case GearType.sin:\n      return <SinInfo item={item as SinData} expanded={expanded} />\n    case GearType.license:\n      return <LicenseInfo item={item as LicenseData} expanded={expanded} />\n    case GearType.weaponMod:\n    case GearType.armorMod:\n    case GearType.vehicleMod:\n    case GearType.autosoft:\n      return <SimpleGearInfo item={item} expanded={expanded} />\n    default:\n      return <GearInfoBlock item={item} expanded={expanded} />\n  }\n}\n\nexport const SimpleGearInfo: FC<GearInfoProps> = ({\n  item,\n  expanded,\n}) => {\n  const attachedGear = useAttachedGear(item.id)\n\n  return (\n    <SimpleInfoBlock\n      name={item.name}\n      attributes={\n        <>\n          {item.avail && <Stat name=\"Avail\" value={formatAvail(item.avail)} />}\n          {item.cost && <Stat name=\"Cost\" value={formatNuyen(item.cost)} />}\n          {item.source && <Stat name=\"Source\" value={formatSource(item.source)} />}\n          {item.attributes && Object.entries(item.attributes).map(([name, value]) => (\n            <Stat key={name} name={formatAttr(name)} value={value} />\n          ))}\n        </>\n      }\n      body={\n        <>\n          {item.type && <Typography variant=\"caption\">{item.type}</Typography>}\n          {item.description && <Typography variant=\"caption\">{item.description}</Typography>}\n        </>\n      }\n      footer={attachedGear.length >= 1 ? <GearList gear={attachedGear} /> : undefined}\n    >\n\n    </SimpleInfoBlock>\n  )\n}\n","import Box from '@mui/material/Box'\nimport { FC } from 'react'\n\nimport { GearData } from './GearData'\nimport { GearInfo } from './GearInfo'\n\ninterface GearListProps {\n  gear: GearData[]\n  expanded?: boolean\n}\n\nexport const GearList: FC<GearListProps> = ({\n  gear,\n  expanded = true,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      {gear.map((gear) => <GearInfo key={gear.id} item={gear} expanded={expanded} />)}\n    </Box>\n  )\n}\n","import { Typography } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { AugmentData } from '../../Gear/Augments/AugmentData'\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\n\nexport const AugmentsPage: FC = () => {\n  const augments = useGearOfType<AugmentData>(GearType.augment)\n    .filter(gear => !gear.attachedTo)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Augments</Typography>\n      <GearList gear={augments} />\n    </>\n  )\n}\n","import { Typography } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport React, { FC } from 'react'\n\nimport { SimpleInfoBlock } from '../UI/InfoBlock/SimpleInfoBlock'\nimport { Stat } from '../UI/StatBlock'\nimport { ContactData } from './ContactData'\n\ninterface ContactInfoProps {\n  contact: ContactData\n}\n\nexport const ContactInfo: FC<ContactInfoProps> = ({\n  contact,\n}) => {\n  const blockTitleRight = (\n    <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n      <Stat name=\"Loyalty\" value={contact.loyalty} />\n      <Stat name=\"Connection\" value={contact.connection} />\n    </Box>\n  )\n\n  return (\n    <SimpleInfoBlock name={contact.name} attributes={blockTitleRight}>\n      <Typography variant=\"caption\">{contact.description}</Typography>\n    </SimpleInfoBlock>\n  )\n}\n","import { Box } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { ContactData } from './ContactData'\nimport { ContactInfo } from './ContactInfo'\n\ninterface ContactListProps {\n  contacts: ContactData[]\n}\n\nexport const ContactList: FC<ContactListProps> = ({\n  contacts,\n}) => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      {contacts.map(contact => (\n        <ContactInfo key={contact.name} contact={contact} />\n      ))}\n    </Box>\n  )\n}\n","import { BaseGearData, GearData, GearType } from '../GearData'\nimport { SinAttr } from './SinAttr'\n\nexport interface SinData extends BaseGearData {\n  gearType: GearType.sin\n  attributes: {\n    [SinAttr.rating]: number\n  }\n}\n\nexport function isSin (gear: GearData): gear is SinData {\n  return gear.gearType === GearType.sin\n}\n","import { FC } from 'react'\n\nimport { useAttributes } from '../../System/AttributeProvider'\nimport { AttributeBlock } from '../../UI/AttributeBlock'\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { CharacterAttr } from '../CharacterAttr'\n\nexport const AttributesSection: FC = () => {\n  const charAttributes = useAttributes([\n    CharacterAttr.body,\n    CharacterAttr.agility,\n    CharacterAttr.reaction,\n    CharacterAttr.strength,\n    CharacterAttr.willpower,\n    CharacterAttr.logic,\n    CharacterAttr.intuition,\n    CharacterAttr.charisma,\n    CharacterAttr.edge,\n    CharacterAttr.essence,\n    CharacterAttr.magic,\n    CharacterAttr.resonance,\n  ])\n\n  const magic = charAttributes[CharacterAttr.magic]\n  if (!magic) delete charAttributes[CharacterAttr.magic]\n\n  const resonance = charAttributes[CharacterAttr.resonance]\n  if (!resonance) delete charAttributes[CharacterAttr.resonance]\n\n  return <InfoSection>\n    <AttributeBlock attributes={charAttributes} />\n  </InfoSection>\n}\n","import { Typography, useMediaQuery, useTheme } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport { FC } from 'react'\n\nimport { collectGearEffects, isInitBonus } from '../../Gear/Effect'\nimport { useAllGear } from '../../Gear/GearContext'\nimport { useAttribute } from '../../System/AttributeProvider'\nimport { DamageTrack } from '../../System/Damage/DamageTrack'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { CharacterDefRatingStat } from '../../System/DefenseRating'\nimport { CharacterColdVrInit, CharacterHotVrInit, InitiativeStat } from '../../System/Initiative'\nimport { StatBlock } from '../../UI/StatBlock'\nimport { CharacterAttr } from '../CharacterAttr'\n\nexport const CombatArea: FC = () => {\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n  const gear = useAllGear()\n\n  const body = useAttribute<number>(CharacterAttr.body) || 0\n  const reaction = useAttribute<number>(CharacterAttr.reaction) || 0\n  const intuition = useAttribute<number>(CharacterAttr.intuition) || 0\n  const willpower = useAttribute<number>(CharacterAttr.willpower) || 0\n\n  const physicalMax = Math.ceil(body / 2) + 8\n  const stunMax = Math.ceil(willpower / 2) + 8\n\n  const initDice = collectGearEffects(gear)\n    .filter(isInitBonus)\n    .reduce((sum, effect) => sum + effect.dice, 1)\n\n  return <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'column' : 'row', padding: 1, gap: 1 }}>\n    <Box>\n      <Typography variant={'h6'}>Combat</Typography>\n      <StatBlock vertical>\n        {/* NOTE: pg. 67 => changed by augments */}\n        <InitiativeStat name=\"Init\" base={reaction + intuition} dice={initDice} />\n        <CharacterHotVrInit />\n        <CharacterColdVrInit />\n        <CharacterDefRatingStat />\n      </StatBlock>\n    </Box>\n\n    <Box>\n      <DamageTrack type={DamageType.charPhysical} max={physicalMax} label=\"Physical\" />\n    </Box>\n\n    <Box>\n      <DamageTrack type={DamageType.charStun} max={stunMax} label=\"Stun\" />\n    </Box>\n  </Box>\n}\n","import { Typography } from '@mui/material'\nimport { FC } from 'react'\n\nimport { useAllGear } from '../../Gear/GearContext'\nimport { KitAttr } from '../../Gear/Kit/KitAttr'\nimport { KitType } from '../../Gear/Kit/KitType'\nimport { OtherGearData } from '../../Gear/OtherGearData'\nimport { DamageType } from '../../System/Damage/DamageType'\nimport { ActiveSkillId } from '../../System/Skill/ActiveSkill/ActiveSkillId'\nimport { DiceGroup, DicePool, DicePools, skillSpecialtyBonus } from '../../UI/DicePool'\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { CharacterAttr } from '../CharacterAttr'\nimport { CharacterPoolTypes } from '../CharacterPoolTypes'\nimport { useActiveSkill } from '../CharacterProvider'\n\nexport const DicePoolsSection: FC = () => {\n  return <InfoSection>\n    <Typography variant={'h6'}>Dice Pools</Typography>\n    <DicePools>\n      <DodgePool />\n      <ResistDamagePool />\n      <ComposurePool />\n      <JudgeIntentPool />\n      <MemoryPool />\n      <LiftPool />\n      <FirstAidPool />\n      <MedkitPool />\n    </DicePools>\n  </InfoSection>\n}\n\nconst DodgePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.dodge}\n  name={'Dodge'}\n  attrs={[CharacterAttr.reaction, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst ResistDamagePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.dmgResist}\n  name={'Resist Dmg.'}\n  attrs={[CharacterAttr.body]}\n  dmgPenaltyTypes={[]}\n/>\n\nconst ComposurePool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.composure}\n  name={'Composure'}\n  attrs={[CharacterAttr.willpower, CharacterAttr.charisma]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst JudgeIntentPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.judgeIntent}\n  name={'Judge Intent'}\n  attrs={[CharacterAttr.willpower, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst MemoryPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.memory}\n  name={'Memory'}\n  attrs={[CharacterAttr.logic, CharacterAttr.intuition]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst LiftPool: FC = () => <DicePool\n  poolKey={CharacterPoolTypes.liftCarry}\n  name={'Lift/Carry'}\n  attrs={[CharacterAttr.body, CharacterAttr.strength]}\n  dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n/>\n\nconst FirstAidPool: FC = () => {\n  const firstAidKit = useAllGear()\n    .find(gear => gear.kit === KitType.firstAid)\n  const biotechSkill = useActiveSkill(ActiveSkillId.biotech)\n  if (!biotechSkill) return null\n\n  const bonuses: DiceGroup[] = []\n  const specialtyBonus = skillSpecialtyBonus(biotechSkill, 'First Aid')\n  if (specialtyBonus) bonuses.push(specialtyBonus)\n  if (!firstAidKit) bonuses.push({ name: 'Kit', size: -2 })\n\n  return (\n    <DicePool\n      poolKey={CharacterPoolTypes.firstAid}\n      name={'First Aid'}\n      skills={[ActiveSkillId.biotech]}\n      attrs={[CharacterAttr.logic]}\n      bonuses={bonuses}\n      dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n    />\n  )\n}\n\nconst MedkitPool: FC = () => {\n  const biotechSkill = useActiveSkill(ActiveSkillId.biotech)\n  const medKit = useAllGear().find(gear => gear.kit === KitType.medKit) as OtherGearData | undefined\n\n  if (!biotechSkill) return null\n  if (!medKit) return null\n\n  const bonuses: DiceGroup[] = []\n  if (medKit.attributes && medKit.attributes[KitAttr.medkitRating])\n    bonuses.push({ name: 'Medkit', size: medKit.attributes[KitAttr.medkitRating] as number || 0 })\n\n  return (\n    <DicePool\n      poolKey={CharacterPoolTypes.firstAid}\n      name={'MedKit'}\n      skills={[ActiveSkillId.biotech]}\n      attrs={[CharacterAttr.logic]}\n      bonuses={bonuses}\n      dmgPenaltyTypes={[DamageType.charPhysical, DamageType.charStun]}\n    />\n  )\n}\n","import { Chip, Typography } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport { FC, useState } from 'react'\n\nimport { useAttribute } from '../../System/AttributeProvider'\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { TrackCell } from '../../UI/TrackCell'\nimport { CharacterAttr } from '../CharacterAttr'\n\nexport const EdgeTracker: FC = () => {\n  const edgeSessionKey = 'char.edge'\n  const charEdgeAttr = useAttribute<number>(CharacterAttr.edge) || 0\n  const defaultEdge = parseInt(localStorage.getItem(edgeSessionKey) || charEdgeAttr.toString())\n\n  const [curValue, setCurValue] = useState<number>(defaultEdge)\n  const setEdge = (value: number) => {\n    setCurValue(value)\n    localStorage.setItem(edgeSessionKey, value.toString())\n  }\n\n  const onToggleCell = (value: number) => {\n    if (value === curValue) {\n      setEdge(value - 1)\n    } else {\n      setEdge(value)\n    }\n  }\n\n  const onReset = () => {\n    setEdge(charEdgeAttr)\n  }\n\n  return (\n    <InfoSection>\n      <Box>\n        <Typography variant=\"h6\" sx={{ display: 'inline', marginRight: 1 }}>Edge</Typography>\n        <Chip onClick={onReset} label=\"Reset\" size=\"small\" variant=\"outlined\" sx={{ verticalAlign: 'text-bottom' }} />\n      </Box>\n      <Box sx={{ display: 'flex', textAlign: 'center', gap: 0.5 }}>\n        <Box sx={{ flexGrow: 0.5 }}>\n          <TrackCell onClick={() => setEdge(0)}>0</TrackCell>\n        </Box>\n        {new Array(7).fill(null).map((_, index) => (\n          <Box key={index} sx={{ flexGrow: 1 }}>\n            <TrackCell filled={index < curValue} onClick={() => onToggleCell(index + 1)}>\n              {index + 1}\n            </TrackCell>\n          </Box>\n        ))}\n      </Box>\n    </InfoSection>\n  )\n}\n","import { Stack, Typography } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { formatSource } from '../System/Source'\nimport { SimpleInfoBlock } from '../UI/InfoBlock/SimpleInfoBlock'\nimport { Stat } from '../UI/StatBlock'\nimport { QualityData } from './QualityData'\n\ninterface ContactListProps {\n  qualities: QualityData[]\n}\n\nexport const QualitiesList: FC<ContactListProps> = ({\n  qualities,\n}) => {\n  return (\n    <Stack gap={1}>\n      {qualities.map(quality => (\n        <SimpleInfoBlock\n          key={quality.name}\n          name={quality.name}\n          attributes={\n            <>\n              {quality.source && <Stat name=\"Source\" value={formatSource(quality.source)} />}\n              {quality.bonus && <Stat name=\"Bonus\" value={quality.bonus} />}\n              {quality.cost && <Stat name=\"Cost\" value={quality.cost} />}\n              {quality.level && <Stat name=\"Level\" value={quality.level} />}\n            </>\n          }\n        >\n          <Typography variant=\"caption\">{quality.description}</Typography>\n          <Typography variant=\"caption\">{quality.gameEffect}</Typography>\n        </SimpleInfoBlock>\n      ))}\n    </Stack>\n  )\n}\n","import { Typography } from '@mui/material'\nimport { FC } from 'react'\n\nimport { QualitiesList } from '../../Qualities/QualitiesList'\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { useCharacterData } from '../CharacterProvider'\n\nexport const QualitiesSection: FC = () => {\n  const character = useCharacterData()\n  if (!character) return null\n\n  return <InfoSection>\n    <Typography variant={'h6'}>Qualities</Typography>\n    <QualitiesList qualities={character.qualities} />\n  </InfoSection>\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material'\nimport { FC } from 'react'\n\nimport { ActiveSkillData } from './ActiveSkillData'\nimport { formatSkill } from './ActiveSkillId'\n\ninterface SkillListProps {\n  skills: ActiveSkillData[]\n}\n\nexport const ActiveSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Rank</TableCell>\n          <TableCell>Attr</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => (\n          <SkillListRow key={skill.skillId} skill={skill} />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: ActiveSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.skillId}>\n      <TableCell>\n        <div>{formatSkill(skill.skillId)}</div>\n        {skill.speciality && <div>(S. {skill.speciality})</div>}\n        {skill.expertise && <div>(E. {skill.expertise})</div>}\n      </TableCell>\n      <TableCell>\n        {skill.rank}\n      </TableCell>\n      <TableCell>\n        {skill.attr}\n        {skill.altAttr && `/${skill.altAttr}`}\n      </TableCell>\n    </TableRow>\n  )\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material'\nimport { FC } from 'react'\n\nimport { KnowledgeSkillData } from './KnowledgeSkillData'\n\ninterface SkillListProps {\n  skills: KnowledgeSkillData[]\n}\n\nexport const KnowledgeSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => <SkillListRow key={skill.name} skill={skill} />)}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: KnowledgeSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.name}>\n      <TableCell colSpan={3}>{skill.name}</TableCell>\n    </TableRow>\n  )\n}\n","import { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material'\nimport { FC } from 'react'\n\nimport { LanguageSkillData } from './LanguageSkillData'\n\ninterface SkillListProps {\n  skills: LanguageSkillData[]\n}\n\nexport const LanguageSkillList: FC<SkillListProps> = ({\n  skills,\n}) => {\n  return (\n    <Table size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Name</TableCell>\n          <TableCell>Rank</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {skills.map(skill => (\n          <SkillListRow key={skill.name} skill={skill} />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\ninterface SkillListRowProps {\n  skill: LanguageSkillData\n}\n\nconst SkillListRow: FC<SkillListRowProps> = ({\n  skill,\n}) => {\n  return (\n    <TableRow key={skill.name}>\n      <TableCell>{skill.name}</TableCell>\n      <TableCell>{skill.rank}</TableCell>\n    </TableRow>\n  )\n}\n","import { Typography } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport { FC } from 'react'\n\nimport { ActiveSkillData } from '../../System/Skill/ActiveSkill/ActiveSkillData'\nimport { ActiveSkillList } from '../../System/Skill/ActiveSkill/ActiveSkillList'\nimport { KnowledgeSkillData } from '../../System/Skill/KnowledgeSkill/KnowledgeSkillData'\nimport { KnowledgeSkillList } from '../../System/Skill/KnowledgeSkill/KnowledgeSkillList'\nimport { LanguageSkillData } from '../../System/Skill/LanguageSkill/LanguageSkillData'\nimport { LanguageSkillList } from '../../System/Skill/LanguageSkill/LanguageSkillList'\nimport { SkillType } from '../../System/Skill/SkillData'\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { useCharacterData } from '../CharacterProvider'\n\nexport const SkillSection: FC = () => {\n  const character = useCharacterData()\n  if (!character) return null\n\n  const activeSkills = character.skills\n    .filter(skill => skill.type === SkillType.active)\n    .map(skill => skill as ActiveSkillData)\n\n  const languageSkills = character.skills\n    .filter(skill => skill.type === SkillType.language)\n    .map(skill => skill as LanguageSkillData)\n\n  const knowledgeSkills = character.skills\n    .filter(skill => skill.type === SkillType.knowledge)\n    .map(skill => skill as KnowledgeSkillData)\n\n  return <InfoSection>\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Skills</Typography>\n        <ActiveSkillList skills={activeSkills} />\n      </Box>\n\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Languages</Typography>\n        <LanguageSkillList skills={languageSkills} />\n      </Box>\n\n      <Box sx={{ padding: 1, flexGrow: 1 }}>\n        <Typography variant={'h6'}>Knowledge</Typography>\n        <KnowledgeSkillList skills={knowledgeSkills} />\n      </Box>\n    </Box>\n  </InfoSection>\n}\n","import { Box, Typography, useMediaQuery, useTheme } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { ContactList } from '../../Contacts/ContactList'\nimport { useAllGear } from '../../Gear/GearContext'\nimport { GearList } from '../../Gear/GearList'\nimport { isSin } from '../../Gear/License/SinData'\nimport { formatNuyen, useNuyenBalance } from '../../System/Nuyen'\nimport { InfoBlock } from '../../UI/InfoBlock/InfoBlock'\nimport { InfoSection } from '../../UI/InfoBlock/InfoSection'\nimport { Stat } from '../../UI/StatBlock'\nimport { useCharacterData } from '../CharacterProvider'\nimport { AttributesSection } from './AttributesSection'\nimport { CombatArea } from './CombatArea'\nimport { DicePoolsSection } from './DicePoolsSection'\nimport { EdgeTracker } from './EdgeTracker'\nimport { QualitiesSection } from './QualitiesSection'\nimport { SkillSection } from './SkillSection'\n\nexport const CharacterInfo: FC = () => {\n  const character = useCharacterData()\n  const sins = useAllGear().filter(isSin)\n  const theme = useTheme()\n  const mdScreenOrLarger = useMediaQuery(theme.breakpoints.up('md'))\n  const nuyenBalance = useNuyenBalance()\n\n  if (!character) return null\n\n  const bio = character.bio\n  const karma: number = character.karma.reduce((sum, entry) => sum + entry.value, 0)\n\n  const blockTitleRight = <Box sx={{ fontSize: 10, textAlign: 'right' }}>\n    <Stat name=\"Nuyen\" value={formatNuyen(nuyenBalance)} />\n    <Stat name=\"Karma\" value={karma} />\n  </Box>\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      <InfoBlock\n        title={bio.alias || bio.name} subtitle={bio.metatype} titleFontSize={50}\n        titleRight={blockTitleRight}\n      >\n        <AttributesSection />\n\n\n        <Box sx={{ display: 'flex', flexDirection: mdScreenOrLarger ? 'row-reverse' : 'column' }}>\n          <CombatArea />\n\n          <Box sx={{ flexGrow: 1 }}>\n            <EdgeTracker />\n\n            <DicePoolsSection />\n            <SkillSection />\n            <QualitiesSection />\n\n            <InfoSection>\n              <Typography variant={'h4'}>Contacts</Typography>\n              <ContactList contacts={character.contacts} />\n            </InfoSection>\n\n            <InfoSection>\n              <Typography variant={'h4'}>SINs</Typography>\n              <GearList gear={sins} />\n            </InfoSection>\n          </Box>\n        </Box>\n      </InfoBlock>\n    </Box>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { CharacterInfo } from '../../Character/CharacterInfo/CharacterInfo'\nimport { useCharacterData } from '../../Character/CharacterProvider'\n\nexport const CharacterInfoPage: FC = () => {\n  const character = useCharacterData()\n\n  if (!character) return null\n\n  return (\n    <CharacterInfo />\n  )\n}\n","import { Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material'\nimport { parseISO } from 'date-fns'\nimport { FC } from 'react'\n\nimport { formatDate } from '../Helpers'\nimport { BalanceLog } from '../System/BalanceLog'\n\ninterface BalanceLogTableProps {\n  log: BalanceLog\n\n  formatValue? (value: number): string\n}\n\nexport const BalanceLogTable: FC<BalanceLogTableProps> = ({\n  log,\n  formatValue = (value) => value,\n}) => {\n  let runningTotal = 0\n\n  const logRows = log\n    .sort((a, b) => parseISO(a.date).getTime() - parseISO(b.date).getTime())\n    .map(entry => (\n      <TableRow key={entry.id}>\n        <TableCell>{formatDate(entry.date)}</TableCell>\n        <TableCell>{entry.note}</TableCell>\n        <TableCell align=\"right\">{formatValue(entry.value)}</TableCell>\n        <TableCell align=\"right\">{formatValue(runningTotal += entry.value)}</TableCell>\n      </TableRow>\n    ))\n\n  logRows.reverse()\n\n  return (\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Note</TableCell>\n            <TableCell align=\"right\">Amount</TableCell>\n            <TableCell align=\"right\">Balance</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {logRows}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n","import { Paper } from '@mui/material'\nimport { FC } from 'react'\n\nimport { useCharacterData } from '../../Character/CharacterProvider'\nimport { BalanceLogTable } from '../../UI/BalanceLogTable'\n\nexport const KarmaPage: FC = () => {\n  const character = useCharacterData()\n  if (!character) return null\n\n  return (\n    <Paper>\n      <BalanceLogTable log={character.karma} />\n    </Paper>\n  )\n}\n","import { Typography } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { useAllGear } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\n\nexport const MiscGearPage: FC = () => {\n  const excludedGear: GearType[] = [\n    GearType.weapon,\n    GearType.vehicle,\n    GearType.augment,\n    GearType.sin,\n    GearType.license,\n  ]\n\n  const otherGear = useAllGear()\n    .filter(gear => !gear.attachedTo)\n    .filter(gear => !excludedGear.includes(gear.gearType))\n\n  return (\n    <>\n      <Typography variant={'h4'}>Other Gear</Typography>\n      <GearList gear={otherGear} />\n    </>\n  )\n}\n","import { Paper } from '@mui/material'\nimport { FC } from 'react'\n\nimport { useCharacterData } from '../../Character/CharacterProvider'\nimport { useAllGear } from '../../Gear/GearContext'\nimport { formatNuyen, useNuyenBalance } from '../../System/Nuyen'\nimport { BalanceLogTable } from '../../UI/BalanceLogTable'\nimport { Stat, StatBlock } from '../../UI/StatBlock'\n\nexport const NuyenPage: FC = () => {\n  const character = useCharacterData()\n  const nuyenBalance = useNuyenBalance()\n  const gear = useAllGear()\n  if (!character) return null\n\n  const gearTotal = gear\n    .filter(gear => typeof gear.cost === 'number')\n    .map(gear => gear.cost as number)\n    .reduce((sum, cost) => sum + cost, 0)\n\n  return (\n    <Paper>\n      <StatBlock>\n        <Stat name={'Total Balance'} value={formatNuyen(nuyenBalance)} />\n        <Stat name={'Gear Total'} value={formatNuyen(gearTotal)} />\n        <Stat name={'Net Worth'} value={formatNuyen(gearTotal + nuyenBalance)} />\n      </StatBlock>\n      <BalanceLogTable log={character.nuyen} formatValue={formatNuyen} />\n    </Paper>\n  )\n}\n","import { Typography } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\nimport { VehicleData } from '../../Gear/Vehicles/VehicleData'\n\nexport const VehiclesPage: FC = () => {\n  const vehicles = useGearOfType<VehicleData>(GearType.vehicle)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Vehicles</Typography>\n      <GearList gear={vehicles} />\n    </>\n  )\n}\n","import { Typography } from '@mui/material'\nimport React, { FC } from 'react'\n\nimport { useGearOfType } from '../../Gear/GearContext'\nimport { GearType } from '../../Gear/GearData'\nimport { GearList } from '../../Gear/GearList'\nimport { WeaponData } from '../../Gear/Weapons/WeaponData'\n\nexport const WeaponsPage: FC = () => {\n  const weapons = useGearOfType<WeaponData>(GearType.weapon)\n    .filter(gear => !gear.attachedTo)\n\n  return (\n    <>\n      <Typography variant={'h4'}>Weapons</Typography>\n      <GearList gear={weapons} />\n    </>\n  )\n}\n","import { Paper } from '@mui/material'\nimport React, { FC, useEffect, useState } from 'react'\nimport { Redirect, Route, Switch, useHistory, useParams, useRouteMatch } from 'react-router-dom'\n\nimport { Character } from '../Character/Character'\nimport { CharacterProvider } from '../Character/CharacterProvider'\nimport { loadCharacter } from '../StorageService'\nimport { CharacterNavDrawer } from '../UI/NavDrawer/CharacterNavDrawer'\nimport { AugmentsPage } from './Character/AugmentsPage'\nimport { CharacterInfoPage } from './Character/CharacterInfoPage'\nimport { KarmaPage } from './Character/KarmaPage'\nimport { MiscGearPage } from './Character/MiscGearPage'\nimport { NuyenPage } from './Character/NuyenPage'\nimport { VehiclesPage } from './Character/VehiclesPage'\nimport { WeaponsPage } from './Character/WeaponsPage'\nimport { RootLayout } from './RootLayout'\n\nexport const CharacterPage: FC = () => {\n  const history = useHistory()\n  const { path } = useRouteMatch()\n  const { characterId } = useParams<{ characterId: string }>()\n  const [character, setCharacter] = useState<Character | null>(null)\n\n  useEffect(() => {\n    const character = loadCharacter(characterId)\n    if (character === null) history.push('/')\n    setCharacter(character)\n  }, [history, characterId])\n\n  if (!character) { return <Paper>Loading...</Paper>}\n\n  return (\n    <CharacterProvider character={character}>\n      <RootLayout NavDrawer={CharacterNavDrawer}>\n        <Switch>\n          <Route path={`${path}/weapons`} component={WeaponsPage} />\n          <Route path={`${path}/vehicles`} component={VehiclesPage} />\n          <Route path={`${path}/augments`} component={AugmentsPage} />\n          <Route path={`${path}/misc`} component={MiscGearPage} />\n          <Route path={`${path}/karma`} component={KarmaPage} />\n          <Route path={`${path}/nuyen`} component={NuyenPage} />\n          <Route path={`${path}/`} component={CharacterInfoPage} />\n          <Route><Redirect to=\"/\" /></Route>\n        </Switch>\n      </RootLayout>\n    </CharacterProvider>\n  )\n}\n","import React, { FC } from 'react'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\n\nimport { AppThemeProvider } from './AppThemeProvider'\nimport { AuthProvider } from './Auth/AuthProvider'\nimport { BuilderPage } from './Character/CharacterBuilder/BuilderPage'\nimport { CharacterListPage } from './Pages/CharacterListPage'\nimport { CharacterPage } from './Pages/CharacterPage'\nimport { loadCharacters } from './StorageService'\n\nloadCharacters()\n\nconst App: FC = () => {\n  return (\n    <HashRouter>\n      <AppThemeProvider>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/characters\" component={CharacterListPage} />\n            <Route path=\"/build\" component={BuilderPage} />\n            <Route path=\"/:characterId\" component={CharacterPage} />\n            <Route><Redirect to=\"/characters\" /></Route>\n          </Switch>\n        </AuthProvider>\n      </AppThemeProvider>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}